{"id":"0d52d958bec1e8a63aaa1c2a7fa3e809","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/CommitRecover.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"./libraries/Pietrzak_VDF.sol\";\n//import ownable\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Bicorn-RX Commit-Reveal-Recover\n * @author Justin g\n * @notice This contract is for generating random number\n *    1. Commit: participants commit their value\n *    2. Reveal: participants reveal their value\n *    3. Finished: Calculate or recover the random number\n *    4. go to 1\n */\ncontract CommitRecover is Ownable {\n    /* Type declaration */\n    /**\n     * @notice Stages of the contract\n     * @notice Recover can be performed in the Reveal and Finished stages.\n     */\n    enum Stages {\n        Commit,\n        Reveal,\n        Finished\n    }\n    struct ValueAtRound {\n        uint256 omega; // the random number\n        uint256 bStar; //hash of commitsString\n        uint256 numOfParticipants; // number of participants\n        uint256 g; // a value generated from the generator list\n        uint256 h; // a value generated from the VDF(g)\n        uint256 n; // modulor\n        uint256 T;\n        bool isCompleted; // omega is finalized when this is true\n        bool isAllRevealed; // true when all participants have revealed\n    }\n    struct CommitRevealValue {\n        uint256 c;\n        uint256 a;\n        address participantAddress;\n    }\n    struct UserAtRound {\n        uint256 index; // index of the commitRevealValues\n        bool committed; // true if committed\n        bool revealed; // true if revealed\n    }\n\n    /* State variables */\n    uint256 public startTime;\n    uint256 public commitDuration;\n    uint256 public commitRevealDuration; //commit + reveal period, commitRevealDuration - commitDuration => revealDuration\n    uint256 public count; //This variable is used to keep track of the number of commitments and reveals, and to check if anything has been committed when moving to the reveal stage.\n    uint256 public round; //first round is 1, second round is 2, ...\n    string public commitsString; //concatenated string of commits\n    Stages public stage;\n    //bool public isHAndBStarSet;\n    mapping(uint256 round => mapping(uint256 index => CommitRevealValue)) public commitRevealValues; //\n    mapping(uint256 round => ValueAtRound omega) public valuesAtRound; // 1 => ValueAtRound(omega, isCompleted, ...), 2 => ValueAtRound(omega, isCompleted, ...), ...\n    mapping(address owner => mapping(uint256 round => UserAtRound user)) public userInfosAtRound;\n\n    /* Events */\n    event CommitC(\n        address participant,\n        uint256 commit,\n        string commitsString,\n        uint256 commitCount,\n        uint256 commitTimestamp\n    );\n    event RevealA(address participant, uint256 a, uint256 revealLeftCount, uint256 revealTimestamp);\n    event Recovered(\n        address msgSender,\n        uint256 recov,\n        uint256 omegaRecov,\n        uint256 recoveredTimestamp\n    );\n    event Start(\n        address msgSender,\n        uint256 startTime,\n        uint256 commitDuration,\n        uint256 commitRevealDuration,\n        uint256 n,\n        uint256 g,\n        uint256 h,\n        uint256 T,\n        uint256 round\n    );\n    event CalculatedOmega(\n        uint256 round,\n        uint256 omega,\n        uint256 calculatedTimestamp,\n        bool isCompleted\n    );\n\n    modifier shouldBeLessThanN(uint256 _value) {\n        require(_value < valuesAtRound[round].n, \"GreaterOrEqualThanN\");\n        _;\n    }\n\n    /* Functions */\n    /**\n     */\n    constructor() {\n        stage = Stages.Finished;\n    }\n\n    /**\n     * @param _commit participant's commit value\n     * @notice Commit function\n     * @notice The participant's commit value must be less than the modulor\n     * @notice The participant can only commit once\n     * @notice check period, update stage if needed, revert if not currently at commit stage\n     */\n    function commit(\n        uint256 _commit,\n        address _userAddress\n    ) public shouldBeLessThanN(_commit) onlyOwner {\n        require(!userInfosAtRound[_userAddress][round].committed, \"AlreadyCommitted\");\n        checkStage();\n        equalStage(Stages.Commit);\n        uint256 _count = count;\n        string memory _commitsString = commitsString;\n        _commitsString = string.concat(_commitsString, Pietrzak_VDF.toString(_commit));\n        userInfosAtRound[_userAddress][round] = UserAtRound(_count, true, false);\n        commitRevealValues[round][_count] = CommitRevealValue(_commit, 0, _userAddress); //index starts from 0, so _count -1\n        commitsString = _commitsString;\n        count = ++_count;\n        emit CommitC(_userAddress, _commit, _commitsString, _count, block.timestamp);\n    }\n\n    /**\n     * @param _a participant's reveal value\n     * @notice Reveal function\n     * @notice h must be set before reveal\n     * @notice participant must have committed\n     * @notice participant must not have revealed\n     * @notice The participant's reveal value must match the commit value\n     * @notice The participant's reveal value must be less than the modulor\n     * @notice check period, update stage if needed, revert if not currently at reveal stage\n     * @notice update omega, count\n     * @notice if count == 0, update valuesAtRound, stage\n     * @notice update userInfosAtRound\n     */\n    function reveal(uint256 _a, address _userAddress) public shouldBeLessThanN(_a) {\n        uint256 _round = round;\n        UserAtRound memory _user = userInfosAtRound[_userAddress][_round];\n        require(_user.committed, \"NotCommittedParticipant\");\n        require(!_user.revealed, \"AlreadyRevealed\");\n        require(\n            Pietrzak_VDF.powerModN(valuesAtRound[_round].g, _a, valuesAtRound[_round].n) ==\n                commitRevealValues[_round][_user.index].c,\n            \"ANotMatchCommit\"\n        );\n        checkStage();\n        equalStage(Stages.Reveal);\n        uint256 _count = --count;\n        commitRevealValues[_round][_user.index].a = _a;\n        if (_count == 0) {\n            stage = Stages.Finished;\n            valuesAtRound[_round].isAllRevealed = true;\n        }\n        userInfosAtRound[_userAddress][_round].revealed = true;\n        emit RevealA(_userAddress, _a, _count, block.timestamp);\n    }\n\n    function calculateOmega() public returns (uint256) {\n        uint256 _round = round;\n        require(valuesAtRound[_round].isAllRevealed, \"NotAllRevealed\");\n        require(!valuesAtRound[_round].isCompleted, \"OmegaAlreadyCompleted\");\n        checkStage();\n        equalStage(Stages.Finished);\n        uint256 _numOfParticipants = valuesAtRound[_round].numOfParticipants;\n        uint256 _omega = 1;\n        uint256 _bStar = valuesAtRound[_round].bStar;\n        uint256 _h = valuesAtRound[round].h;\n        uint256 _n = valuesAtRound[round].n;\n        bool _isCompleted = true;\n        for (uint256 i = 0; i < _numOfParticipants; i++) {\n            _omega = mulmod(\n                _omega,\n                Pietrzak_VDF.powerModN(\n                    Pietrzak_VDF.powerModN(\n                        _h,\n                        uint256(\n                            keccak256(\n                                abi.encodePacked(\n                                    Pietrzak_VDF.toString(commitRevealValues[_round][i].c),\n                                    Pietrzak_VDF.toString(_bStar)\n                                )\n                            )\n                        ) % _n,\n                        _n\n                    ),\n                    commitRevealValues[_round][i].a,\n                    _n\n                ),\n                _n\n            );\n        }\n        valuesAtRound[_round].omega = _omega;\n        valuesAtRound[_round].isCompleted = _isCompleted; //false when not all participants have revealed\n        stage = Stages.Finished;\n        emit CalculatedOmega(_round, _omega, block.timestamp, _isCompleted);\n        return _omega;\n    }\n\n    /**\n     * @param proofs the proof of the recovered value\n     * @notice Recover function\n     * @notice The recovered value must be less than the modulor\n     * @notice revert if currently at commit stage\n     * @notice revert if count == 0 meaning no one has committed\n     * @notice calculate and finalize omega\n     */\n    function recover(\n        uint256 _round,\n        Pietrzak_VDF.VDFClaim[] calldata proofs\n    ) public shouldBeLessThanN(proofs[0].y) {\n        uint256 recov = 1;\n        uint256 _n = valuesAtRound[_round].n;\n        uint256 _bStar = valuesAtRound[_round].bStar;\n        //require(stage != Stages.Commit, \"FunctionInvalidAtThisStage\");\n        checkStage();\n        overStage(Stages.Commit);\n        require(!valuesAtRound[_round].isCompleted, \"OmegaAlreadyCompleted\");\n        require(valuesAtRound[_round].T == proofs[0].T, \"TNotMatched\");\n        Pietrzak_VDF.verifyRecursiveHalvingProof(proofs);\n        for (uint256 i = 0; i < valuesAtRound[_round].numOfParticipants; i++) {\n            uint256 _c = commitRevealValues[_round][i].c;\n            uint256 temp = Pietrzak_VDF.powerModN(\n                _c,\n                uint256(\n                    keccak256(\n                        abi.encodePacked(Pietrzak_VDF.toString(_c), Pietrzak_VDF.toString(_bStar))\n                    )\n                ) % _n,\n                _n\n            );\n            recov = mulmod(recov, temp, _n);\n        }\n        require(recov == proofs[0].x, \"RecovNotMatchX\");\n        valuesAtRound[_round].isCompleted = true;\n        valuesAtRound[_round].omega = proofs[0].y;\n        stage = Stages.Finished;\n        emit Recovered(msg.sender, recov, proofs[0].y, block.timestamp);\n    }\n\n    /**\n     *\n     * @notice Start function\n     * @notice The contract must be in the Finished stage\n     * @notice The commit period must be less than the commit + reveal period\n     * @notice The g value must be less than the modulor\n     * @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\n     * @notice increase round\n     */\n    function start(\n        uint256 _commitDuration,\n        uint256 _commitRevealDuration,\n        uint256 _n,\n        Pietrzak_VDF.VDFClaim[] memory _proofs,\n        address _userAddress\n    ) public {\n        require(_proofs[0].x < _n, \"GreaterOrEqualThanN\");\n\n        require(\n            _commitDuration < _commitRevealDuration,\n            \"CommitRevealDurationLessThanCommitDuration\"\n        );\n        require(stage == Stages.Finished, \"StageNotFinished\");\n        Pietrzak_VDF.verifyRecursiveHalvingProof(_proofs);\n        round += 1;\n        stage = Stages.Commit;\n        startTime = block.timestamp;\n        commitDuration = _commitDuration;\n        commitRevealDuration = _commitRevealDuration;\n        valuesAtRound[round].T = _proofs[0].T;\n        valuesAtRound[round].g = _proofs[0].x;\n        valuesAtRound[round].h = _proofs[0].y;\n        valuesAtRound[round].n = _n;\n        count = 0;\n        commitsString = \"\";\n        emit Start(\n            _userAddress,\n            block.timestamp,\n            _commitDuration,\n            _commitRevealDuration,\n            _n,\n            _proofs[0].x,\n            _proofs[0].y,\n            _proofs[0].T,\n            round\n        );\n    }\n\n    /**\n     * @notice checkStage function\n     * @notice revert if the current stage is not the given stage\n     * @notice this function is used to check if the current stage is the given stage\n     * @notice it will update the stage to the next stage if needed\n     */\n    function checkStage() public {\n        uint256 _startTime = startTime;\n        if (stage == Stages.Commit && block.timestamp >= _startTime + commitDuration) {\n            if (count != 0) {\n                nextStage();\n                valuesAtRound[round].numOfParticipants = count;\n                uint256 _bStar = uint256(keccak256(abi.encodePacked(commitsString))) %\n                    valuesAtRound[round].n;\n                valuesAtRound[round].bStar = _bStar;\n            } else {\n                stage = Stages.Finished;\n            }\n        }\n        if (\n            stage == Stages.Reveal &&\n            (block.timestamp >= _startTime + commitRevealDuration || count == 0)\n        ) {\n            nextStage();\n        }\n    }\n\n    function equalStage(Stages _stage) internal view {\n        require(stage == _stage, \"FunctionInvalidAtThisStage\");\n    }\n\n    function overStage(Stages _stage) internal view {\n        require(stage > _stage, \"FunctionInvalidAtThisStage\");\n    }\n\n    /**\n     * @notice NextStage function\n     * @notice update stage to the next stage\n     * @notice revert if the current stage is Finished\n     */\n    function nextStage() internal {\n        require(stage != Stages.Finished, \"AllFinished\");\n        stage = Stages(addmod(uint256(stage), 1, 3));\n    }\n}\n"},"contracts/interfaces/ICommitRecover.sol":{"content":"// SPDX-License-Identifier: MIT\nimport \"../libraries/Pietrzak_VDF.sol\";\npragma solidity ^0.8.19;\n\ninterface ICommitRecover {\n    function commit(uint256 _commit) external;\n\n    function reveal(uint256 _a) external;\n\n    function calculateOmega() external returns (uint256);\n\n    function recover(uint256 _round, Pietrzak_VDF.VDFClaim[] calldata proofs) external;\n\n    function start(\n        uint256 _commitDuration,\n        uint256 _commitRevealDuration,\n        uint256 _n,\n        Pietrzak_VDF.VDFClaim[] memory _proofs\n    ) external;\n\n    function checkStage() external;\n}\n"},"contracts/libraries/Pietrzak_VDF.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nlibrary Pietrzak_VDF {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n\n    struct VDFClaim {\n        uint256 n;\n        uint256 x;\n        uint256 y;\n        uint256 T;\n        uint256 v;\n    }\n\n    struct SingHalvProofOutput {\n        bool verified;\n        bool calculated;\n        uint256 x_prime;\n        uint256 y_prime;\n        uint256 T_half;\n    }\n\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\n    }\n\n    function processSingleHalvingProof(\n        VDFClaim memory vdfClaim\n    ) internal pure returns (SingHalvProofOutput memory) {\n        if (vdfClaim.T == 1) {\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\n                return SingHalvProofOutput(true, false, 0, 0, 0);\n            } else {\n                return SingHalvProofOutput(false, false, 0, 0, 0);\n            }\n        } else {\n            uint256 tHalf;\n            uint256 y = vdfClaim.y;\n            uint256 r = modHash(\n                vdfClaim.x,\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\n            );\n\n            if (vdfClaim.T & 1 == 0) {\n                tHalf = vdfClaim.T / 2;\n            } else {\n                tHalf = (vdfClaim.T + 1) / 2;\n                y = (y * y) % vdfClaim.n;\n            }\n            return\n                SingHalvProofOutput(\n                    true,\n                    true,\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\n                    tHalf\n                );\n        }\n    }\n\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\n        uint256 proofSize = proofList.length;\n\n        for (uint256 i = 0; i < proofSize; i++) {\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\n            if (!output.verified) {\n                return false;\n            } else {\n                if (!output.calculated) return true;\n                else if (output.x_prime != proofList[i + 1].x) return false;\n                else if (output.y_prime != proofList[i + 1].y) return false;\n                else if (output.T_half != proofList[i + 1].T) return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param a base value\n     * @param b exponent value\n     * @return result of a^b mod N\n     * @notice powerModN function\n     * @notice calculate a^b mod N\n     * @notice O(log b) complexity\n     */\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\n        uint256 result = 1;\n        while (b > 0) {\n            if (b & 1 == 1) {\n                result = mulmod(result, a, n);\n            }\n            a = mulmod(a, a, n);\n            b = b / 2;\n        }\n        return result;\n    }\n\n    /**\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[134],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":135,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,134],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"111:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"Context","nameLocation":"626:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"702:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:1","memberName":"sender","nodeType":"MemberAccess","src":"719:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"712:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"659:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"693:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:1"},"scope":134,"src":"640:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"809:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:1","memberName":"data","nodeType":"MemberAccess","src":"826:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"819:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"759:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"793:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:1"},"scope":134,"src":"742:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":135,"src":"608:235:1","usedErrors":[]}],"src":"86:758:1"},"id":1},"contracts/CommitRecover.sol":{"ast":{"absolutePath":"contracts/CommitRecover.sol","exportedSymbols":{"CommitRecover":[1123],"Context":[134],"Ownable":[112],"Pietrzak_VDF":[1674]},"id":1124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:2"},{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","file":"./libraries/Pietrzak_VDF.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1124,"sourceUnit":1675,"src":"59:38:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1124,"sourceUnit":113,"src":"115:52:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":140,"name":"Ownable","nameLocations":["495:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"495:7:2"},"id":141,"nodeType":"InheritanceSpecifier","src":"495:7:2"}],"canonicalName":"CommitRecover","contractDependencies":[],"contractKind":"contract","documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"169:299:2","text":" @title Bicorn-RX Commit-Reveal-Recover\n @author Justin g\n @notice This contract is for generating random number\n    1. Commit: participants commit their value\n    2. Reveal: participants reveal their value\n    3. Finished: Calculate or recover the random number\n    4. go to 1"},"fullyImplemented":true,"id":1123,"linearizedBaseContracts":[1123,112,134],"name":"CommitRecover","nameLocation":"478:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CommitRecover.Stages","id":145,"members":[{"id":142,"name":"Commit","nameLocation":"687:6:2","nodeType":"EnumValue","src":"687:6:2"},{"id":143,"name":"Reveal","nameLocation":"703:6:2","nodeType":"EnumValue","src":"703:6:2"},{"id":144,"name":"Finished","nameLocation":"719:8:2","nodeType":"EnumValue","src":"719:8:2"}],"name":"Stages","nameLocation":"670:6:2","nodeType":"EnumDefinition","src":"665:68:2"},{"canonicalName":"CommitRecover.ValueAtRound","id":164,"members":[{"constant":false,"id":147,"mutability":"mutable","name":"omega","nameLocation":"776:5:2","nodeType":"VariableDeclaration","scope":164,"src":"768:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"bStar","nameLocation":"820:5:2","nodeType":"VariableDeclaration","scope":164,"src":"812:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"numOfParticipants","nameLocation":"867:17:2","nodeType":"VariableDeclaration","scope":164,"src":"859:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"g","nameLocation":"928:1:2","nodeType":"VariableDeclaration","scope":164,"src":"920:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"h","nameLocation":"992:1:2","nodeType":"VariableDeclaration","scope":164,"src":"984:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"n","nameLocation":"1048:1:2","nodeType":"VariableDeclaration","scope":164,"src":"1040:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"T","nameLocation":"1078:1:2","nodeType":"VariableDeclaration","scope":164,"src":"1070:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"isCompleted","nameLocation":"1094:11:2","nodeType":"VariableDeclaration","scope":164,"src":"1089:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":160,"name":"bool","nodeType":"ElementaryTypeName","src":"1089:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"isAllRevealed","nameLocation":"1160:13:2","nodeType":"VariableDeclaration","scope":164,"src":"1155:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"1155:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValueAtRound","nameLocation":"745:12:2","nodeType":"StructDefinition","scope":1123,"src":"738:486:2","visibility":"public"},{"canonicalName":"CommitRecover.CommitRevealValue","id":171,"members":[{"constant":false,"id":166,"mutability":"mutable","name":"c","nameLocation":"1272:1:2","nodeType":"VariableDeclaration","scope":171,"src":"1264:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"a","nameLocation":"1291:1:2","nodeType":"VariableDeclaration","scope":171,"src":"1283:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"participantAddress","nameLocation":"1310:18:2","nodeType":"VariableDeclaration","scope":171,"src":"1302:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CommitRevealValue","nameLocation":"1236:17:2","nodeType":"StructDefinition","scope":1123,"src":"1229:106:2","visibility":"public"},{"canonicalName":"CommitRecover.UserAtRound","id":178,"members":[{"constant":false,"id":173,"mutability":"mutable","name":"index","nameLocation":"1377:5:2","nodeType":"VariableDeclaration","scope":178,"src":"1369:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"committed","nameLocation":"1432:9:2","nodeType":"VariableDeclaration","scope":178,"src":"1427:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"1427:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"revealed","nameLocation":"1477:8:2","nodeType":"VariableDeclaration","scope":178,"src":"1472:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"UserAtRound","nameLocation":"1347:11:2","nodeType":"StructDefinition","scope":1123,"src":"1340:172:2","visibility":"public"},{"constant":false,"functionSelector":"78e97925","id":180,"mutability":"mutable","name":"startTime","nameLocation":"1559:9:2","nodeType":"VariableDeclaration","scope":1123,"src":"1544:24:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6f833811","id":182,"mutability":"mutable","name":"commitDuration","nameLocation":"1589:14:2","nodeType":"VariableDeclaration","scope":1123,"src":"1574:29:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"73fa4f46","id":184,"mutability":"mutable","name":"commitRevealDuration","nameLocation":"1624:20:2","nodeType":"VariableDeclaration","scope":1123,"src":"1609:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"06661abd","id":186,"mutability":"mutable","name":"count","nameLocation":"1747:5:2","nodeType":"VariableDeclaration","scope":1123,"src":"1732:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"146ca531","id":188,"mutability":"mutable","name":"round","nameLocation":"1930:5:2","nodeType":"VariableDeclaration","scope":1123,"src":"1915:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dca669e4","id":190,"mutability":"mutable","name":"commitsString","nameLocation":"1998:13:2","nodeType":"VariableDeclaration","scope":1123,"src":"1984:27:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":189,"name":"string","nodeType":"ElementaryTypeName","src":"1984:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"c040e6b8","id":193,"mutability":"mutable","name":"stage","nameLocation":"2064:5:2","nodeType":"VariableDeclaration","scope":1123,"src":"2050:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":192,"nodeType":"UserDefinedTypeName","pathNode":{"id":191,"name":"Stages","nameLocations":["2050:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"2050:6:2"},"referencedDeclaration":145,"src":"2050:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"public"},{"constant":false,"functionSelector":"22fadc28","id":200,"mutability":"mutable","name":"commitRevealValues","nameLocation":"2186:18:2","nodeType":"VariableDeclaration","scope":1123,"src":"2109:95:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))"},"typeName":{"id":199,"keyName":"round","keyNameLocation":"2125:5:2","keyType":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2109:69:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":198,"keyName":"index","keyNameLocation":"2150:5:2","keyType":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2134:43:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":197,"nodeType":"UserDefinedTypeName","pathNode":{"id":196,"name":"CommitRevealValue","nameLocations":["2159:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"2159:17:2"},"referencedDeclaration":171,"src":"2159:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage_ptr","typeString":"struct CommitRecover.CommitRevealValue"}}}},"visibility":"public"},{"constant":false,"functionSelector":"77f0ade9","id":205,"mutability":"mutable","name":"valuesAtRound","nameLocation":"2265:13:2","nodeType":"VariableDeclaration","scope":1123,"src":"2213:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound)"},"typeName":{"id":204,"keyName":"round","keyNameLocation":"2229:5:2","keyType":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2213:44:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound)"},"valueName":"omega","valueNameLocation":"2251:5:2","valueType":{"id":203,"nodeType":"UserDefinedTypeName","pathNode":{"id":202,"name":"ValueAtRound","nameLocations":["2238:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":164,"src":"2238:12:2"},"referencedDeclaration":164,"src":"2238:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage_ptr","typeString":"struct CommitRecover.ValueAtRound"}}},"visibility":"public"},{"constant":false,"functionSelector":"b0e9eb3f","id":212,"mutability":"mutable","name":"userInfosAtRound","nameLocation":"2455:16:2","nodeType":"VariableDeclaration","scope":1123,"src":"2379:92:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))"},"typeName":{"id":211,"keyName":"owner","keyNameLocation":"2395:5:2","keyType":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2379:68:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":210,"keyName":"round","keyNameLocation":"2420:5:2","keyType":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2404:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound)"},"valueName":"user","valueNameLocation":"2441:4:2","valueType":{"id":209,"nodeType":"UserDefinedTypeName","pathNode":{"id":208,"name":"UserAtRound","nameLocations":["2429:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"2429:11:2"},"referencedDeclaration":178,"src":"2429:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage_ptr","typeString":"struct CommitRecover.UserAtRound"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"bd41a700367cdf3254812a81baad606f9d6102e946f1bb28aab0a4afe25ef0c9","id":224,"name":"CommitC","nameLocation":"2501:7:2","nodeType":"EventDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"participant","nameLocation":"2526:11:2","nodeType":"VariableDeclaration","scope":224,"src":"2518:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2518:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"commit","nameLocation":"2555:6:2","nodeType":"VariableDeclaration","scope":224,"src":"2547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"commitsString","nameLocation":"2578:13:2","nodeType":"VariableDeclaration","scope":224,"src":"2571:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"2571:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"commitCount","nameLocation":"2609:11:2","nodeType":"VariableDeclaration","scope":224,"src":"2601:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":false,"mutability":"mutable","name":"commitTimestamp","nameLocation":"2638:15:2","nodeType":"VariableDeclaration","scope":224,"src":"2630:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2508:151:2"},"src":"2495:165:2"},{"anonymous":false,"eventSelector":"0167147e5476fb37532a0aab79dea3eb6b8fe0fbd723ac6025b0de29237b0496","id":234,"name":"RevealA","nameLocation":"2671:7:2","nodeType":"EventDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"indexed":false,"mutability":"mutable","name":"participant","nameLocation":"2687:11:2","nodeType":"VariableDeclaration","scope":234,"src":"2679:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"indexed":false,"mutability":"mutable","name":"a","nameLocation":"2708:1:2","nodeType":"VariableDeclaration","scope":234,"src":"2700:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"indexed":false,"mutability":"mutable","name":"revealLeftCount","nameLocation":"2719:15:2","nodeType":"VariableDeclaration","scope":234,"src":"2711:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"indexed":false,"mutability":"mutable","name":"revealTimestamp","nameLocation":"2744:15:2","nodeType":"VariableDeclaration","scope":234,"src":"2736:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:82:2"},"src":"2665:96:2"},{"anonymous":false,"eventSelector":"03fc2d4f2e2e4e84069307a4d3a9b7ad25d93e2026627031a87b54a1c61907ce","id":244,"name":"Recovered","nameLocation":"2772:9:2","nodeType":"EventDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"indexed":false,"mutability":"mutable","name":"msgSender","nameLocation":"2799:9:2","nodeType":"VariableDeclaration","scope":244,"src":"2791:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2791:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"indexed":false,"mutability":"mutable","name":"recov","nameLocation":"2826:5:2","nodeType":"VariableDeclaration","scope":244,"src":"2818:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"indexed":false,"mutability":"mutable","name":"omegaRecov","nameLocation":"2849:10:2","nodeType":"VariableDeclaration","scope":244,"src":"2841:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2841:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"recoveredTimestamp","nameLocation":"2877:18:2","nodeType":"VariableDeclaration","scope":244,"src":"2869:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2781:120:2"},"src":"2766:136:2"},{"anonymous":false,"eventSelector":"1a5e4fa05b9601af979a44c50ef7e103b9b51cd105eb42040b5817eb3e58449c","id":264,"name":"Start","nameLocation":"2913:5:2","nodeType":"EventDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":false,"mutability":"mutable","name":"msgSender","nameLocation":"2936:9:2","nodeType":"VariableDeclaration","scope":264,"src":"2928:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2963:9:2","nodeType":"VariableDeclaration","scope":264,"src":"2955:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"commitDuration","nameLocation":"2990:14:2","nodeType":"VariableDeclaration","scope":264,"src":"2982:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"commitRevealDuration","nameLocation":"3022:20:2","nodeType":"VariableDeclaration","scope":264,"src":"3014:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3014:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"n","nameLocation":"3060:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3052:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"g","nameLocation":"3079:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3071:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3071:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"h","nameLocation":"3098:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3090:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"T","nameLocation":"3117:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3109:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"3136:5:2","nodeType":"VariableDeclaration","scope":264,"src":"3128:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:229:2"},"src":"2907:241:2"},{"anonymous":false,"eventSelector":"31d4d513959d79380d7f8af557ac2408b4d6c2cf59af943dd997a11100520f66","id":274,"name":"CalculatedOmega","nameLocation":"3159:15:2","nodeType":"EventDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"3192:5:2","nodeType":"VariableDeclaration","scope":274,"src":"3184:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3184:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"omega","nameLocation":"3215:5:2","nodeType":"VariableDeclaration","scope":274,"src":"3207:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"calculatedTimestamp","nameLocation":"3238:19:2","nodeType":"VariableDeclaration","scope":274,"src":"3230:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"isCompleted","nameLocation":"3272:11:2","nodeType":"VariableDeclaration","scope":274,"src":"3267:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"3267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:115:2"},"src":"3153:137:2"},{"body":{"id":289,"nodeType":"Block","src":"3339:91:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3357:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":280,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"3366:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":282,"indexExpression":{"id":281,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3380:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3366:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3387:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3366:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3357:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"477265617465724f72457175616c5468616e4e","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""},"value":"GreaterOrEqualThanN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3349:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"3349:63:2"},{"id":288,"nodeType":"PlaceholderStatement","src":"3422:1:2"}]},"id":290,"name":"shouldBeLessThanN","nameLocation":"3305:17:2","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"_value","nameLocation":"3331:6:2","nodeType":"VariableDeclaration","scope":290,"src":"3323:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3323:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3322:16:2"},"src":"3296:134:2","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"3486:40:2","statements":[{"expression":{"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":293,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3496:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":294,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"3504:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3511:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"3504:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"3496:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":297,"nodeType":"ExpressionStatement","src":"3496:23:2"}]},"id":299,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"3483:2:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"3486:0:2"},"scope":1123,"src":"3472:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":393,"nodeType":"Block","src":"3970:684:2","statements":[{"expression":{"arguments":[{"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3988:48:2","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":313,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3989:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":315,"indexExpression":{"id":314,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4006:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3989:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":317,"indexExpression":{"id":316,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4020:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3989:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4027:9:2","memberName":"committed","nodeType":"MemberAccess","referencedDeclaration":175,"src":"3989:47:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479436f6d6d6974746564","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4038:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","typeString":"literal_string \"AlreadyCommitted\""},"value":"AlreadyCommitted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","typeString":"literal_string \"AlreadyCommitted\""}],"id":312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3980:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"ExpressionStatement","src":"3980:77:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":323,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4067:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":325,"nodeType":"ExpressionStatement","src":"4067:12:2"},{"expression":{"arguments":[{"expression":{"id":327,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"4100:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4107:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"4100:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":326,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4089:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4089:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4089:25:2"},{"assignments":[332],"declarations":[{"constant":false,"id":332,"mutability":"mutable","name":"_count","nameLocation":"4132:6:2","nodeType":"VariableDeclaration","scope":393,"src":"4124:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":334,"initialValue":{"id":333,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4141:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4124:22:2"},{"assignments":[336],"declarations":[{"constant":false,"id":336,"mutability":"mutable","name":"_commitsString","nameLocation":"4170:14:2","nodeType":"VariableDeclaration","scope":393,"src":"4156:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"4156:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":338,"initialValue":{"id":337,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4187:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4156:44:2"},{"expression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":339,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4210:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":343,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4241:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":346,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":344,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"4257:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4270:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"4257:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4227:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":340,"name":"string","nodeType":"ElementaryTypeName","src":"4227:6:2","typeDescriptions":{}}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4234:6:2","memberName":"concat","nodeType":"MemberAccess","src":"4227:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4227:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4210:78:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":350,"nodeType":"ExpressionStatement","src":"4210:78:2"},{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":351,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4298:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":354,"indexExpression":{"id":352,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4315:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4298:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":355,"indexExpression":{"id":353,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4329:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4298:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":357,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4364:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":356,"name":"UserAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"4338:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserAtRound_$178_storage_ptr_$","typeString":"type(struct CommitRecover.UserAtRound storage pointer)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4338:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"src":"4298:72:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":362,"nodeType":"ExpressionStatement","src":"4298:72:2"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":363,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4380:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":366,"indexExpression":{"id":364,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4399:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4380:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":367,"indexExpression":{"id":365,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4406:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4380:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":369,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4443:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":371,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4446:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"id":368,"name":"CommitRevealValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"4416:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CommitRevealValue_$171_storage_ptr_$","typeString":"type(struct CommitRecover.CommitRevealValue storage pointer)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_memory_ptr","typeString":"struct CommitRecover.CommitRevealValue memory"}},"src":"4380:79:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":374,"nodeType":"ExpressionStatement","src":"4380:79:2"},{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":375,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4505:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":376,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4521:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4505:30:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":378,"nodeType":"ExpressionStatement","src":"4505:30:2"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":379,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4545:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4553:8:2","subExpression":{"id":380,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4555:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4545:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":383,"nodeType":"ExpressionStatement","src":"4545:16:2"},{"eventCall":{"arguments":[{"id":385,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4584:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":387,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4607:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":388,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"4623:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4631:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"4631:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"CommitC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4576:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,uint256)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"4571:76:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3532:312:2","text":" @param _commit participant's commit value\n @notice Commit function\n @notice The participant's commit value must be less than the modulor\n @notice The participant can only commit once\n @notice check period, update stage if needed, revert if not currently at commit stage"},"functionSelector":"0d64b071","id":394,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":307,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3951:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":308,"kind":"modifierInvocation","modifierName":{"id":306,"name":"shouldBeLessThanN","nameLocations":["3933:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"3933:17:2"},"nodeType":"ModifierInvocation","src":"3933:26:2"},{"id":310,"kind":"modifierInvocation","modifierName":{"id":309,"name":"onlyOwner","nameLocations":["3960:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3960:9:2"},"nodeType":"ModifierInvocation","src":"3960:9:2"}],"name":"commit","nameLocation":"3858:6:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"_commit","nameLocation":"3882:7:2","nodeType":"VariableDeclaration","scope":394,"src":"3874:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"_userAddress","nameLocation":"3907:12:2","nodeType":"VariableDeclaration","scope":394,"src":"3899:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"3899:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:61:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"3970:0:2"},"scope":1123,"src":"3849:805:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"5345:843:2","statements":[{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"_round","nameLocation":"5363:6:2","nodeType":"VariableDeclaration","scope":512,"src":"5355:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5355:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":408,"initialValue":{"id":407,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"5372:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5355:22:2"},{"assignments":[411],"declarations":[{"constant":false,"id":411,"mutability":"mutable","name":"_user","nameLocation":"5406:5:2","nodeType":"VariableDeclaration","scope":512,"src":"5387:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound"},"typeName":{"id":410,"nodeType":"UserDefinedTypeName","pathNode":{"id":409,"name":"UserAtRound","nameLocations":["5387:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"5387:11:2"},"referencedDeclaration":178,"src":"5387:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage_ptr","typeString":"struct CommitRecover.UserAtRound"}},"visibility":"internal"}],"id":417,"initialValue":{"baseExpression":{"baseExpression":{"id":412,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5414:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":414,"indexExpression":{"id":413,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5431:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5414:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":416,"indexExpression":{"id":415,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5445:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5414:38:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5387:65:2"},{"expression":{"arguments":[{"expression":{"id":419,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5470:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5476:9:2","memberName":"committed","nodeType":"MemberAccess","referencedDeclaration":175,"src":"5470:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74436f6d6d69747465645061727469636970616e74","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5487:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","typeString":"literal_string \"NotCommittedParticipant\""},"value":"NotCommittedParticipant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","typeString":"literal_string \"NotCommittedParticipant\""}],"id":418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5462:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5462:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":423,"nodeType":"ExpressionStatement","src":"5462:51:2"},{"expression":{"arguments":[{"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5531:15:2","subExpression":{"expression":{"id":425,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5532:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5538:8:2","memberName":"revealed","nodeType":"MemberAccess","referencedDeclaration":177,"src":"5532:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647952657665616c6564","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5548:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","typeString":"literal_string \"AlreadyRevealed\""},"value":"AlreadyRevealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","typeString":"literal_string \"AlreadyRevealed\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5523:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5523:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"5523:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"baseExpression":{"id":434,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5620:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":436,"indexExpression":{"id":435,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5634:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5620:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5642:1:2","memberName":"g","nodeType":"MemberAccess","referencedDeclaration":153,"src":"5620:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":438,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5645:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":439,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5649:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":441,"indexExpression":{"id":440,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5663:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5649:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5671:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"5649:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":432,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"5597:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5610:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"5597:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":444,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5693:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":446,"indexExpression":{"id":445,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5712:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5693:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":449,"indexExpression":{"expression":{"id":447,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5720:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5726:5:2","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":173,"src":"5720:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5693:39:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5733:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"5693:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:137:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414e6f744d61746368436f6d6d6974","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5748:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","typeString":"literal_string \"ANotMatchCommit\""},"value":"ANotMatchCommit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","typeString":"literal_string \"ANotMatchCommit\""}],"id":431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5576:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5576:199:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"5576:199:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":455,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5785:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"5785:12:2"},{"expression":{"arguments":[{"expression":{"id":459,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"5818:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5825:6:2","memberName":"Reveal","nodeType":"MemberAccess","referencedDeclaration":143,"src":"5818:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":458,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"5807:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5807:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"5807:25:2"},{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"_count","nameLocation":"5850:6:2","nodeType":"VariableDeclaration","scope":512,"src":"5842:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":467,"initialValue":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"5859:7:2","subExpression":{"id":465,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5861:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5842:24:2"},{"expression":{"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":468,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5876:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":472,"indexExpression":{"id":469,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5895:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":473,"indexExpression":{"expression":{"id":470,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5903:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5909:5:2","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":173,"src":"5903:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:39:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5916:1:2","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":168,"src":"5876:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":475,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5920:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:46:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":477,"nodeType":"ExpressionStatement","src":"5876:46:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":478,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"5936:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5946:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5936:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"5932:121:2","trueBody":{"id":493,"nodeType":"Block","src":"5949:104:2","statements":[{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":481,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5963:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":482,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"5971:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5978:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"5971:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"5963:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":485,"nodeType":"ExpressionStatement","src":"5963:23:2"},{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":486,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6000:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":488,"indexExpression":{"id":487,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6014:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6000:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6022:13:2","memberName":"isAllRevealed","nodeType":"MemberAccess","referencedDeclaration":163,"src":"6000:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6038:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6000:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":492,"nodeType":"ExpressionStatement","src":"6000:42:2"}]}},{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":495,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6062:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":498,"indexExpression":{"id":496,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6079:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6062:30:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":499,"indexExpression":{"id":497,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6093:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6062:38:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6101:8:2","memberName":"revealed","nodeType":"MemberAccess","referencedDeclaration":177,"src":"6062:47:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6112:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6062:54:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":503,"nodeType":"ExpressionStatement","src":"6062:54:2"},{"eventCall":{"arguments":[{"id":505,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6139:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6153:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":507,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"6157:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":508,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6165:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6171:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6165:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":504,"name":"RevealA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"6131:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"EmitStatement","src":"6126:55:2"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"4660:601:2","text":" @param _a participant's reveal value\n @notice Reveal function\n @notice h must be set before reveal\n @notice participant must have committed\n @notice participant must not have revealed\n @notice The participant's reveal value must match the commit value\n @notice The participant's reveal value must be less than the modulor\n @notice check period, update stage if needed, revert if not currently at reveal stage\n @notice update omega, count\n @notice if count == 0, update valuesAtRound, stage\n @notice update userInfosAtRound"},"functionSelector":"bfb70e04","id":513,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":402,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5341:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":403,"kind":"modifierInvocation","modifierName":{"id":401,"name":"shouldBeLessThanN","nameLocations":["5323:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"5323:17:2"},"nodeType":"ModifierInvocation","src":"5323:21:2"}],"name":"reveal","nameLocation":"5275:6:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"_a","nameLocation":"5290:2:2","nodeType":"VariableDeclaration","scope":513,"src":"5282:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5282:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"_userAddress","nameLocation":"5302:12:2","nodeType":"VariableDeclaration","scope":513,"src":"5294:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"5294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5281:34:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5345:0:2"},"scope":1123,"src":"5266:922:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":669,"nodeType":"Block","src":"6245:1606:2","statements":[{"assignments":[519],"declarations":[{"constant":false,"id":519,"mutability":"mutable","name":"_round","nameLocation":"6263:6:2","nodeType":"VariableDeclaration","scope":669,"src":"6255:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":521,"initialValue":{"id":520,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6272:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6255:22:2"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":523,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6295:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":525,"indexExpression":{"id":524,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6309:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6295:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6317:13:2","memberName":"isAllRevealed","nodeType":"MemberAccess","referencedDeclaration":163,"src":"6295:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74416c6c52657665616c6564","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6332:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","typeString":"literal_string \"NotAllRevealed\""},"value":"NotAllRevealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","typeString":"literal_string \"NotAllRevealed\""}],"id":522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6287:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6287:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"ExpressionStatement","src":"6287:62:2"},{"expression":{"arguments":[{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6367:34:2","subExpression":{"expression":{"baseExpression":{"id":531,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6368:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":533,"indexExpression":{"id":532,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6382:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6368:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6390:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"6368:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6403:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""},"value":"OmegaAlreadyCompleted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""}],"id":530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6359:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6359:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"6359:68:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":539,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6437:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6437:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"6437:12:2"},{"expression":{"arguments":[{"expression":{"id":543,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"6470:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6477:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"6470:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":542,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"6459:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6459:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"6459:27:2"},{"assignments":[548],"declarations":[{"constant":false,"id":548,"mutability":"mutable","name":"_numOfParticipants","nameLocation":"6504:18:2","nodeType":"VariableDeclaration","scope":669,"src":"6496:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"6496:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":553,"initialValue":{"expression":{"baseExpression":{"id":549,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6525:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":551,"indexExpression":{"id":550,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6539:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6525:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6547:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"6525:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6496:68:2"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"_omega","nameLocation":"6582:6:2","nodeType":"VariableDeclaration","scope":669,"src":"6574:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":557,"initialValue":{"hexValue":"31","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6591:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6574:18:2"},{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"_bStar","nameLocation":"6610:6:2","nodeType":"VariableDeclaration","scope":669,"src":"6602:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":564,"initialValue":{"expression":{"baseExpression":{"id":560,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6619:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":562,"indexExpression":{"id":561,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6633:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6619:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6641:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"6619:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6602:44:2"},{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"_h","nameLocation":"6664:2:2","nodeType":"VariableDeclaration","scope":669,"src":"6656:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":571,"initialValue":{"expression":{"baseExpression":{"id":567,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6669:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":569,"indexExpression":{"id":568,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6683:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6669:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6690:1:2","memberName":"h","nodeType":"MemberAccess","referencedDeclaration":155,"src":"6669:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6656:35:2"},{"assignments":[573],"declarations":[{"constant":false,"id":573,"mutability":"mutable","name":"_n","nameLocation":"6709:2:2","nodeType":"VariableDeclaration","scope":669,"src":"6701:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":578,"initialValue":{"expression":{"baseExpression":{"id":574,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6714:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":576,"indexExpression":{"id":575,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6728:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6714:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6735:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"6714:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6701:35:2"},{"assignments":[580],"declarations":[{"constant":false,"id":580,"mutability":"mutable","name":"_isCompleted","nameLocation":"6751:12:2","nodeType":"VariableDeclaration","scope":669,"src":"6746:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":579,"name":"bool","nodeType":"ElementaryTypeName","src":"6746:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":582,"initialValue":{"hexValue":"74727565","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6766:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"6746:24:2"},{"body":{"id":638,"nodeType":"Block","src":"6829:731:2","statements":[{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":593,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6843:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":595,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6876:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":600,"name":"_h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6992:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":608,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7176:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":610,"indexExpression":{"id":609,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7195:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7176:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":612,"indexExpression":{"id":611,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7203:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7176:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7206:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"7176:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":606,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"7154:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7167:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"7154:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7154:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":617,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7268:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":615,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"7246:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7259:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"7246:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7246:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7100:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7104:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"7100:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:209:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7057:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7057:282:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7020:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"7020:7:2","typeDescriptions":{}}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:345:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":622,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7368:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7020:350:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":624,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7396:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":598,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6944:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6957:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"6944:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6944:476:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"id":626,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7442:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":628,"indexExpression":{"id":627,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7461:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7442:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":630,"indexExpression":{"id":629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7469:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7442:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7472:1:2","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":168,"src":"7442:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7495:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":596,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6900:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6913:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"6900:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:615:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":634,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6852:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6852:697:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6843:706:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"nodeType":"ExpressionStatement","src":"6843:706:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"6800:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":588,"name":"_numOfParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6804:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6800:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":639,"initializationExpression":{"assignments":[584],"declarations":[{"constant":false,"id":584,"mutability":"mutable","name":"i","nameLocation":"6793:1:2","nodeType":"VariableDeclaration","scope":639,"src":"6785:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":586,"initialValue":{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6797:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6785:13:2"},"loopExpression":{"expression":{"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6824:3:2","subExpression":{"id":590,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"6824:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"nodeType":"ExpressionStatement","src":"6824:3:2"},"nodeType":"ForStatement","src":"6780:780:2"},{"expression":{"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":640,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"7569:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":642,"indexExpression":{"id":641,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7583:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7569:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7591:5:2","memberName":"omega","nodeType":"MemberAccess","referencedDeclaration":147,"src":"7569:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":644,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7599:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7569:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":646,"nodeType":"ExpressionStatement","src":"7569:36:2"},{"expression":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":647,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"7615:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":649,"indexExpression":{"id":648,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7629:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7615:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7637:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"7615:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":651,"name":"_isCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"7651:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7615:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"ExpressionStatement","src":"7615:48:2"},{"expression":{"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":654,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7721:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":655,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"7729:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7736:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"7729:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"7721:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":658,"nodeType":"ExpressionStatement","src":"7721:23:2"},{"eventCall":{"arguments":[{"id":660,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"7775:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":661,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7783:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":662,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7791:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7797:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"7791:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":664,"name":"_isCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"7808:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":659,"name":"CalculatedOmega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7759:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint256,bool)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7759:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"EmitStatement","src":"7754:67:2"},{"expression":{"id":667,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7838:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":517,"id":668,"nodeType":"Return","src":"7831:13:2"}]},"functionSelector":"12ce9906","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"calculateOmega","nameLocation":"6203:14:2","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"6217:2:2"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"6236:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"6236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6235:9:2"},"scope":1123,"src":"6194:1657:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":842,"nodeType":"Block","src":"8318:1234:2","statements":[{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"recov","nameLocation":"8336:5:2","nodeType":"VariableDeclaration","scope":842,"src":"8328:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":689,"initialValue":{"hexValue":"31","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8328:17:2"},{"assignments":[691],"declarations":[{"constant":false,"id":691,"mutability":"mutable","name":"_n","nameLocation":"8363:2:2","nodeType":"VariableDeclaration","scope":842,"src":"8355:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":696,"initialValue":{"expression":{"baseExpression":{"id":692,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8368:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":694,"indexExpression":{"id":693,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8382:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8368:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8390:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"8368:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8355:36:2"},{"assignments":[698],"declarations":[{"constant":false,"id":698,"mutability":"mutable","name":"_bStar","nameLocation":"8409:6:2","nodeType":"VariableDeclaration","scope":842,"src":"8401:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8401:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":703,"initialValue":{"expression":{"baseExpression":{"id":699,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8418:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":701,"indexExpression":{"id":700,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8432:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8418:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8440:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"8418:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8401:44:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":704,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8528:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8528:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"8528:12:2"},{"expression":{"arguments":[{"expression":{"id":708,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"8560:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8567:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"8560:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":707,"name":"overStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"8550:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8550:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"8550:24:2"},{"expression":{"arguments":[{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8592:34:2","subExpression":{"expression":{"baseExpression":{"id":713,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8593:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":715,"indexExpression":{"id":714,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8607:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8593:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8615:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"8593:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8628:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""},"value":"OmegaAlreadyCompleted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""}],"id":712,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8584:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"8584:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":722,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8670:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":724,"indexExpression":{"id":723,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8684:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8670:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8692:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":159,"src":"8670:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":726,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8697:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":728,"indexExpression":{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8704:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8697:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8707:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"8697:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8670:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"544e6f744d617463686564","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8710:13:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","typeString":"literal_string \"TNotMatched\""},"value":"TNotMatched"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","typeString":"literal_string \"TNotMatched\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8662:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8662:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"ExpressionStatement","src":"8662:62:2"},{"expression":{"arguments":[{"id":737,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8775:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}],"expression":{"id":734,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"8734:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8747:27:2","memberName":"verifyRecursiveHalvingProof","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"8734:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory[] memory) pure returns (bool)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8734:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":739,"nodeType":"ExpressionStatement","src":"8734:48:2"},{"body":{"id":796,"nodeType":"Block","src":"8862:420:2","statements":[{"assignments":[754],"declarations":[{"constant":false,"id":754,"mutability":"mutable","name":"_c","nameLocation":"8884:2:2","nodeType":"VariableDeclaration","scope":796,"src":"8876:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":753,"name":"uint256","nodeType":"ElementaryTypeName","src":"8876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":761,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":755,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"8889:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":757,"indexExpression":{"id":756,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8908:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8889:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":759,"indexExpression":{"id":758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8916:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8889:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8919:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"8889:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8876:44:2"},{"assignments":[763],"declarations":[{"constant":false,"id":763,"mutability":"mutable","name":"temp","nameLocation":"8942:4:2","nodeType":"VariableDeclaration","scope":796,"src":"8934:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"8934:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[{"id":766,"name":"_c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"8989:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":774,"name":"_c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"9112:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":772,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"9090:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9103:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"9090:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9090:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":778,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9139:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":776,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"9117:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9130:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"9117:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":770,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9077:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"9073:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":769,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9038:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9038:131:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9009:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"9009:7:2","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9009:178:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":783,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9190:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9009:183:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":785,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9210:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":764,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"8949:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8962:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1497,"src":"8949:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8949:277:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8934:292:2"},{"expression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":788,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9240:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":790,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9255:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":791,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9262:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"9268:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":789,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9248:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9248:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9240:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ExpressionStatement","src":"9240:31:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8812:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":745,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8816:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":747,"indexExpression":{"id":746,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"8830:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8816:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8838:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"8816:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8812:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":797,"initializationExpression":{"assignments":[741],"declarations":[{"constant":false,"id":741,"mutability":"mutable","name":"i","nameLocation":"8805:1:2","nodeType":"VariableDeclaration","scope":797,"src":"8797:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"8797:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":743,"initialValue":{"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8809:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8797:13:2"},"loopExpression":{"expression":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8857:3:2","subExpression":{"id":750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8857:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":752,"nodeType":"ExpressionStatement","src":"8857:3:2"},"nodeType":"ForStatement","src":"8792:490:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9299:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":800,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9308:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":802,"indexExpression":{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9315:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9308:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9318:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"9308:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9299:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f764e6f744d6174636858","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9321:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","typeString":"literal_string \"RecovNotMatchX\""},"value":"RecovNotMatchX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","typeString":"literal_string \"RecovNotMatchX\""}],"id":798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9291:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9291:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"ExpressionStatement","src":"9291:47:2"},{"expression":{"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":808,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":810,"indexExpression":{"id":809,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9362:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9348:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9370:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"9348:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9348:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":814,"nodeType":"ExpressionStatement","src":"9348:40:2"},{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":815,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9398:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":817,"indexExpression":{"id":816,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"9412:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9398:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9420:5:2","memberName":"omega","nodeType":"MemberAccess","referencedDeclaration":147,"src":"9398:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":819,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9428:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":821,"indexExpression":{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9428:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9438:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"9428:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9398:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"9398:41:2"},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":825,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9449:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":826,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"9457:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9464:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"9457:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"9449:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":829,"nodeType":"ExpressionStatement","src":"9449:23:2"},{"eventCall":{"arguments":[{"expression":{"id":831,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9497:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9501:6:2","memberName":"sender","nodeType":"MemberAccess","src":"9497:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9509:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":834,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9516:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":836,"indexExpression":{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9523:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9516:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9526:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"9516:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":838,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9529:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9535:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"9529:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":830,"name":"Recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"9487:9:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9487:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"EmitStatement","src":"9482:63:2"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"7857:322:2","text":" @param proofs the proof of the recovered value\n @notice Recover function\n @notice The recovered value must be less than the modulor\n @notice revert if currently at commit stage\n @notice revert if count == 0 meaning no one has committed\n @notice calculate and finalize omega"},"functionSelector":"50d30cbf","id":843,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"baseExpression":{"id":680,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8305:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":682,"indexExpression":{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8305:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8315:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"8305:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":684,"kind":"modifierInvocation","modifierName":{"id":679,"name":"shouldBeLessThanN","nameLocations":["8287:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"8287:17:2"},"nodeType":"ModifierInvocation","src":"8287:30:2"}],"name":"recover","nameLocation":"8193:7:2","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"_round","nameLocation":"8218:6:2","nodeType":"VariableDeclaration","scope":843,"src":"8210:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"8210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"proofs","nameLocation":"8267:6:2","nodeType":"VariableDeclaration","scope":843,"src":"8234:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":675,"nodeType":"UserDefinedTypeName","pathNode":{"id":674,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["8234:12:2","8247:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"8234:21:2"},"referencedDeclaration":1183,"src":"8234:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":676,"nodeType":"ArrayTypeName","src":"8234:23:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"8200:79:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"8318:0:2"},"scope":1123,"src":"8184:1368:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":979,"nodeType":"Block","src":"10159:998:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":860,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10177:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":862,"indexExpression":{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10185:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10177:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10188:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"10177:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":864,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10192:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10177:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"477265617465724f72457175616c5468616e4e","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10196:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""},"value":"GreaterOrEqualThanN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""}],"id":859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10169:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10169:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"10169:49:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"10250:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":871,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10268:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10250:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d6d697452657665616c4475726174696f6e4c6573735468616e436f6d6d69744475726174696f6e","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10303:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","typeString":"literal_string \"CommitRevealDurationLessThanCommitDuration\""},"value":"CommitRevealDurationLessThanCommitDuration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","typeString":"literal_string \"CommitRevealDurationLessThanCommitDuration\""}],"id":869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10229:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10229:128:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"10229:128:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"10375:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":878,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"10384:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10391:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"10384:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"10375:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746167654e6f7446696e6973686564","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10401:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","typeString":"literal_string \"StageNotFinished\""},"value":"StageNotFinished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","typeString":"literal_string \"StageNotFinished\""}],"id":876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10367:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10367:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10367:53:2"},{"expression":{"arguments":[{"id":887,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10471:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}],"expression":{"id":884,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"10430:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1674_$","typeString":"type(library Pietrzak_VDF)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10443:27:2","memberName":"verifyRecursiveHalvingProof","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"10430:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory[] memory) pure returns (bool)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10430:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":889,"nodeType":"ExpressionStatement","src":"10430:49:2"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":890,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10489:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10498:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10489:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"nodeType":"ExpressionStatement","src":"10489:10:2"},{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":894,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"10509:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":895,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"10517:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10524:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"10517:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"10509:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":898,"nodeType":"ExpressionStatement","src":"10509:21:2"},{"expression":{"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":899,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"10540:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":900,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10552:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10558:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"10552:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ExpressionStatement","src":"10540:27:2"},{"expression":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":904,"name":"commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"10577:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":905,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"10594:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10577:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":907,"nodeType":"ExpressionStatement","src":"10577:32:2"},{"expression":{"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":908,"name":"commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"10619:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":909,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10642:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10619:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":911,"nodeType":"ExpressionStatement","src":"10619:44:2"},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":912,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10673:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":914,"indexExpression":{"id":913,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10687:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10673:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10694:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":159,"src":"10673:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":916,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10698:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":918,"indexExpression":{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10698:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10709:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"10698:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10673:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"10673:37:2"},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":922,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10720:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":924,"indexExpression":{"id":923,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10734:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10720:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10741:1:2","memberName":"g","nodeType":"MemberAccess","referencedDeclaration":153,"src":"10720:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":926,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10745:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":928,"indexExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10753:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10745:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10756:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"10745:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10720:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"10720:37:2"},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":932,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10767:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":934,"indexExpression":{"id":933,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10781:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10767:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10788:1:2","memberName":"h","nodeType":"MemberAccess","referencedDeclaration":155,"src":"10767:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":936,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10792:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":938,"indexExpression":{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10800:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10792:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10803:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"10792:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10767:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":941,"nodeType":"ExpressionStatement","src":"10767:37:2"},{"expression":{"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":942,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10814:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":944,"indexExpression":{"id":943,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10828:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10814:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10835:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"10814:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":946,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10839:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10814:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"nodeType":"ExpressionStatement","src":"10814:27:2"},{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":949,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"10851:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10859:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10851:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ExpressionStatement","src":"10851:9:2"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"10870:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10886:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"10870:18:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":956,"nodeType":"ExpressionStatement","src":"10870:18:2"},{"eventCall":{"arguments":[{"id":958,"name":"_userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10922:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":959,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10948:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10954:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"10948:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":961,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"10977:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"11006:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":963,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11041:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":964,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11057:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":966,"indexExpression":{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11065:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11057:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11068:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"11057:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":968,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11083:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":970,"indexExpression":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11091:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11083:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11094:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"11083:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":972,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11109:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":974,"indexExpression":{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11117:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11109:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11120:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"11109:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":976,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11135:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":957,"name":"Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"10903:5:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:247:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"EmitStatement","src":"10898:252:2"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"9558:398:2","text":" @notice Start function\n @notice The contract must be in the Finished stage\n @notice The commit period must be less than the commit + reveal period\n @notice The g value must be less than the modulor\n @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\n @notice increase round"},"functionSelector":"16f80cd4","id":980,"implemented":true,"kind":"function","modifiers":[],"name":"start","nameLocation":"9970:5:2","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"_commitDuration","nameLocation":"9993:15:2","nodeType":"VariableDeclaration","scope":980,"src":"9985:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"_commitRevealDuration","nameLocation":"10026:21:2","nodeType":"VariableDeclaration","scope":980,"src":"10018:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"_n","nameLocation":"10065:2:2","nodeType":"VariableDeclaration","scope":980,"src":"10057:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10057:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"_proofs","nameLocation":"10108:7:2","nodeType":"VariableDeclaration","scope":980,"src":"10077:38:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":852,"nodeType":"UserDefinedTypeName","pathNode":{"id":851,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["10077:12:2","10090:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"10077:21:2"},"referencedDeclaration":1183,"src":"10077:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":853,"nodeType":"ArrayTypeName","src":"10077:23:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"_userAddress","nameLocation":"10133:12:2","nodeType":"VariableDeclaration","scope":980,"src":"10125:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"10125:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9975:176:2"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"10159:0:2"},"scope":1123,"src":"9961:1196:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1067,"nodeType":"Block","src":"11463:707:2","statements":[{"assignments":[985],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"_startTime","nameLocation":"11481:10:2","nodeType":"VariableDeclaration","scope":1067,"src":"11473:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11473:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":987,"initialValue":{"id":986,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"11494:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11473:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11517:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":989,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"11526:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11533:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"11526:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"11517:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":992,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11543:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11549:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"11543:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"11562:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":995,"name":"commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"11575:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11562:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11543:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11517:72:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1045,"nodeType":"IfStatement","src":"11513:472:2","trueBody":{"id":1044,"nodeType":"Block","src":"11591:394:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":999,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"11609:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11618:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11609:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1042,"nodeType":"Block","src":"11919:56:2","statements":[{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1037,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11937:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1038,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"11945:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11952:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"11945:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"11937:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":1041,"nodeType":"ExpressionStatement","src":"11937:23:2"}]},"id":1043,"nodeType":"IfStatement","src":"11605:370:2","trueBody":{"id":1036,"nodeType":"Block","src":"11621:292:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1002,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"11639:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11639:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"11639:11:2"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1005,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11668:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1007,"indexExpression":{"id":1006,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11682:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11668:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11689:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"11668:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"11709:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11668:46:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ExpressionStatement","src":"11668:46:2"},{"assignments":[1013],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"_bStar","nameLocation":"11740:6:2","nodeType":"VariableDeclaration","scope":1036,"src":"11732:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"11732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1019,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"11784:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1017,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11767:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11771:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"11767:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11767:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1016,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11757:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11757:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11749:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11749:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11749:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"baseExpression":{"id":1023,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11823:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1025,"indexExpression":{"id":1024,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11837:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11823:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11844:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"11823:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11749:96:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11732:113:2"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1029,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11863:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1031,"indexExpression":{"id":1030,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11877:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11863:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11884:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"11863:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1033,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11892:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11863:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"11863:35:2"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12011:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1047,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12020:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12027:6:2","memberName":"Reveal","nodeType":"MemberAccess","referencedDeclaration":143,"src":"12020:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12011:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1050,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12050:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12056:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"12050:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12069:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1053,"name":"commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"12082:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12069:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12050:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"12106:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12115:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12106:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12050:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12049:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12011:106:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"11994:170:2","trueBody":{"id":1065,"nodeType":"Block","src":"12128:36:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1062,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"12142:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12142:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"12142:11:2"}]}}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"11163:266:2","text":" @notice checkStage function\n @notice revert if the current stage is not the given stage\n @notice this function is used to check if the current stage is the given stage\n @notice it will update the stage to the next stage if needed"},"functionSelector":"7f93c751","id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"checkStage","nameLocation":"11443:10:2","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"11453:2:2"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"11463:0:2"},"scope":1123,"src":"11434:736:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1081,"nodeType":"Block","src":"12225:71:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12243:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1076,"name":"_stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"12252:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12243:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12260:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""},"value":"FunctionInvalidAtThisStage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12235:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"12235:54:2"}]},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"equalStage","nameLocation":"12185:10:2","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"_stage","nameLocation":"12203:6:2","nodeType":"VariableDeclaration","scope":1082,"src":"12196:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":1070,"nodeType":"UserDefinedTypeName","pathNode":{"id":1069,"name":"Stages","nameLocations":["12196:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"12196:6:2"},"referencedDeclaration":145,"src":"12196:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"internal"}],"src":"12195:15:2"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[],"src":"12225:0:2"},"scope":1123,"src":"12176:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1095,"nodeType":"Block","src":"12350:70:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12368:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1090,"name":"_stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12376:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12368:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12384:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""},"value":"FunctionInvalidAtThisStage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""}],"id":1088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12360:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12360:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1094,"nodeType":"ExpressionStatement","src":"12360:53:2"}]},"id":1096,"implemented":true,"kind":"function","modifiers":[],"name":"overStage","nameLocation":"12311:9:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"_stage","nameLocation":"12328:6:2","nodeType":"VariableDeclaration","scope":1096,"src":"12321:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":1084,"nodeType":"UserDefinedTypeName","pathNode":{"id":1083,"name":"Stages","nameLocations":["12321:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"12321:6:2"},"referencedDeclaration":145,"src":"12321:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"internal"}],"src":"12320:15:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"12350:0:2"},"scope":1123,"src":"12302:118:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"12607:119:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12625:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1102,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12634:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12641:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"12634:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12625:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c46696e6973686564","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12651:13:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","typeString":"literal_string \"AllFinished\""},"value":"AllFinished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","typeString":"literal_string \"AllFinished\""}],"id":1100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12617:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12617:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"12617:48:2"},{"expression":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1108,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12675:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1113,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12705:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12697:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"12697:7:2","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12697:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12713:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"33","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1110,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"12690:6:2","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12683:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12683:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12675:44:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":1120,"nodeType":"ExpressionStatement","src":"12675:44:2"}]},"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"12426:146:2","text":" @notice NextStage function\n @notice update stage to the next stage\n @notice revert if the current stage is Finished"},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"nextStage","nameLocation":"12586:9:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"12595:2:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"12607:0:2"},"scope":1123,"src":"12577:149:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1124,"src":"469:12259:2","usedErrors":[]}],"src":"33:12696:2"},"id":2},"contracts/interfaces/ICommitRecover.sol":{"ast":{"absolutePath":"contracts/interfaces/ICommitRecover.sol","exportedSymbols":{"ICommitRecover":[1167],"Pietrzak_VDF":[1674]},"id":1168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","file":"../libraries/Pietrzak_VDF.sol","id":1125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1675,"src":"32:39:3","symbolAliases":[],"unitAlias":""},{"id":1126,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"72:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ICommitRecover","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1167,"linearizedBaseContracts":[1167],"name":"ICommitRecover","nameLocation":"108:14:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f4f98ad5","id":1131,"implemented":false,"kind":"function","modifiers":[],"name":"commit","nameLocation":"138:6:3","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"_commit","nameLocation":"153:7:3","nodeType":"VariableDeclaration","scope":1131,"src":"145:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"144:17:3"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"170:0:3"},"scope":1167,"src":"129:42:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c2ca0ac5","id":1136,"implemented":false,"kind":"function","modifiers":[],"name":"reveal","nameLocation":"186:6:3","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"_a","nameLocation":"201:2:3","nodeType":"VariableDeclaration","scope":1136,"src":"193:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:12:3"},"returnParameters":{"id":1135,"nodeType":"ParameterList","parameters":[],"src":"213:0:3"},"scope":1167,"src":"177:37:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"12ce9906","id":1141,"implemented":false,"kind":"function","modifiers":[],"name":"calculateOmega","nameLocation":"229:14:3","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"243:2:3"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1141,"src":"264:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"263:9:3"},"scope":1167,"src":"220:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"50d30cbf","id":1150,"implemented":false,"kind":"function","modifiers":[],"name":"recover","nameLocation":"288:7:3","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"_round","nameLocation":"304:6:3","nodeType":"VariableDeclaration","scope":1150,"src":"296:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"proofs","nameLocation":"345:6:3","nodeType":"VariableDeclaration","scope":1150,"src":"312:39:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1145,"nodeType":"UserDefinedTypeName","pathNode":{"id":1144,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["312:12:3","325:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"312:21:3"},"referencedDeclaration":1183,"src":"312:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1146,"nodeType":"ArrayTypeName","src":"312:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"295:57:3"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"361:0:3"},"scope":1167,"src":"279:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a58be661","id":1163,"implemented":false,"kind":"function","modifiers":[],"name":"start","nameLocation":"377:5:3","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"_commitDuration","nameLocation":"400:15:3","nodeType":"VariableDeclaration","scope":1163,"src":"392:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"392:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"_commitRevealDuration","nameLocation":"433:21:3","nodeType":"VariableDeclaration","scope":1163,"src":"425:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"_n","nameLocation":"472:2:3","nodeType":"VariableDeclaration","scope":1163,"src":"464:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"_proofs","nameLocation":"515:7:3","nodeType":"VariableDeclaration","scope":1163,"src":"484:38:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1158,"nodeType":"UserDefinedTypeName","pathNode":{"id":1157,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["484:12:3","497:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"484:21:3"},"referencedDeclaration":1183,"src":"484:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1159,"nodeType":"ArrayTypeName","src":"484:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"382:146:3"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"537:0:3"},"scope":1167,"src":"368:170:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7f93c751","id":1166,"implemented":false,"kind":"function","modifiers":[],"name":"checkStage","nameLocation":"553:10:3","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"563:2:3"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"574:0:3"},"scope":1167,"src":"544:31:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1168,"src":"98:479:3","usedErrors":[]}],"src":"32:546:3"},"id":3},"contracts/libraries/Pietrzak_VDF.sol":{"ast":{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","exportedSymbols":{"Pietrzak_VDF":[1674]},"id":1675,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1169,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Pietrzak_VDF","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1674,"linearizedBaseContracts":[1674],"name":"Pietrzak_VDF","nameLocation":"67:12:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1172,"mutability":"constant","name":"_SYMBOLS","nameLocation":"111:8:4","nodeType":"VariableDeclaration","scope":1674,"src":"86:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1170,"name":"bytes16","nodeType":"ElementaryTypeName","src":"86:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"122:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"canonicalName":"Pietrzak_VDF.VDFClaim","id":1183,"members":[{"constant":false,"id":1174,"mutability":"mutable","name":"n","nameLocation":"181:1:4","nodeType":"VariableDeclaration","scope":1183,"src":"173:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"x","nameLocation":"200:1:4","nodeType":"VariableDeclaration","scope":1183,"src":"192:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"y","nameLocation":"219:1:4","nodeType":"VariableDeclaration","scope":1183,"src":"211:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"T","nameLocation":"238:1:4","nodeType":"VariableDeclaration","scope":1183,"src":"230:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"v","nameLocation":"257:1:4","nodeType":"VariableDeclaration","scope":1183,"src":"249:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VDFClaim","nameLocation":"154:8:4","nodeType":"StructDefinition","scope":1674,"src":"147:118:4","visibility":"public"},{"canonicalName":"Pietrzak_VDF.SingHalvProofOutput","id":1194,"members":[{"constant":false,"id":1185,"mutability":"mutable","name":"verified","nameLocation":"313:8:4","nodeType":"VariableDeclaration","scope":1194,"src":"308:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1184,"name":"bool","nodeType":"ElementaryTypeName","src":"308:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"calculated","nameLocation":"336:10:4","nodeType":"VariableDeclaration","scope":1194,"src":"331:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1186,"name":"bool","nodeType":"ElementaryTypeName","src":"331:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"x_prime","nameLocation":"364:7:4","nodeType":"VariableDeclaration","scope":1194,"src":"356:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"y_prime","nameLocation":"389:7:4","nodeType":"VariableDeclaration","scope":1194,"src":"381:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"T_half","nameLocation":"414:6:4","nodeType":"VariableDeclaration","scope":1194,"src":"406:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SingHalvProofOutput","nameLocation":"278:19:4","nodeType":"StructDefinition","scope":1674,"src":"271:156:4","visibility":"public"},{"body":{"id":1215,"nodeType":"Block","src":"516:73:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1208,"name":"strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"568:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1206,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"551:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"555:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"551:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1205,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"541:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"541:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"533:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:4","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"533:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1212,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"581:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"533:49:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1202,"id":1214,"nodeType":"Return","src":"526:56:4"}]},"id":1216,"implemented":true,"kind":"function","modifiers":[],"name":"modHash","nameLocation":"442:7:4","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"n","nameLocation":"458:1:4","nodeType":"VariableDeclaration","scope":1216,"src":"450:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"strings","nameLocation":"475:7:4","nodeType":"VariableDeclaration","scope":1216,"src":"461:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1197,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"449:34:4"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1216,"src":"507:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"506:9:4"},"scope":1674,"src":"433:156:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1355,"nodeType":"Block","src":"721:1049:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1225,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"735:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"744:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"749:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"735:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1353,"nodeType":"Block","src":"1007:757:4","statements":[{"assignments":[1260],"declarations":[{"constant":false,"id":1260,"mutability":"mutable","name":"tHalf","nameLocation":"1029:5:4","nodeType":"VariableDeclaration","scope":1353,"src":"1021:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1261,"nodeType":"VariableDeclarationStatement","src":"1021:13:4"},{"assignments":[1263],"declarations":[{"constant":false,"id":1263,"mutability":"mutable","name":"y","nameLocation":"1056:1:4","nodeType":"VariableDeclaration","scope":1353,"src":"1048:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1266,"initialValue":{"expression":{"id":1264,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1060:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1069:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1060:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1048:22:4"},{"assignments":[1268],"declarations":[{"constant":false,"id":1268,"mutability":"mutable","name":"r","nameLocation":"1092:1:4","nodeType":"VariableDeclaration","scope":1353,"src":"1084:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1285,"initialValue":{"arguments":[{"expression":{"id":1270,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1121:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1130:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1121:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":1276,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1172:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1181:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1172:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1275,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1163:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"expression":{"id":1280,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1194:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1203:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1194:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1279,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1185:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1185:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1149:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1272,"name":"string","nodeType":"ElementaryTypeName","src":"1149:6:4","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1156:6:4","memberName":"concat","nodeType":"MemberAccess","src":"1149:13:4","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1269,"name":"modHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"1096:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,string memory) pure returns (uint256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:124:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1084:136:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1286,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1239:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1248:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1239:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1252:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1239:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1239:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1320,"nodeType":"Block","src":"1321:103:4","statements":[{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1339:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1301,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1348:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1357:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1348:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1361:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1348:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1347:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1347:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1339:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1309,"nodeType":"ExpressionStatement","src":"1339:28:4"},{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1310,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1385:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1311,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1390:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1312,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1394:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1390:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1389:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":1315,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1399:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1408:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1399:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1389:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1385:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1319,"nodeType":"ExpressionStatement","src":"1385:24:4"}]},"id":1321,"nodeType":"IfStatement","src":"1235:189:4","trueBody":{"id":1299,"nodeType":"Block","src":"1260:55:4","statements":[{"expression":{"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1292,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1278:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1293,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1286:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1295:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1286:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1286:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1278:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1298,"nodeType":"ExpressionStatement","src":"1278:22:4"}]}},{"expression":{"arguments":[{"hexValue":"74727565","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1501:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"74727565","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1527:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"arguments":[{"expression":{"id":1327,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1573:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1582:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1573:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1329,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"1585:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1330,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1588:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1588:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1326,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1563:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1333,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1601:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1610:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1601:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1335,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1613:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1622:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1613:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1553:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":1340,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1666:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1675:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1666:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1342,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"1678:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1343,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1681:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1690:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1681:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1656:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1346,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1694:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1347,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"1697:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1706:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"1697:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1338,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"1646:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1646:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1350,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1730:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1322,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1460:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1194_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:293:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1224,"id":1352,"nodeType":"Return","src":"1437:316:4"}]},"id":1354,"nodeType":"IfStatement","src":"731:1033:4","trueBody":{"id":1258,"nodeType":"Block","src":"752:249:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1229,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"770:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"779:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"770:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":1232,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"794:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"803:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"794:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"32","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"806:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"expression":{"id":1235,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"809:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"818:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1174,"src":"809:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"784:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"770:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1256,"nodeType":"Block","src":"909:82:4","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"954:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"961:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"968:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1248,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"934:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1194_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1224,"id":1255,"nodeType":"Return","src":"927:49:4"}]},"id":1257,"nodeType":"IfStatement","src":"766:225:4","trueBody":{"id":1247,"nodeType":"Block","src":"822:81:4","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"867:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"873:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"880:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"883:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"886:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"847:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1194_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1224,"id":1246,"nodeType":"Return","src":"840:48:4"}]}}]}}]},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"processSingleHalvingProof","nameLocation":"604:25:4","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"vdfClaim","nameLocation":"655:8:4","nodeType":"VariableDeclaration","scope":1356,"src":"639:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"},"typeName":{"id":1218,"nodeType":"UserDefinedTypeName","pathNode":{"id":1217,"name":"VDFClaim","nameLocations":["639:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"639:8:4"},"referencedDeclaration":1183,"src":"639:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"visibility":"internal"}],"src":"629:40:4"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"693:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"},"typeName":{"id":1222,"nodeType":"UserDefinedTypeName","pathNode":{"id":1221,"name":"SingHalvProofOutput","nameLocations":["693:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"693:19:4"},"referencedDeclaration":1194,"src":"693:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_storage_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"}},"visibility":"internal"}],"src":"692:28:4"},"scope":1674,"src":"595:1175:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"1871:608:4","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"proofSize","nameLocation":"1889:9:4","nodeType":"VariableDeclaration","scope":1443,"src":"1881:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1369,"initialValue":{"expression":{"id":1367,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"1901:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:6:4","memberName":"length","nodeType":"MemberAccess","src":"1901:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1881:36:4"},{"body":{"id":1439,"nodeType":"Block","src":"1968:484:4","statements":[{"assignments":[1382],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"output","nameLocation":"2009:6:4","nodeType":"VariableDeclaration","scope":1439,"src":"1982:33:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"},"typeName":{"id":1381,"nodeType":"UserDefinedTypeName","pathNode":{"id":1380,"name":"SingHalvProofOutput","nameLocations":["1982:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"1982:19:4"},"referencedDeclaration":1194,"src":"1982:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_storage_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"}},"visibility":"internal"}],"id":1388,"initialValue":{"arguments":[{"baseExpression":{"id":1384,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2044:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1386,"indexExpression":{"id":1385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2054:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2044:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}],"id":1383,"name":"processSingleHalvingProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2018:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VDFClaim_$1183_memory_ptr_$returns$_t_struct$_SingHalvProofOutput_$1194_memory_ptr_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory) pure returns (struct Pietrzak_VDF.SingHalvProofOutput memory)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"nodeType":"VariableDeclarationStatement","src":"1982:75:4"},{"condition":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2075:16:4","subExpression":{"expression":{"id":1389,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2076:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:8:4","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":1185,"src":"2076:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1437,"nodeType":"Block","src":"2144:298:4","statements":[{"condition":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2166:18:4","subExpression":{"expression":{"id":1395,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2167:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2174:10:4","memberName":"calculated","nodeType":"MemberAccess","referencedDeclaration":1187,"src":"2167:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1400,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2224:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:7:4","memberName":"x_prime","nodeType":"MemberAccess","referencedDeclaration":1189,"src":"2224:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1402,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2242:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1406,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2252:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2252:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2242:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"2242:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1411,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2301:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2308:7:4","memberName":"y_prime","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"2301:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1413,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2319:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1417,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2329:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2333:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2329:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2336:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"2319:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2301:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1422,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2378:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1194_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2385:6:4","memberName":"T_half","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"2378:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1424,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2395:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1428,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2405:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2409:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2405:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2395:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2412:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"2395:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2378:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1433,"nodeType":"IfStatement","src":"2374:53:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2422:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1364,"id":1432,"nodeType":"Return","src":"2415:12:4"}},"id":1434,"nodeType":"IfStatement","src":"2297:130:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2346:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1364,"id":1421,"nodeType":"Return","src":"2339:12:4"}},"id":1435,"nodeType":"IfStatement","src":"2220:207:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2269:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1364,"id":1410,"nodeType":"Return","src":"2262:12:4"}},"id":1436,"nodeType":"IfStatement","src":"2162:265:4","trueBody":{"expression":{"hexValue":"74727565","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2193:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1364,"id":1399,"nodeType":"Return","src":"2186:11:4"}}]},"id":1438,"nodeType":"IfStatement","src":"2071:371:4","trueBody":{"id":1394,"nodeType":"Block","src":"2093:45:4","statements":[{"expression":{"hexValue":"66616c7365","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2118:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1364,"id":1393,"nodeType":"Return","src":"2111:12:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1948:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1375,"name":"proofSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1952:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"initializationExpression":{"assignments":[1371],"declarations":[{"constant":false,"id":1371,"mutability":"mutable","name":"i","nameLocation":"1941:1:4","nodeType":"VariableDeclaration","scope":1440,"src":"1933:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1373,"initialValue":{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1945:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1933:13:4"},"loopExpression":{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1963:3:4","subExpression":{"id":1377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"nodeType":"ExpressionStatement","src":"1963:3:4"},"nodeType":"ForStatement","src":"1928:524:4"},{"expression":{"hexValue":"74727565","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2468:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1364,"id":1442,"nodeType":"Return","src":"2461:11:4"}]},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"verifyRecursiveHalvingProof","nameLocation":"1785:27:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"proofList","nameLocation":"1831:9:4","nodeType":"VariableDeclaration","scope":1444,"src":"1813:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1358,"nodeType":"UserDefinedTypeName","pathNode":{"id":1357,"name":"VDFClaim","nameLocations":["1813:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"1813:8:4"},"referencedDeclaration":1183,"src":"1813:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1183_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1359,"nodeType":"ArrayTypeName","src":"1813:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1183_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"1812:29:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"1865:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1362,"name":"bool","nodeType":"ElementaryTypeName","src":"1865:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1864:6:4"},"scope":1674,"src":"1776:703:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"2789:239:4","statements":[{"assignments":[1457],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"result","nameLocation":"2807:6:4","nodeType":"VariableDeclaration","scope":1496,"src":"2799:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1459,"initialValue":{"hexValue":"31","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2816:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2799:18:4"},{"body":{"id":1492,"nodeType":"Block","src":"2841:158:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2859:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2859:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2859:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1477,"nodeType":"IfStatement","src":"2855:78:4","trueBody":{"id":1476,"nodeType":"Block","src":"2871:62:4","statements":[{"expression":{"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2889:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2905:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2913:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1472,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2916:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2898:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2889:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1475,"nodeType":"ExpressionStatement","src":"2889:29:4"}]}},{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2946:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2957:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"2960:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1482,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2963:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1479,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2950:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2946:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ExpressionStatement","src":"2946:19:4"},{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2979:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2983:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2987:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2983:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2979:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1491,"nodeType":"ExpressionStatement","src":"2979:9:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2834:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2834:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"nodeType":"WhileStatement","src":"2827:172:4"},{"expression":{"id":1494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"3015:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1455,"id":1495,"nodeType":"Return","src":"3008:13:4"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"2485:215:4","text":" @param a base value\n @param b exponent value\n @return result of a^b mod N\n @notice powerModN function\n @notice calculate a^b mod N\n @notice O(log b) complexity"},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"powerModN","nameLocation":"2714:9:4","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"a","nameLocation":"2732:1:4","nodeType":"VariableDeclaration","scope":1497,"src":"2724:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2724:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"b","nameLocation":"2743:1:4","nodeType":"VariableDeclaration","scope":1497,"src":"2735:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"n","nameLocation":"2754:1:4","nodeType":"VariableDeclaration","scope":1497,"src":"2746:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2723:33:4"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1497,"src":"2780:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2780:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2779:9:4"},"scope":1674,"src":"2705:323:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"3272:620:4","statements":[{"id":1542,"nodeType":"UncheckedBlock","src":"3282:604:4","statements":[{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"length","nameLocation":"3314:6:4","nodeType":"VariableDeclaration","scope":1542,"src":"3306:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3329:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1507,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"3323:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3338:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3323:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3306:33:4"},{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"buffer","nameLocation":"3367:6:4","nodeType":"VariableDeclaration","scope":1542,"src":"3353:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1513,"name":"string","nodeType":"ElementaryTypeName","src":"3353:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[{"id":1517,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"3387:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3376:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1515,"name":"string","nodeType":"ElementaryTypeName","src":"3380:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3376:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3353:41:4"},{"assignments":[1521],"declarations":[{"constant":false,"id":1521,"mutability":"mutable","name":"ptr","nameLocation":"3416:3:4","nodeType":"VariableDeclaration","scope":1542,"src":"3408:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3408:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1522,"nodeType":"VariableDeclarationStatement","src":"3408:11:4"},{"AST":{"nodeType":"YulBlock","src":"3489:67:4","statements":[{"nodeType":"YulAssignment","src":"3507:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3518:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"3534:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:4"},"nodeType":"YulFunctionCall","src":"3526:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:4"},"nodeType":"YulFunctionCall","src":"3514:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3507:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1514,"isOffset":false,"isSlot":false,"src":"3518:6:4","valueSize":1},{"declaration":1506,"isOffset":false,"isSlot":false,"src":"3534:6:4","valueSize":1},{"declaration":1521,"isOffset":false,"isSlot":false,"src":"3507:3:4","valueSize":1}],"id":1523,"nodeType":"InlineAssembly","src":"3480:76:4"},{"body":{"id":1538,"nodeType":"Block","src":"3582:267:4","statements":[{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"3600:5:4","subExpression":{"id":1525,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"3600:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1527,"nodeType":"ExpressionStatement","src":"3600:5:4"},{"AST":{"nodeType":"YulBlock","src":"3683:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3713:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3727:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3734:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3723:3:4"},"nodeType":"YulFunctionCall","src":"3723:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"3739:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3718:4:4"},"nodeType":"YulFunctionCall","src":"3718:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3705:7:4"},"nodeType":"YulFunctionCall","src":"3705:44:4"},"nodeType":"YulExpressionStatement","src":"3705:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1172,"isOffset":false,"isSlot":false,"src":"3739:8:4","valueSize":1},{"declaration":1521,"isOffset":false,"isSlot":false,"src":"3713:3:4","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"3727:5:4","valueSize":1}],"id":1528,"nodeType":"InlineAssembly","src":"3674:93:4"},{"expression":{"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3784:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3793:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3784:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ExpressionStatement","src":"3784:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3817:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3826:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3817:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1537,"nodeType":"IfStatement","src":"3813:21:4","trueBody":{"id":1536,"nodeType":"Break","src":"3829:5:4"}}]},"condition":{"hexValue":"74727565","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3576:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1539,"nodeType":"WhileStatement","src":"3569:280:4"},{"expression":{"id":1540,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3869:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1504,"id":1541,"nodeType":"Return","src":"3862:13:4"}]}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"3034:162:4","text":" OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"3210:8:4","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"value","nameLocation":"3227:5:4","nodeType":"VariableDeclaration","scope":1544,"src":"3219:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3219:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3218:15:4"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"3257:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"3257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3256:15:4"},"scope":1674,"src":"3201:691:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1672,"nodeType":"Block","src":"4139:854:4","statements":[{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"result","nameLocation":"4157:6:4","nodeType":"VariableDeclaration","scope":1672,"src":"4149:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4149:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4149:18:4"},{"id":1669,"nodeType":"UncheckedBlock","src":"4177:787:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4205:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4220:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4214:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"4205:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"4201:103:4","trueBody":{"id":1571,"nodeType":"Block","src":"4224:80:4","statements":[{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4242:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4257:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4251:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"4242:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"4242:17:4"},{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4277:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4287:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4277:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"4277:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4321:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4330:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4336:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4330:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"4321:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1589,"nodeType":"IfStatement","src":"4317:103:4","trueBody":{"id":1588,"nodeType":"Block","src":"4340:80:4","statements":[{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4358:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4367:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4373:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4367:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"4358:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"4358:17:4"},{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4393:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4403:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4393:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ExpressionStatement","src":"4393:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4437:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4446:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4452:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4446:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"4437:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"4433:103:4","trueBody":{"id":1605,"nodeType":"Block","src":"4456:80:4","statements":[{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4474:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4483:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4489:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4483:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"4474:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"nodeType":"ExpressionStatement","src":"4474:17:4"},{"expression":{"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4509:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4519:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4509:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1604,"nodeType":"ExpressionStatement","src":"4509:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4553:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4562:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4568:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4562:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"4553:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1623,"nodeType":"IfStatement","src":"4549:100:4","trueBody":{"id":1622,"nodeType":"Block","src":"4571:78:4","statements":[{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4589:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4598:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"4589:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1617,"nodeType":"ExpressionStatement","src":"4589:16:4"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4623:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4633:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4623:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"4623:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4666:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4675:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4681:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4675:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"4666:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1640,"nodeType":"IfStatement","src":"4662:100:4","trueBody":{"id":1639,"nodeType":"Block","src":"4684:78:4","statements":[{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4702:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4711:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4717:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4711:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"4702:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1634,"nodeType":"ExpressionStatement","src":"4702:16:4"},{"expression":{"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4736:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4736:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ExpressionStatement","src":"4736:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4779:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4788:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4794:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4788:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"4779:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1657,"nodeType":"IfStatement","src":"4775:100:4","trueBody":{"id":1656,"nodeType":"Block","src":"4797:78:4","statements":[{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4815:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4824:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4824:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"4815:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"4815:16:4"},{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4849:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4859:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4849:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"nodeType":"ExpressionStatement","src":"4849:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4892:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4907:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4901:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"4892:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"4888:66:4","trueBody":{"id":1667,"nodeType":"Block","src":"4910:44:4","statements":[{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4928:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4928:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1666,"nodeType":"ExpressionStatement","src":"4928:11:4"}]}}]},{"expression":{"id":1670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"4980:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1551,"id":1671,"nodeType":"Return","src":"4973:13:4"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"3898:174:4","text":" openzeppelin-contracts/contracts/utils/math/Math.sol\n @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"4086:5:4","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"value","nameLocation":"4100:5:4","nodeType":"VariableDeclaration","scope":1673,"src":"4092:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4091:15:4"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"4130:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"4130:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4129:9:4"},"scope":1674,"src":"4077:916:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1675,"src":"59:4936:4","usedErrors":[]}],"src":"33:4963:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CommitRecover.sol":{"CommitRecover":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"omega","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"calculatedTimestamp","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isCompleted","type":"bool"}],"name":"CalculatedOmega","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"uint256","name":"commit","type":"uint256"},{"indexed":false,"internalType":"string","name":"commitsString","type":"string"},{"indexed":false,"internalType":"uint256","name":"commitCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitTimestamp","type":"uint256"}],"name":"CommitC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"msgSender","type":"address"},{"indexed":false,"internalType":"uint256","name":"recov","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"omegaRecov","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"recoveredTimestamp","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"uint256","name":"a","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revealLeftCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revealTimestamp","type":"uint256"}],"name":"RevealA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"msgSender","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitRevealDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"n","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"g","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"h","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"T","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"Start","type":"event"},{"inputs":[],"name":"calculateOmega","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkStage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commit","type":"uint256"},{"internalType":"address","name":"_userAddress","type":"address"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commitDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commitRevealDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"round","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"commitRevealValues","outputs":[{"internalType":"uint256","name":"c","type":"uint256"},{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"address","name":"participantAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commitsString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_round","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"proofs","type":"tuple[]"}],"name":"recover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"},{"internalType":"address","name":"_userAddress","type":"address"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"round","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stage","outputs":[{"internalType":"enum CommitRecover.Stages","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitDuration","type":"uint256"},{"internalType":"uint256","name":"_commitRevealDuration","type":"uint256"},{"internalType":"uint256","name":"_n","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"_proofs","type":"tuple[]"},{"internalType":"address","name":"_userAddress","type":"address"}],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"round","type":"uint256"}],"name":"userInfosAtRound","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bool","name":"committed","type":"bool"},{"internalType":"bool","name":"revealed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"round","type":"uint256"}],"name":"valuesAtRound","outputs":[{"internalType":"uint256","name":"omega","type":"uint256"},{"internalType":"uint256","name":"bStar","type":"uint256"},{"internalType":"uint256","name":"numOfParticipants","type":"uint256"},{"internalType":"uint256","name":"g","type":"uint256"},{"internalType":"uint256","name":"h","type":"uint256"},{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isAllRevealed","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Justin g","kind":"dev","methods":{"commit(uint256,address)":{"params":{"_commit":"participant's commit value"}},"owner()":{"details":"Returns the address of the current owner."},"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":{"params":{"proofs":"the proof of the recovered value"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"reveal(uint256,address)":{"params":{"_a":"participant's reveal value"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Bicorn-RX Commit-Reveal-Recover","version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_299":{"entryPoint":null,"id":299,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":102,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":110,"id":111,"parameterSlots":1,"returnSlots":0},"panic_error_0x21":{"entryPoint":306,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:190:5","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:5"},"nodeType":"YulFunctionCall","src":"45:88:5"},"nodeType":"YulExpressionStatement","src":"45:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:5"},"nodeType":"YulFunctionCall","src":"142:15:5"},"nodeType":"YulExpressionStatement","src":"142:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:5"},"nodeType":"YulFunctionCall","src":"166:15:5"},"nodeType":"YulExpressionStatement","src":"166:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7:180:5"}]},"contents":"{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x66 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x5B JUMPI PUSH3 0x5A PUSH3 0x132 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x161 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x382D DUP1 PUSH3 0x171 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73FA4F46 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB0E9EB3F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB0E9EB3F EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xBFB70E04 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xDCA669E4 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x73FA4F46 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x77F0ADE9 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x7F93C751 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x16F80CD4 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x16F80CD4 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x22FADC28 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x50D30CBF EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x224 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xD64B071 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x12CE9906 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x11C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x1250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x29C7 JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D9 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP1 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x48E PUSH1 0x0 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x500 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 PUSH2 0x52E DUP7 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2D38 JUMP JUMPDEST POP DUP2 PUSH2 0x6E0 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xBD41A700367CDF3254812A81BAAD606F9D6102E946F1BB28AAB0A4AFE25EF0C9 DUP5 DUP7 DUP4 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x720 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x791 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x806 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x810 PUSH1 0x2 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x966 JUMPI DUP3 DUP1 PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST PUSH2 0x94F PUSH2 0x921 DUP7 DUP7 PUSH2 0x8DE PUSH1 0x8 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x8E7 DUP12 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST DUP8 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1AEB JUMP JUMPDEST DUP8 MULMOD SWAP6 POP DUP1 DUP1 PUSH2 0x95E SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x88F JUMP JUMPDEST POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x31D4D513959D79380D7F8AF557AC2408B4D6C2CF59AF943DD997A11100520F66 DUP8 DUP7 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0xA10 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 LT PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP1 PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xAE1 JUMPI PUSH2 0xAE0 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4C DUP3 PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB60 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC33 JUMPI PUSH2 0xC32 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x2D38 JUMP JUMPDEST POP PUSH32 0x1A5E4FA05B9601AF979A44C50EF7E103B9B51CD105EB42040B5817EB3E58449C DUP2 TIMESTAMP DUP8 DUP8 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xDB7 JUMPI PUSH2 0xDB6 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE12 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xE5F PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xE69 PUSH1 0x0 PUSH2 0x1C94 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0xF42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP1 PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA1 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF97 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF67 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x106D JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1042 DUP3 DUP7 PUSH2 0xFFF DUP6 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x1008 DUP9 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1019 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST DUP8 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP2 DUP8 MULMOD SWAP6 POP POP POP DUP1 DUP1 PUSH2 0x1065 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA5 JUMP JUMPDEST POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP4 EQ PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP1 PUSH2 0x332B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x110F PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3FC2D4F2E2E4E84069307A4D3A9B7AD25D93E2026627031A87B54A1C61907CE CALLER DUP5 DUP9 DUP9 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D0 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x11DA PUSH1 0x0 PUSH2 0x1D0C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x128D JUMPI PUSH2 0x128C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x12A7 JUMPI POP PUSH1 0x2 SLOAD DUP2 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x137F JUMPI PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0x1352 JUMPI PUSH2 0x12BE PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x137E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1378 JUMPI PUSH2 0x1377 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1393 JUMPI PUSH2 0x1392 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x13DC JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x13DB JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13E9 PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x14C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A3 SWAP1 PUSH2 0x3476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x15F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1654 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1AEB JUMP JUMPDEST EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x169C PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x16A6 PUSH1 0x1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x16B7 SWAP1 PUSH2 0x356E JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP6 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SUB PUSH2 0x1752 JUMPI PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x167147E5476FB37532A0AAB79DEA3EB6B8FE0FBD723AC6025B0DE29237B0496 DUP6 DUP8 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x17F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x1823 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x184F SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x189C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1871 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x189C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x187F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x18AC PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1912 SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1924 DUP2 PUSH2 0x1D0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x192F PUSH2 0x1EB7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x194D PUSH2 0x13ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x3675 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B8 JUMPI PUSH2 0x19B7 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1A1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A11 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A2C DUP5 PUSH2 0x1EBF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4B JUMPI PUSH2 0x1A4A PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A7D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AE0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1A8B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1B43 JUMPI PUSH1 0x1 DUP1 DUP6 AND SUB PUSH2 0x1B1B JUMPI DUP3 DUP1 PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP6 DUP3 MULMOD SWAP1 POP JUMPDEST DUP3 DUP1 PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP5 POP PUSH1 0x2 DUP5 PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C88 JUMPI PUSH1 0x0 PUSH2 0x1B85 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B78 JUMPI PUSH2 0x1B77 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1B9C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1BB1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BBF SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1BF2 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C00 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x1C33 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ PUSH2 0x1C74 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1C80 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B58 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST GT PUSH2 0x1D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D00 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3C SWAP1 PUSH2 0x377E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST ADDMOD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1F1D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1F5A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1F50 JUMPI PUSH2 0x1F4F PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1F89 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1F7F JUMPI PUSH2 0x1F7E PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1FB2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1FD7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1FFA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2009 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201A PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x20B2 JUMPI PUSH2 0x203A DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x207B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2105 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x20D3 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x20E0 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20F1 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD AND SUB PUSH2 0x212E JUMPI PUSH1 0x2 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x2127 SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP3 POP PUSH2 0x216B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x2141 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x214B SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP4 PUSH2 0x215E SWAP2 SWAP1 PUSH2 0x379E JUMP JUMPDEST PUSH2 0x2168 SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21AD PUSH2 0x219E DUP9 PUSH1 0x20 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D3 PUSH2 0x21C8 DUP9 PUSH1 0x80 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP6 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x221E SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x2259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AA DUP2 PUSH2 0x2259 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C7 DUP2 PUSH2 0x22A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x22CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x2313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2325 DUP2 PUSH2 0x22FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2342 JUMPI PUSH2 0x2341 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2350 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2361 DUP6 DUP3 DUP7 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23B9 DUP3 PUSH2 0x2370 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EB PUSH2 0x228D JUMP JUMPDEST SWAP1 POP PUSH2 0x23F7 DUP3 DUP3 PUSH2 0x23B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x242D JUMP JUMPDEST JUMPDEST PUSH2 0x2452 PUSH1 0xA0 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2462 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2476 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x249E DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x24B2 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D1 PUSH2 0x24CC DUP5 PUSH2 0x23FC JUMP JUMPDEST PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x2428 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x251D JUMPI DUP1 PUSH2 0x2509 DUP9 DUP3 PUSH2 0x2432 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x24F6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x236B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x254C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2571 JUMPI PUSH2 0x2570 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257F DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2590 DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x25A1 DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C2 JUMPI PUSH2 0x25C1 PUSH2 0x229C JUMP JUMPDEST JUMPDEST PUSH2 0x25CE DUP9 DUP3 DUP10 ADD PUSH2 0x2527 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25DF DUP9 DUP3 DUP10 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2602 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2611 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2622 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2650 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x265D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x266A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x268D JUMPI PUSH2 0x268C PUSH2 0x236B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AA JUMPI PUSH2 0x26A9 PUSH2 0x2672 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xA0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26C6 JUMPI PUSH2 0x26C5 PUSH2 0x2428 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26E6 JUMPI PUSH2 0x26E5 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F4 DUP7 DUP3 DUP8 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x229C JUMP JUMPDEST JUMPDEST PUSH2 0x2721 DUP7 DUP3 DUP8 ADD PUSH2 0x2677 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2743 JUMPI PUSH2 0x2742 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2751 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276F DUP2 PUSH2 0x275A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x278B PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2798 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27A5 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27B2 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27BF PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27CC PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27D9 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27E6 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x27F4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2817 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2842 DUP6 DUP3 DUP7 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2853 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2872 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x287F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x288C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x28D4 JUMPI PUSH2 0x28D3 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x28E5 DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F5 DUP3 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2905 DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2960 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2977 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x2981 DUP2 DUP6 PUSH2 0x2931 JUMP JUMPDEST SWAP4 POP PUSH2 0x2991 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x299A DUP2 PUSH2 0x2370 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BF DUP2 DUP5 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29DD JUMPI PUSH2 0x29DC PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP5 DUP3 DUP6 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x477265617465724F72457175616C5468616E4E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2A PUSH1 0x13 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A35 DUP3 PUSH2 0x29F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A59 DUP2 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479436F6D6D697474656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A96 PUSH1 0x10 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA1 DUP3 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC5 DUP2 PUSH2 0x2A89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B26 JUMPI PUSH2 0x2B25 PUSH2 0x2ACC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B42 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x2B4C DUP2 DUP6 PUSH2 0x2B2C JUMP JUMPDEST SWAP4 POP PUSH2 0x2B5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2942 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B74 DUP3 DUP6 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP3 DUP5 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2BEE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x2BF8 DUP7 DUP4 PUSH2 0x2BB1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C35 PUSH2 0x2C30 PUSH2 0x2C2B DUP5 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x2259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C4F DUP4 PUSH2 0x2C1A JUMP JUMPDEST PUSH2 0x2C63 PUSH2 0x2C5B DUP3 PUSH2 0x2C3C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2BBE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2C78 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x2C83 DUP2 DUP5 DUP5 PUSH2 0x2C46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CA7 JUMPI PUSH2 0x2C9C PUSH1 0x0 DUP3 PUSH2 0x2C70 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CEC JUMPI PUSH2 0x2CBD DUP2 PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0x2CC6 DUP5 PUSH2 0x2BA1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2CD5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2CE9 PUSH2 0x2CE1 DUP6 PUSH2 0x2BA1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2C88 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2CF1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D28 DUP4 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D41 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH2 0x2D64 DUP3 SLOAD PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0x2D6F DUP3 DUP3 DUP6 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DA2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D90 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2D9A DUP6 DUP3 PUSH2 0x2D1C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2DB0 DUP7 PUSH2 0x2B8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2DD8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DB3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2DF5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2DF1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2CFE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E44 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2E76 JUMPI PUSH2 0x2E75 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E96 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x2EA3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2EB5 DUP2 DUP7 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP PUSH2 0x2EC4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2ED1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74416C6C52657665616C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F11 PUSH1 0xE DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1C DUP3 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F40 DUP2 PUSH2 0x2F04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6D656761416C7265616479436F6D706C657465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x15 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F88 DUP3 PUSH2 0x2F47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FAC DUP2 PUSH2 0x2F70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FED DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF8 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3008 JUMPI PUSH2 0x3007 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3042 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x304F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x436F6D6D697452657665616C4475726174696F6E4C6573735468616E436F6D6D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x69744475726174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E3 PUSH1 0x2A DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x30EE DUP3 PUSH2 0x3087 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3112 DUP2 PUSH2 0x30D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746167654E6F7446696E697368656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314F PUSH1 0x10 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x315A DUP3 PUSH2 0x3119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x317E DUP2 PUSH2 0x3142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3190 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x319B DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x31B3 JUMPI PUSH2 0x31B2 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x31CF PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x31DC PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x31E9 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x31F6 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3203 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3210 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x321D PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x322A PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3238 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x544E6F744D617463686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327C PUSH1 0xB DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3287 DUP3 PUSH2 0x3246 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32AB DUP2 PUSH2 0x326F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C8 JUMPI PUSH2 0x32C7 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32D6 DUP5 DUP3 DUP6 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265636F764E6F744D6174636858000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3315 PUSH1 0xE DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3320 DUP3 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3344 DUP2 PUSH2 0x3308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3360 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x336D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x337A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3387 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x339D DUP2 PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0x33A7 DUP2 DUP7 PUSH2 0x2B2C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x33C2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x33D7 JUMPI PUSH2 0x340A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x340A JUMP JUMPDEST PUSH2 0x33E0 DUP6 PUSH2 0x2B8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3402 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33E3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341F DUP3 DUP5 PUSH2 0x3390 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74436F6D6D69747465645061727469636970616E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3460 PUSH1 0x17 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x346B DUP3 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x348F DUP2 PUSH2 0x3453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647952657665616C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CC PUSH1 0xF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D7 DUP3 PUSH2 0x3496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34FB DUP2 PUSH2 0x34BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414E6F744D61746368436F6D6D69740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3538 PUSH1 0xF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3543 DUP3 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3567 DUP2 PUSH2 0x352B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3579 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x358C JUMPI PUSH2 0x358B PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 PUSH1 0x26 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FE DUP3 PUSH2 0x3597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3622 DUP2 PUSH2 0x35E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365F PUSH1 0x20 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x366A DUP3 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x368E DUP2 PUSH2 0x3652 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E496E76616C69644174546869735374616765000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CB PUSH1 0x1A DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D6 DUP3 PUSH2 0x3695 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36FA DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370C DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x3717 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3727 JUMPI PUSH2 0x3726 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C46696E6973686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3768 PUSH1 0xB DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3773 DUP3 PUSH2 0x3732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3797 DUP2 PUSH2 0x375B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A9 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B4 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x37C2 DUP2 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x37D9 JUMPI PUSH2 0x37D8 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37EC DUP3 DUP5 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 SMOD 0xA6 DUP14 PUSH28 0x20A2C7500857CD87B8E592F102BB7C57C0CC9718EC813174CD460864 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"469:12259:2:-:0;;;3472:54;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3504:15:2;3496:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;469:12259;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:180:5:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;469:12259:2;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":6439,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":7863,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":7436,"id":111,"parameterSlots":1,"returnSlots":0},"@calculateOmega_670":{"entryPoint":1839,"id":670,"parameterSlots":0,"returnSlots":1},"@checkStage_1068":{"entryPoint":4688,"id":1068,"parameterSlots":0,"returnSlots":0},"@commitDuration_182":{"entryPoint":4546,"id":182,"parameterSlots":0,"returnSlots":0},"@commitRevealDuration_184":{"entryPoint":4572,"id":184,"parameterSlots":0,"returnSlots":0},"@commitRevealValues_200":{"entryPoint":3404,"id":200,"parameterSlots":0,"returnSlots":0},"@commit_394":{"entryPoint":886,"id":394,"parameterSlots":2,"returnSlots":0},"@commitsString_190":{"entryPoint":6166,"id":190,"parameterSlots":0,"returnSlots":0},"@count_186":{"entryPoint":880,"id":186,"parameterSlots":0,"returnSlots":0},"@equalStage_1082":{"entryPoint":6565,"id":1082,"parameterSlots":1,"returnSlots":0},"@log10_1673":{"entryPoint":7871,"id":1673,"parameterSlots":1,"returnSlots":1},"@modHash_1216":{"entryPoint":8679,"id":1216,"parameterSlots":2,"returnSlots":1},"@nextStage_1122":{"entryPoint":7632,"id":1122,"parameterSlots":0,"returnSlots":0},"@overStage_1096":{"entryPoint":7316,"id":1096,"parameterSlots":1,"returnSlots":0},"@owner_40":{"entryPoint":5101,"id":40,"parameterSlots":0,"returnSlots":1},"@powerModN_1497":{"entryPoint":6891,"id":1497,"parameterSlots":3,"returnSlots":1},"@processSingleHalvingProof_1356":{"entryPoint":8210,"id":1356,"parameterSlots":1,"returnSlots":1},"@recover_843":{"entryPoint":3491,"id":843,"parameterSlots":3,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":4552,"id":68,"parameterSlots":0,"returnSlots":0},"@reveal_513":{"entryPoint":5223,"id":513,"parameterSlots":2,"returnSlots":0},"@round_188":{"entryPoint":2597,"id":188,"parameterSlots":0,"returnSlots":0},"@stage_193":{"entryPoint":6147,"id":193,"parameterSlots":0,"returnSlots":0},"@startTime_180":{"entryPoint":4682,"id":180,"parameterSlots":0,"returnSlots":0},"@start_980":{"entryPoint":2603,"id":980,"parameterSlots":5,"returnSlots":0},"@toString_1544":{"entryPoint":6685,"id":1544,"parameterSlots":1,"returnSlots":1},"@transferOwnership_91":{"entryPoint":6308,"id":91,"parameterSlots":1,"returnSlots":0},"@userInfosAtRound_212":{"entryPoint":5142,"id":212,"parameterSlots":0,"returnSlots":0},"@valuesAtRound_205":{"entryPoint":4578,"id":205,"parameterSlots":0,"returnSlots":0},"@verifyRecursiveHalvingProof_1444":{"entryPoint":6990,"id":1444,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr":{"entryPoint":9406,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":9847,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr":{"entryPoint":9511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_VDFClaim_$1183_memory_ptr":{"entryPoint":9266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10269,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_VDFClaim_$1183_memory_ptr":{"entryPoint":12978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":9003,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":9933,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":9708,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptrt_address":{"entryPoint":9557,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9772,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10086,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack":{"entryPoint":10492,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack":{"entryPoint":13064,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack":{"entryPoint":12036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack":{"entryPoint":12144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack":{"entryPoint":12911,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack":{"entryPoint":13611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack":{"entryPoint":13395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack":{"entryPoint":14014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack":{"entryPoint":10889,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack":{"entryPoint":10781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack":{"entryPoint":14171,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack":{"entryPoint":12502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13906,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack":{"entryPoint":13503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack":{"entryPoint":12610,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8803,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11112,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11905,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13131,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12729,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed":{"entryPoint":10507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13099,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13430,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14206,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13538,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":10333,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":9787,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":12307,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":10101,"id":null,"parameterSlots":10,"returnSlots":1},"allocate_memory":{"entryPoint":9185,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8845,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr":{"entryPoint":9212,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":11148,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10534,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10545,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11052,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12677,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14081,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14238,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":11435,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8941,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10074,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Stages_$145":{"entryPoint":10455,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8909,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8793,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":11400,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Stages_$145_to_t_uint8":{"entryPoint":10474,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":11290,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11576,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10562,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":13678,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":11169,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11003,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":11548,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9136,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11280,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11833,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":11518,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":12258,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11786,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12211,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10388,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10956,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12376,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9089,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":11324,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9842,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9067,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":9261,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9256,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8860,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8855,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9072,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":11185,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":11505,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":11376,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5":{"entryPoint":13023,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042":{"entryPoint":11995,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6":{"entryPoint":12103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c":{"entryPoint":12870,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba":{"entryPoint":13570,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f":{"entryPoint":13354,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13719,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc":{"entryPoint":13973,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532":{"entryPoint":10848,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162":{"entryPoint":10740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa":{"entryPoint":14130,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68":{"entryPoint":12423,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13865,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8":{"entryPoint":13462,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874":{"entryPoint":12569,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":11198,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":11334,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Stages_$145":{"entryPoint":10435,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8959,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8865,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":11371,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:42351:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:5","statements":[{"nodeType":"YulAssignment","src":"62:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:77:5"},{"body":{"nodeType":"YulBlock","src":"155:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:5"},"nodeType":"YulFunctionCall","src":"177:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:5"},"nodeType":"YulFunctionCall","src":"165:37:5"},"nodeType":"YulExpressionStatement","src":"165:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:5","type":""}],"src":"90:118:5"},{"body":{"nodeType":"YulBlock","src":"312:124:5","statements":[{"nodeType":"YulAssignment","src":"322:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:5"},"nodeType":"YulFunctionCall","src":"330:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:5"},"nodeType":"YulFunctionCall","src":"411:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:5"},"nodeType":"YulFunctionCall","src":"358:71:5"},"nodeType":"YulExpressionStatement","src":"358:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:5","type":""}],"src":"214:222:5"},{"body":{"nodeType":"YulBlock","src":"482:35:5","statements":[{"nodeType":"YulAssignment","src":"492:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:5"},"nodeType":"YulFunctionCall","src":"502:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:5","type":""}],"src":"442:75:5"},{"body":{"nodeType":"YulBlock","src":"612:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:5"},"nodeType":"YulFunctionCall","src":"622:12:5"},"nodeType":"YulExpressionStatement","src":"622:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:5"},{"body":{"nodeType":"YulBlock","src":"735:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:5"},"nodeType":"YulFunctionCall","src":"745:12:5"},"nodeType":"YulExpressionStatement","src":"745:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:5"},{"body":{"nodeType":"YulBlock","src":"812:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:5"},"nodeType":"YulFunctionCall","src":"871:12:5"},"nodeType":"YulExpressionStatement","src":"871:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:5"},"nodeType":"YulFunctionCall","src":"842:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:5"},"nodeType":"YulFunctionCall","src":"832:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:5"},"nodeType":"YulFunctionCall","src":"825:43:5"},"nodeType":"YulIf","src":"822:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:5","type":""}],"src":"769:122:5"},{"body":{"nodeType":"YulBlock","src":"949:87:5","statements":[{"nodeType":"YulAssignment","src":"959:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:5"},"nodeType":"YulFunctionCall","src":"968:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:5"},"nodeType":"YulFunctionCall","src":"997:33:5"},"nodeType":"YulExpressionStatement","src":"997:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:5","type":""}],"src":"897:139:5"},{"body":{"nodeType":"YulBlock","src":"1087:81:5","statements":[{"nodeType":"YulAssignment","src":"1097:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1112:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1119:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1108:3:5"},"nodeType":"YulFunctionCall","src":"1108:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1097:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1069:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1079:7:5","type":""}],"src":"1042:126:5"},{"body":{"nodeType":"YulBlock","src":"1219:51:5","statements":[{"nodeType":"YulAssignment","src":"1229:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1240:17:5"},"nodeType":"YulFunctionCall","src":"1240:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1229:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1201:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1211:7:5","type":""}],"src":"1174:96:5"},{"body":{"nodeType":"YulBlock","src":"1319:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"1376:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1385:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1388:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1378:6:5"},"nodeType":"YulFunctionCall","src":"1378:12:5"},"nodeType":"YulExpressionStatement","src":"1378:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1342:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1367:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1349:17:5"},"nodeType":"YulFunctionCall","src":"1349:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1339:2:5"},"nodeType":"YulFunctionCall","src":"1339:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1332:6:5"},"nodeType":"YulFunctionCall","src":"1332:43:5"},"nodeType":"YulIf","src":"1329:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:5","type":""}],"src":"1276:122:5"},{"body":{"nodeType":"YulBlock","src":"1456:87:5","statements":[{"nodeType":"YulAssignment","src":"1466:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1475:12:5"},"nodeType":"YulFunctionCall","src":"1475:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1466:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1531:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1504:26:5"},"nodeType":"YulFunctionCall","src":"1504:33:5"},"nodeType":"YulExpressionStatement","src":"1504:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1434:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1442:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1450:5:5","type":""}],"src":"1404:139:5"},{"body":{"nodeType":"YulBlock","src":"1632:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"1678:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1680:77:5"},"nodeType":"YulFunctionCall","src":"1680:79:5"},"nodeType":"YulExpressionStatement","src":"1680:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1653:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1649:3:5"},"nodeType":"YulFunctionCall","src":"1649:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1674:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1645:3:5"},"nodeType":"YulFunctionCall","src":"1645:32:5"},"nodeType":"YulIf","src":"1642:119:5"},{"nodeType":"YulBlock","src":"1771:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1786:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1800:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1790:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1815:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1850:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1861:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1846:3:5"},"nodeType":"YulFunctionCall","src":"1846:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1870:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1825:20:5"},"nodeType":"YulFunctionCall","src":"1825:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1815:6:5"}]}]},{"nodeType":"YulBlock","src":"1898:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1913:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1927:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1917:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1943:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1978:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1989:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1974:3:5"},"nodeType":"YulFunctionCall","src":"1974:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1998:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1953:20:5"},"nodeType":"YulFunctionCall","src":"1953:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1943:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1594:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1605:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1617:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1625:6:5","type":""}],"src":"1549:474:5"},{"body":{"nodeType":"YulBlock","src":"2118:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2135:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2138:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2128:6:5"},"nodeType":"YulFunctionCall","src":"2128:12:5"},"nodeType":"YulExpressionStatement","src":"2128:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2029:117:5"},{"body":{"nodeType":"YulBlock","src":"2200:54:5","statements":[{"nodeType":"YulAssignment","src":"2210:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2228:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"2235:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2224:3:5"},"nodeType":"YulFunctionCall","src":"2224:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2244:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2240:3:5"},"nodeType":"YulFunctionCall","src":"2240:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2220:3:5"},"nodeType":"YulFunctionCall","src":"2220:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2210:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2183:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2193:6:5","type":""}],"src":"2152:102:5"},{"body":{"nodeType":"YulBlock","src":"2288:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2305:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2308:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2298:6:5"},"nodeType":"YulFunctionCall","src":"2298:88:5"},"nodeType":"YulExpressionStatement","src":"2298:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2402:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2405:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2395:6:5"},"nodeType":"YulFunctionCall","src":"2395:15:5"},"nodeType":"YulExpressionStatement","src":"2395:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2426:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2429:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2419:6:5"},"nodeType":"YulFunctionCall","src":"2419:15:5"},"nodeType":"YulExpressionStatement","src":"2419:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2260:180:5"},{"body":{"nodeType":"YulBlock","src":"2489:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2499:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2521:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2551:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2529:21:5"},"nodeType":"YulFunctionCall","src":"2529:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:5"},"nodeType":"YulFunctionCall","src":"2517:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2503:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2668:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2670:16:5"},"nodeType":"YulFunctionCall","src":"2670:18:5"},"nodeType":"YulExpressionStatement","src":"2670:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2611:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"2623:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2608:2:5"},"nodeType":"YulFunctionCall","src":"2608:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2647:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2659:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:5"},"nodeType":"YulFunctionCall","src":"2644:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2605:2:5"},"nodeType":"YulFunctionCall","src":"2605:62:5"},"nodeType":"YulIf","src":"2602:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2706:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2710:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2699:6:5"},"nodeType":"YulFunctionCall","src":"2699:22:5"},"nodeType":"YulExpressionStatement","src":"2699:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2475:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"2483:4:5","type":""}],"src":"2446:281:5"},{"body":{"nodeType":"YulBlock","src":"2774:88:5","statements":[{"nodeType":"YulAssignment","src":"2784:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2794:18:5"},"nodeType":"YulFunctionCall","src":"2794:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2784:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2843:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"2851:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2823:19:5"},"nodeType":"YulFunctionCall","src":"2823:33:5"},"nodeType":"YulExpressionStatement","src":"2823:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2758:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2767:6:5","type":""}],"src":"2733:129:5"},{"body":{"nodeType":"YulBlock","src":"2976:229:5","statements":[{"body":{"nodeType":"YulBlock","src":"3081:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3083:16:5"},"nodeType":"YulFunctionCall","src":"3083:18:5"},"nodeType":"YulExpressionStatement","src":"3083:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3053:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3061:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3050:2:5"},"nodeType":"YulFunctionCall","src":"3050:30:5"},"nodeType":"YulIf","src":"3047:56:5"},{"nodeType":"YulAssignment","src":"3113:25:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3125:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3133:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3121:3:5"},"nodeType":"YulFunctionCall","src":"3121:17:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3113:4:5"}]},{"nodeType":"YulAssignment","src":"3175:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3187:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"3193:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3183:3:5"},"nodeType":"YulFunctionCall","src":"3183:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3175:4:5"}]}]},"name":"array_allocation_size_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2960:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2971:4:5","type":""}],"src":"2868:337:5"},{"body":{"nodeType":"YulBlock","src":"3300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3310:6:5"},"nodeType":"YulFunctionCall","src":"3310:12:5"},"nodeType":"YulExpressionStatement","src":"3310:12:5"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3211:117:5"},{"body":{"nodeType":"YulBlock","src":"3423:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3440:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3443:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3433:6:5"},"nodeType":"YulFunctionCall","src":"3433:12:5"},"nodeType":"YulExpressionStatement","src":"3433:12:5"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"3334:117:5"},{"body":{"nodeType":"YulBlock","src":"3546:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3563:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3566:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3556:6:5"},"nodeType":"YulFunctionCall","src":"3556:12:5"},"nodeType":"YulExpressionStatement","src":"3556:12:5"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"3457:117:5"},{"body":{"nodeType":"YulBlock","src":"3697:963:5","statements":[{"body":{"nodeType":"YulBlock","src":"3741:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"3743:77:5"},"nodeType":"YulFunctionCall","src":"3743:79:5"},"nodeType":"YulExpressionStatement","src":"3743:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3718:3:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3723:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3714:3:5"},"nodeType":"YulFunctionCall","src":"3714:19:5"},{"kind":"number","nodeType":"YulLiteral","src":"3735:4:5","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3710:3:5"},"nodeType":"YulFunctionCall","src":"3710:30:5"},"nodeType":"YulIf","src":"3707:117:5"},{"nodeType":"YulAssignment","src":"3833:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3858:4:5","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3842:15:5"},"nodeType":"YulFunctionCall","src":"3842:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3833:5:5"}]},{"nodeType":"YulBlock","src":"3873:147:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3905:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3919:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3909:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3945:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3952:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3941:3:5"},"nodeType":"YulFunctionCall","src":"3941:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3984:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3995:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3980:3:5"},"nodeType":"YulFunctionCall","src":"3980:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"4004:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3959:20:5"},"nodeType":"YulFunctionCall","src":"3959:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3934:6:5"},"nodeType":"YulFunctionCall","src":"3934:75:5"},"nodeType":"YulExpressionStatement","src":"3934:75:5"}]},{"nodeType":"YulBlock","src":"4030:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4062:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4076:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4066:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4103:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4110:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4099:3:5"},"nodeType":"YulFunctionCall","src":"4099:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4142:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4153:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:5"},"nodeType":"YulFunctionCall","src":"4138:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"4162:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4117:20:5"},"nodeType":"YulFunctionCall","src":"4117:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4092:6:5"},"nodeType":"YulFunctionCall","src":"4092:75:5"},"nodeType":"YulExpressionStatement","src":"4092:75:5"}]},{"nodeType":"YulBlock","src":"4188:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4220:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4234:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4224:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4261:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4268:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:5"},"nodeType":"YulFunctionCall","src":"4257:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4300:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4311:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4296:3:5"},"nodeType":"YulFunctionCall","src":"4296:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"4320:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4275:20:5"},"nodeType":"YulFunctionCall","src":"4275:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4250:6:5"},"nodeType":"YulFunctionCall","src":"4250:75:5"},"nodeType":"YulExpressionStatement","src":"4250:75:5"}]},{"nodeType":"YulBlock","src":"4346:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4378:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4392:2:5","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4382:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4419:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4426:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:5"},"nodeType":"YulFunctionCall","src":"4415:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4458:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4469:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4454:3:5"},"nodeType":"YulFunctionCall","src":"4454:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"4478:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4433:20:5"},"nodeType":"YulFunctionCall","src":"4433:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4408:6:5"},"nodeType":"YulFunctionCall","src":"4408:75:5"},"nodeType":"YulExpressionStatement","src":"4408:75:5"}]},{"nodeType":"YulBlock","src":"4504:149:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4536:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4550:3:5","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4540:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4578:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"4585:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4574:3:5"},"nodeType":"YulFunctionCall","src":"4574:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4617:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4628:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4613:3:5"},"nodeType":"YulFunctionCall","src":"4613:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"4637:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4592:20:5"},"nodeType":"YulFunctionCall","src":"4592:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4567:6:5"},"nodeType":"YulFunctionCall","src":"4567:75:5"},"nodeType":"YulExpressionStatement","src":"4567:75:5"}]}]},"name":"abi_decode_t_struct$_VDFClaim_$1183_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3672:9:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"3683:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3691:5:5","type":""}],"src":"3616:1044:5"},{"body":{"nodeType":"YulBlock","src":"4832:660:5","statements":[{"nodeType":"YulAssignment","src":"4842:116:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4950:6:5"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4867:82:5"},"nodeType":"YulFunctionCall","src":"4867:90:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4851:15:5"},"nodeType":"YulFunctionCall","src":"4851:107:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4842:5:5"}]},{"nodeType":"YulVariableDeclaration","src":"4967:16:5","value":{"name":"array","nodeType":"YulIdentifier","src":"4978:5:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4971:3:5","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5000:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"5007:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4993:6:5"},"nodeType":"YulFunctionCall","src":"4993:21:5"},"nodeType":"YulExpressionStatement","src":"4993:21:5"},{"nodeType":"YulAssignment","src":"5023:23:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5034:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"5041:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5030:3:5"},"nodeType":"YulFunctionCall","src":"5030:16:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5023:3:5"}]},{"nodeType":"YulVariableDeclaration","src":"5056:44:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5074:6:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5086:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5094:4:5","type":"","value":"0xa0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5082:3:5"},"nodeType":"YulFunctionCall","src":"5082:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5070:3:5"},"nodeType":"YulFunctionCall","src":"5070:30:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5060:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"5128:103:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5142:77:5"},"nodeType":"YulFunctionCall","src":"5142:79:5"},"nodeType":"YulExpressionStatement","src":"5142:79:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5115:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5123:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5112:2:5"},"nodeType":"YulFunctionCall","src":"5112:15:5"},"nodeType":"YulIf","src":"5109:122:5"},{"body":{"nodeType":"YulBlock","src":"5316:170:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5331:21:5","value":{"name":"src","nodeType":"YulIdentifier","src":"5349:3:5"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5335:10:5","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5373:3:5"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5425:10:5"},{"name":"end","nodeType":"YulIdentifier","src":"5437:3:5"}],"functionName":{"name":"abi_decode_t_struct$_VDFClaim_$1183_memory_ptr","nodeType":"YulIdentifier","src":"5378:46:5"},"nodeType":"YulFunctionCall","src":"5378:63:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5366:6:5"},"nodeType":"YulFunctionCall","src":"5366:76:5"},"nodeType":"YulExpressionStatement","src":"5366:76:5"},{"nodeType":"YulAssignment","src":"5455:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5466:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5471:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5462:3:5"},"nodeType":"YulFunctionCall","src":"5462:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5455:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5269:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5274:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5266:2:5"},"nodeType":"YulFunctionCall","src":"5266:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5282:25:5","statements":[{"nodeType":"YulAssignment","src":"5284:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5295:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"5300:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5291:3:5"},"nodeType":"YulFunctionCall","src":"5291:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5284:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"5244:21:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5246:17:5","value":{"name":"offset","nodeType":"YulIdentifier","src":"5257:6:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5250:3:5","type":""}]}]},"src":"5240:246:5"}]},"name":"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4802:6:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"4810:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4818:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4826:5:5","type":""}],"src":"4704:788:5"},{"body":{"nodeType":"YulBlock","src":"5639:319:5","statements":[{"body":{"nodeType":"YulBlock","src":"5688:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5690:77:5"},"nodeType":"YulFunctionCall","src":"5690:79:5"},"nodeType":"YulExpressionStatement","src":"5690:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5667:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5675:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5663:3:5"},"nodeType":"YulFunctionCall","src":"5663:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"5682:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5659:3:5"},"nodeType":"YulFunctionCall","src":"5659:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5652:6:5"},"nodeType":"YulFunctionCall","src":"5652:35:5"},"nodeType":"YulIf","src":"5649:122:5"},{"nodeType":"YulVariableDeclaration","src":"5780:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5807:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5794:12:5"},"nodeType":"YulFunctionCall","src":"5794:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5784:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5823:129:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5925:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"5933:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5921:3:5"},"nodeType":"YulFunctionCall","src":"5921:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"5940:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"5948:3:5"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5832:88:5"},"nodeType":"YulFunctionCall","src":"5832:120:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5823:5:5"}]}]},"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5617:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"5625:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5633:5:5","type":""}],"src":"5536:422:5"},{"body":{"nodeType":"YulBlock","src":"6149:988:5","statements":[{"body":{"nodeType":"YulBlock","src":"6196:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6198:77:5"},"nodeType":"YulFunctionCall","src":"6198:79:5"},"nodeType":"YulExpressionStatement","src":"6198:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6170:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"6179:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6166:3:5"},"nodeType":"YulFunctionCall","src":"6166:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"6191:3:5","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6162:3:5"},"nodeType":"YulFunctionCall","src":"6162:33:5"},"nodeType":"YulIf","src":"6159:120:5"},{"nodeType":"YulBlock","src":"6289:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6304:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6318:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:5","type":""}]},{"nodeType":"YulAssignment","src":"6333:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6368:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6379:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6364:3:5"},"nodeType":"YulFunctionCall","src":"6364:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6388:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6343:20:5"},"nodeType":"YulFunctionCall","src":"6343:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6333:6:5"}]}]},{"nodeType":"YulBlock","src":"6416:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6431:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6445:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6435:6:5","type":""}]},{"nodeType":"YulAssignment","src":"6461:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6496:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6507:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:5"},"nodeType":"YulFunctionCall","src":"6492:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6516:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6471:20:5"},"nodeType":"YulFunctionCall","src":"6471:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6461:6:5"}]}]},{"nodeType":"YulBlock","src":"6544:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6559:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6573:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6563:6:5","type":""}]},{"nodeType":"YulAssignment","src":"6589:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6624:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6635:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6620:3:5"},"nodeType":"YulFunctionCall","src":"6620:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6644:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6599:20:5"},"nodeType":"YulFunctionCall","src":"6599:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6589:6:5"}]}]},{"nodeType":"YulBlock","src":"6672:329:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6687:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6718:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6729:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6714:3:5"},"nodeType":"YulFunctionCall","src":"6714:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6701:12:5"},"nodeType":"YulFunctionCall","src":"6701:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6691:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6780:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6782:77:5"},"nodeType":"YulFunctionCall","src":"6782:79:5"},"nodeType":"YulExpressionStatement","src":"6782:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6752:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6760:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6749:2:5"},"nodeType":"YulFunctionCall","src":"6749:30:5"},"nodeType":"YulIf","src":"6746:117:5"},{"nodeType":"YulAssignment","src":"6877:114:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6963:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6974:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6959:3:5"},"nodeType":"YulFunctionCall","src":"6959:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6983:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6887:71:5"},"nodeType":"YulFunctionCall","src":"6887:104:5"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6877:6:5"}]}]},{"nodeType":"YulBlock","src":"7011:119:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7026:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7040:3:5","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7030:6:5","type":""}]},{"nodeType":"YulAssignment","src":"7057:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7092:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7103:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7088:3:5"},"nodeType":"YulFunctionCall","src":"7088:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7112:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7067:20:5"},"nodeType":"YulFunctionCall","src":"7067:53:5"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7057:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6087:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6098:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6110:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6118:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6126:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6134:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6142:6:5","type":""}],"src":"5964:1173:5"},{"body":{"nodeType":"YulBlock","src":"7226:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"7272:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7274:77:5"},"nodeType":"YulFunctionCall","src":"7274:79:5"},"nodeType":"YulExpressionStatement","src":"7274:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7247:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"7256:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7243:3:5"},"nodeType":"YulFunctionCall","src":"7243:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"7268:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7239:3:5"},"nodeType":"YulFunctionCall","src":"7239:32:5"},"nodeType":"YulIf","src":"7236:119:5"},{"nodeType":"YulBlock","src":"7365:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7380:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7394:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7384:6:5","type":""}]},{"nodeType":"YulAssignment","src":"7409:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7444:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7455:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:5"},"nodeType":"YulFunctionCall","src":"7440:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7464:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7419:20:5"},"nodeType":"YulFunctionCall","src":"7419:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7409:6:5"}]}]},{"nodeType":"YulBlock","src":"7492:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7507:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7521:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7511:6:5","type":""}]},{"nodeType":"YulAssignment","src":"7537:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7572:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7583:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7568:3:5"},"nodeType":"YulFunctionCall","src":"7568:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7592:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7547:20:5"},"nodeType":"YulFunctionCall","src":"7547:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7537:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7188:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7199:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7211:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7219:6:5","type":""}],"src":"7143:474:5"},{"body":{"nodeType":"YulBlock","src":"7688:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7705:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7728:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7710:17:5"},"nodeType":"YulFunctionCall","src":"7710:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7698:6:5"},"nodeType":"YulFunctionCall","src":"7698:37:5"},"nodeType":"YulExpressionStatement","src":"7698:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7676:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7683:3:5","type":""}],"src":"7623:118:5"},{"body":{"nodeType":"YulBlock","src":"7901:288:5","statements":[{"nodeType":"YulAssignment","src":"7911:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7923:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"7934:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7919:3:5"},"nodeType":"YulFunctionCall","src":"7919:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7911:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7991:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8004:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8015:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8000:3:5"},"nodeType":"YulFunctionCall","src":"8000:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7947:43:5"},"nodeType":"YulFunctionCall","src":"7947:71:5"},"nodeType":"YulExpressionStatement","src":"7947:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8072:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8085:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8096:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8081:3:5"},"nodeType":"YulFunctionCall","src":"8081:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8028:43:5"},"nodeType":"YulFunctionCall","src":"8028:72:5"},"nodeType":"YulExpressionStatement","src":"8028:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8154:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8167:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"8178:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8163:3:5"},"nodeType":"YulFunctionCall","src":"8163:18:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8110:43:5"},"nodeType":"YulFunctionCall","src":"8110:72:5"},"nodeType":"YulExpressionStatement","src":"8110:72:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7857:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7869:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7877:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7885:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7896:4:5","type":""}],"src":"7747:442:5"},{"body":{"nodeType":"YulBlock","src":"8284:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8301:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8304:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8294:6:5"},"nodeType":"YulFunctionCall","src":"8294:12:5"},"nodeType":"YulExpressionStatement","src":"8294:12:5"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"8195:117:5"},{"body":{"nodeType":"YulBlock","src":"8474:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"8523:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8525:77:5"},"nodeType":"YulFunctionCall","src":"8525:79:5"},"nodeType":"YulExpressionStatement","src":"8525:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8502:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8510:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8498:3:5"},"nodeType":"YulFunctionCall","src":"8498:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"8517:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8494:3:5"},"nodeType":"YulFunctionCall","src":"8494:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8487:6:5"},"nodeType":"YulFunctionCall","src":"8487:35:5"},"nodeType":"YulIf","src":"8484:122:5"},{"nodeType":"YulAssignment","src":"8615:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8638:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8625:12:5"},"nodeType":"YulFunctionCall","src":"8625:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8615:6:5"}]},{"body":{"nodeType":"YulBlock","src":"8688:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"8690:77:5"},"nodeType":"YulFunctionCall","src":"8690:79:5"},"nodeType":"YulExpressionStatement","src":"8690:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8660:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8668:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8657:2:5"},"nodeType":"YulFunctionCall","src":"8657:30:5"},"nodeType":"YulIf","src":"8654:117:5"},{"nodeType":"YulAssignment","src":"8780:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8796:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8804:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8792:3:5"},"nodeType":"YulFunctionCall","src":"8792:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8780:8:5"}]},{"body":{"nodeType":"YulBlock","src":"8863:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8865:77:5"},"nodeType":"YulFunctionCall","src":"8865:79:5"},"nodeType":"YulExpressionStatement","src":"8865:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"8828:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8842:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8850:4:5","type":"","value":"0xa0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8838:3:5"},"nodeType":"YulFunctionCall","src":"8838:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8824:3:5"},"nodeType":"YulFunctionCall","src":"8824:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"8858:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8821:2:5"},"nodeType":"YulFunctionCall","src":"8821:41:5"},"nodeType":"YulIf","src":"8818:128:5"}]},"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8441:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"8449:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"8457:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"8467:6:5","type":""}],"src":"8356:596:5"},{"body":{"nodeType":"YulBlock","src":"9104:614:5","statements":[{"body":{"nodeType":"YulBlock","src":"9150:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9152:77:5"},"nodeType":"YulFunctionCall","src":"9152:79:5"},"nodeType":"YulExpressionStatement","src":"9152:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9125:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9134:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9121:3:5"},"nodeType":"YulFunctionCall","src":"9121:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"9146:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9117:3:5"},"nodeType":"YulFunctionCall","src":"9117:32:5"},"nodeType":"YulIf","src":"9114:119:5"},{"nodeType":"YulBlock","src":"9243:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9258:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9272:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9262:6:5","type":""}]},{"nodeType":"YulAssignment","src":"9287:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9322:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9333:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9318:3:5"},"nodeType":"YulFunctionCall","src":"9318:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9342:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9297:20:5"},"nodeType":"YulFunctionCall","src":"9297:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9287:6:5"}]}]},{"nodeType":"YulBlock","src":"9370:341:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9385:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9416:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"9427:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9412:3:5"},"nodeType":"YulFunctionCall","src":"9412:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9399:12:5"},"nodeType":"YulFunctionCall","src":"9399:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9389:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"9478:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9480:77:5"},"nodeType":"YulFunctionCall","src":"9480:79:5"},"nodeType":"YulExpressionStatement","src":"9480:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9450:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"9458:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9447:2:5"},"nodeType":"YulFunctionCall","src":"9447:30:5"},"nodeType":"YulIf","src":"9444:117:5"},{"nodeType":"YulAssignment","src":"9575:126:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9673:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9684:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9669:3:5"},"nodeType":"YulFunctionCall","src":"9669:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9693:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"9593:75:5"},"nodeType":"YulFunctionCall","src":"9593:108:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9575:6:5"},{"name":"value2","nodeType":"YulIdentifier","src":"9583:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9058:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9069:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9081:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9089:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9097:6:5","type":""}],"src":"8958:760:5"},{"body":{"nodeType":"YulBlock","src":"9790:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"9836:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9838:77:5"},"nodeType":"YulFunctionCall","src":"9838:79:5"},"nodeType":"YulExpressionStatement","src":"9838:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9811:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9820:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9807:3:5"},"nodeType":"YulFunctionCall","src":"9807:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"9832:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9803:3:5"},"nodeType":"YulFunctionCall","src":"9803:32:5"},"nodeType":"YulIf","src":"9800:119:5"},{"nodeType":"YulBlock","src":"9929:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9944:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9958:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9948:6:5","type":""}]},{"nodeType":"YulAssignment","src":"9973:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10008:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10019:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10004:3:5"},"nodeType":"YulFunctionCall","src":"10004:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10028:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9983:20:5"},"nodeType":"YulFunctionCall","src":"9983:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9973:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9760:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9771:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9783:6:5","type":""}],"src":"9724:329:5"},{"body":{"nodeType":"YulBlock","src":"10101:48:5","statements":[{"nodeType":"YulAssignment","src":"10111:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10136:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10129:6:5"},"nodeType":"YulFunctionCall","src":"10129:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10122:6:5"},"nodeType":"YulFunctionCall","src":"10122:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10111:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10083:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10093:7:5","type":""}],"src":"10059:90:5"},{"body":{"nodeType":"YulBlock","src":"10214:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10231:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10251:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10236:14:5"},"nodeType":"YulFunctionCall","src":"10236:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10224:6:5"},"nodeType":"YulFunctionCall","src":"10224:34:5"},"nodeType":"YulExpressionStatement","src":"10224:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10202:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10209:3:5","type":""}],"src":"10155:109:5"},{"body":{"nodeType":"YulBlock","src":"10580:774:5","statements":[{"nodeType":"YulAssignment","src":"10590:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10602:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10613:3:5","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10598:3:5"},"nodeType":"YulFunctionCall","src":"10598:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10590:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10671:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10684:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10695:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10680:3:5"},"nodeType":"YulFunctionCall","src":"10680:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10627:43:5"},"nodeType":"YulFunctionCall","src":"10627:71:5"},"nodeType":"YulExpressionStatement","src":"10627:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10752:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10765:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10776:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10761:3:5"},"nodeType":"YulFunctionCall","src":"10761:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10708:43:5"},"nodeType":"YulFunctionCall","src":"10708:72:5"},"nodeType":"YulExpressionStatement","src":"10708:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10834:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10847:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10858:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10843:3:5"},"nodeType":"YulFunctionCall","src":"10843:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10790:43:5"},"nodeType":"YulFunctionCall","src":"10790:72:5"},"nodeType":"YulExpressionStatement","src":"10790:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10916:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10929:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10940:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10925:3:5"},"nodeType":"YulFunctionCall","src":"10925:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10872:43:5"},"nodeType":"YulFunctionCall","src":"10872:72:5"},"nodeType":"YulExpressionStatement","src":"10872:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10998:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11011:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11022:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11007:3:5"},"nodeType":"YulFunctionCall","src":"11007:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10954:43:5"},"nodeType":"YulFunctionCall","src":"10954:73:5"},"nodeType":"YulExpressionStatement","src":"10954:73:5"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11081:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11094:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11105:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11090:3:5"},"nodeType":"YulFunctionCall","src":"11090:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11037:43:5"},"nodeType":"YulFunctionCall","src":"11037:73:5"},"nodeType":"YulExpressionStatement","src":"11037:73:5"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11164:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11177:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11188:3:5","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11173:3:5"},"nodeType":"YulFunctionCall","src":"11173:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11120:43:5"},"nodeType":"YulFunctionCall","src":"11120:73:5"},"nodeType":"YulExpressionStatement","src":"11120:73:5"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"11241:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11254:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11265:3:5","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11250:3:5"},"nodeType":"YulFunctionCall","src":"11250:19:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11203:37:5"},"nodeType":"YulFunctionCall","src":"11203:67:5"},"nodeType":"YulExpressionStatement","src":"11203:67:5"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"11318:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11331:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11342:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11327:3:5"},"nodeType":"YulFunctionCall","src":"11327:19:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11280:37:5"},"nodeType":"YulFunctionCall","src":"11280:67:5"},"nodeType":"YulExpressionStatement","src":"11280:67:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10488:9:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"10500:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10508:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10516:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10524:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10532:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10540:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10548:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10556:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10564:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10575:4:5","type":""}],"src":"10270:1084:5"},{"body":{"nodeType":"YulBlock","src":"11458:124:5","statements":[{"nodeType":"YulAssignment","src":"11468:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11480:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11491:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11476:3:5"},"nodeType":"YulFunctionCall","src":"11476:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11468:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11548:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11561:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11572:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:5"},"nodeType":"YulFunctionCall","src":"11557:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11504:43:5"},"nodeType":"YulFunctionCall","src":"11504:71:5"},"nodeType":"YulExpressionStatement","src":"11504:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11430:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11442:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11453:4:5","type":""}],"src":"11360:222:5"},{"body":{"nodeType":"YulBlock","src":"11671:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"11717:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11719:77:5"},"nodeType":"YulFunctionCall","src":"11719:79:5"},"nodeType":"YulExpressionStatement","src":"11719:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11692:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"11701:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11688:3:5"},"nodeType":"YulFunctionCall","src":"11688:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"11713:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11684:3:5"},"nodeType":"YulFunctionCall","src":"11684:32:5"},"nodeType":"YulIf","src":"11681:119:5"},{"nodeType":"YulBlock","src":"11810:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11825:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"11839:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11829:6:5","type":""}]},{"nodeType":"YulAssignment","src":"11854:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11889:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"11900:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11885:3:5"},"nodeType":"YulFunctionCall","src":"11885:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11909:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11864:20:5"},"nodeType":"YulFunctionCall","src":"11864:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11854:6:5"}]}]},{"nodeType":"YulBlock","src":"11937:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11952:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"11966:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11956:6:5","type":""}]},{"nodeType":"YulAssignment","src":"11982:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12017:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"12028:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12013:3:5"},"nodeType":"YulFunctionCall","src":"12013:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12037:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11992:20:5"},"nodeType":"YulFunctionCall","src":"11992:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11982:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11633:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11644:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11656:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11664:6:5","type":""}],"src":"11588:474:5"},{"body":{"nodeType":"YulBlock","src":"12210:276:5","statements":[{"nodeType":"YulAssignment","src":"12220:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12232:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12243:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12228:3:5"},"nodeType":"YulFunctionCall","src":"12228:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12220:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12300:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12313:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12324:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12309:3:5"},"nodeType":"YulFunctionCall","src":"12309:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12256:43:5"},"nodeType":"YulFunctionCall","src":"12256:71:5"},"nodeType":"YulExpressionStatement","src":"12256:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12375:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12388:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12399:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12384:3:5"},"nodeType":"YulFunctionCall","src":"12384:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12337:37:5"},"nodeType":"YulFunctionCall","src":"12337:66:5"},"nodeType":"YulExpressionStatement","src":"12337:66:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12451:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12464:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12475:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12460:3:5"},"nodeType":"YulFunctionCall","src":"12460:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12413:37:5"},"nodeType":"YulFunctionCall","src":"12413:66:5"},"nodeType":"YulExpressionStatement","src":"12413:66:5"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12166:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12178:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12186:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12194:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12205:4:5","type":""}],"src":"12068:418:5"},{"body":{"nodeType":"YulBlock","src":"12520:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12537:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12540:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12530:6:5"},"nodeType":"YulFunctionCall","src":"12530:88:5"},"nodeType":"YulExpressionStatement","src":"12530:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12634:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12637:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12627:6:5"},"nodeType":"YulFunctionCall","src":"12627:15:5"},"nodeType":"YulExpressionStatement","src":"12627:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12658:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12661:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12651:6:5"},"nodeType":"YulFunctionCall","src":"12651:15:5"},"nodeType":"YulExpressionStatement","src":"12651:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"12492:180:5"},{"body":{"nodeType":"YulBlock","src":"12731:62:5","statements":[{"body":{"nodeType":"YulBlock","src":"12765:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12767:16:5"},"nodeType":"YulFunctionCall","src":"12767:18:5"},"nodeType":"YulExpressionStatement","src":"12767:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12754:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"12761:1:5","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12751:2:5"},"nodeType":"YulFunctionCall","src":"12751:12:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12744:6:5"},"nodeType":"YulFunctionCall","src":"12744:20:5"},"nodeType":"YulIf","src":"12741:46:5"}]},"name":"validator_assert_t_enum$_Stages_$145","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12724:5:5","type":""}],"src":"12678:115:5"},{"body":{"nodeType":"YulBlock","src":"12854:76:5","statements":[{"nodeType":"YulAssignment","src":"12864:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"12875:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12864:7:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12918:5:5"}],"functionName":{"name":"validator_assert_t_enum$_Stages_$145","nodeType":"YulIdentifier","src":"12881:36:5"},"nodeType":"YulFunctionCall","src":"12881:43:5"},"nodeType":"YulExpressionStatement","src":"12881:43:5"}]},"name":"cleanup_t_enum$_Stages_$145","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12836:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12846:7:5","type":""}],"src":"12799:131:5"},{"body":{"nodeType":"YulBlock","src":"13004:63:5","statements":[{"nodeType":"YulAssignment","src":"13014:47:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13055:5:5"}],"functionName":{"name":"cleanup_t_enum$_Stages_$145","nodeType":"YulIdentifier","src":"13027:27:5"},"nodeType":"YulFunctionCall","src":"13027:34:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13014:9:5"}]}]},"name":"convert_t_enum$_Stages_$145_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12984:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12994:9:5","type":""}],"src":"12936:131:5"},{"body":{"nodeType":"YulBlock","src":"13146:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13163:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13207:5:5"}],"functionName":{"name":"convert_t_enum$_Stages_$145_to_t_uint8","nodeType":"YulIdentifier","src":"13168:38:5"},"nodeType":"YulFunctionCall","src":"13168:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13156:6:5"},"nodeType":"YulFunctionCall","src":"13156:58:5"},"nodeType":"YulExpressionStatement","src":"13156:58:5"}]},"name":"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13134:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13141:3:5","type":""}],"src":"13073:147:5"},{"body":{"nodeType":"YulBlock","src":"13332:132:5","statements":[{"nodeType":"YulAssignment","src":"13342:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13354:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"13365:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13350:3:5"},"nodeType":"YulFunctionCall","src":"13350:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13342:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13430:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13443:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"13454:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13439:3:5"},"nodeType":"YulFunctionCall","src":"13439:17:5"}],"functionName":{"name":"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"13378:51:5"},"nodeType":"YulFunctionCall","src":"13378:79:5"},"nodeType":"YulExpressionStatement","src":"13378:79:5"}]},"name":"abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13304:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13316:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13327:4:5","type":""}],"src":"13226:238:5"},{"body":{"nodeType":"YulBlock","src":"13529:40:5","statements":[{"nodeType":"YulAssignment","src":"13540:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13556:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13550:5:5"},"nodeType":"YulFunctionCall","src":"13550:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13540:6:5"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13512:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13522:6:5","type":""}],"src":"13470:99:5"},{"body":{"nodeType":"YulBlock","src":"13671:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13688:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13693:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13681:6:5"},"nodeType":"YulFunctionCall","src":"13681:19:5"},"nodeType":"YulExpressionStatement","src":"13681:19:5"},{"nodeType":"YulAssignment","src":"13709:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13728:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"13733:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13724:3:5"},"nodeType":"YulFunctionCall","src":"13724:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13709:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13643:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"13648:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13659:11:5","type":""}],"src":"13575:169:5"},{"body":{"nodeType":"YulBlock","src":"13812:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13822:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"13831:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13826:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"13891:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13916:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"13921:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13912:3:5"},"nodeType":"YulFunctionCall","src":"13912:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13935:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"13940:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13931:3:5"},"nodeType":"YulFunctionCall","src":"13931:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13925:5:5"},"nodeType":"YulFunctionCall","src":"13925:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13905:6:5"},"nodeType":"YulFunctionCall","src":"13905:39:5"},"nodeType":"YulExpressionStatement","src":"13905:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13852:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"13855:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13849:2:5"},"nodeType":"YulFunctionCall","src":"13849:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13863:19:5","statements":[{"nodeType":"YulAssignment","src":"13865:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13874:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"13877:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13870:3:5"},"nodeType":"YulFunctionCall","src":"13870:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13865:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"13845:3:5","statements":[]},"src":"13841:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13974:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13979:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13970:3:5"},"nodeType":"YulFunctionCall","src":"13970:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"13988:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13963:6:5"},"nodeType":"YulFunctionCall","src":"13963:27:5"},"nodeType":"YulExpressionStatement","src":"13963:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13794:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13799:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"13804:6:5","type":""}],"src":"13750:246:5"},{"body":{"nodeType":"YulBlock","src":"14094:285:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14104:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14151:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14118:32:5"},"nodeType":"YulFunctionCall","src":"14118:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14108:6:5","type":""}]},{"nodeType":"YulAssignment","src":"14166:78:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14232:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"14237:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14173:58:5"},"nodeType":"YulFunctionCall","src":"14173:71:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14166:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14292:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"14299:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14288:3:5"},"nodeType":"YulFunctionCall","src":"14288:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"14306:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"14311:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14253:34:5"},"nodeType":"YulFunctionCall","src":"14253:65:5"},"nodeType":"YulExpressionStatement","src":"14253:65:5"},{"nodeType":"YulAssignment","src":"14327:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14338:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14365:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14343:21:5"},"nodeType":"YulFunctionCall","src":"14343:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14334:3:5"},"nodeType":"YulFunctionCall","src":"14334:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14327:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14075:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14082:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14090:3:5","type":""}],"src":"14002:377:5"},{"body":{"nodeType":"YulBlock","src":"14503:195:5","statements":[{"nodeType":"YulAssignment","src":"14513:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14525:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"14536:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14521:3:5"},"nodeType":"YulFunctionCall","src":"14521:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14513:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14560:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"14571:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14556:3:5"},"nodeType":"YulFunctionCall","src":"14556:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14579:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"14585:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14575:3:5"},"nodeType":"YulFunctionCall","src":"14575:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14549:6:5"},"nodeType":"YulFunctionCall","src":"14549:47:5"},"nodeType":"YulExpressionStatement","src":"14549:47:5"},{"nodeType":"YulAssignment","src":"14605:86:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14677:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"14686:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14613:63:5"},"nodeType":"YulFunctionCall","src":"14613:78:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14605:4:5"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14475:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14487:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14498:4:5","type":""}],"src":"14385:313:5"},{"body":{"nodeType":"YulBlock","src":"14770:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"14816:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14818:77:5"},"nodeType":"YulFunctionCall","src":"14818:79:5"},"nodeType":"YulExpressionStatement","src":"14818:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14791:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"14800:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14787:3:5"},"nodeType":"YulFunctionCall","src":"14787:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"14812:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14783:3:5"},"nodeType":"YulFunctionCall","src":"14783:32:5"},"nodeType":"YulIf","src":"14780:119:5"},{"nodeType":"YulBlock","src":"14909:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14924:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14938:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14928:6:5","type":""}]},{"nodeType":"YulAssignment","src":"14953:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14988:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"14999:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14984:3:5"},"nodeType":"YulFunctionCall","src":"14984:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15008:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14963:20:5"},"nodeType":"YulFunctionCall","src":"14963:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14953:6:5"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14740:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14751:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14763:6:5","type":""}],"src":"14704:329:5"},{"body":{"nodeType":"YulBlock","src":"15145:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15167:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"15175:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15163:3:5"},"nodeType":"YulFunctionCall","src":"15163:14:5"},{"hexValue":"477265617465724f72457175616c5468616e4e","kind":"string","nodeType":"YulLiteral","src":"15179:21:5","type":"","value":"GreaterOrEqualThanN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15156:6:5"},"nodeType":"YulFunctionCall","src":"15156:45:5"},"nodeType":"YulExpressionStatement","src":"15156:45:5"}]},"name":"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15137:6:5","type":""}],"src":"15039:169:5"},{"body":{"nodeType":"YulBlock","src":"15360:220:5","statements":[{"nodeType":"YulAssignment","src":"15370:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15436:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"15441:2:5","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15377:58:5"},"nodeType":"YulFunctionCall","src":"15377:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15370:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15542:3:5"}],"functionName":{"name":"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","nodeType":"YulIdentifier","src":"15453:88:5"},"nodeType":"YulFunctionCall","src":"15453:93:5"},"nodeType":"YulExpressionStatement","src":"15453:93:5"},{"nodeType":"YulAssignment","src":"15555:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15566:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"15571:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15562:3:5"},"nodeType":"YulFunctionCall","src":"15562:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15555:3:5"}]}]},"name":"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15348:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15356:3:5","type":""}],"src":"15214:366:5"},{"body":{"nodeType":"YulBlock","src":"15757:248:5","statements":[{"nodeType":"YulAssignment","src":"15767:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15779:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15790:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:5"},"nodeType":"YulFunctionCall","src":"15775:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15814:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15825:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15810:3:5"},"nodeType":"YulFunctionCall","src":"15810:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15833:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"15839:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15829:3:5"},"nodeType":"YulFunctionCall","src":"15829:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15803:6:5"},"nodeType":"YulFunctionCall","src":"15803:47:5"},"nodeType":"YulExpressionStatement","src":"15803:47:5"},{"nodeType":"YulAssignment","src":"15859:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15867:124:5"},"nodeType":"YulFunctionCall","src":"15867:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15859:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15737:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15752:4:5","type":""}],"src":"15586:419:5"},{"body":{"nodeType":"YulBlock","src":"16117:60:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16139:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16147:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16135:3:5"},"nodeType":"YulFunctionCall","src":"16135:14:5"},{"hexValue":"416c7265616479436f6d6d6974746564","kind":"string","nodeType":"YulLiteral","src":"16151:18:5","type":"","value":"AlreadyCommitted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16128:6:5"},"nodeType":"YulFunctionCall","src":"16128:42:5"},"nodeType":"YulExpressionStatement","src":"16128:42:5"}]},"name":"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16109:6:5","type":""}],"src":"16011:166:5"},{"body":{"nodeType":"YulBlock","src":"16329:220:5","statements":[{"nodeType":"YulAssignment","src":"16339:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16405:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"16410:2:5","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16346:58:5"},"nodeType":"YulFunctionCall","src":"16346:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16339:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16511:3:5"}],"functionName":{"name":"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","nodeType":"YulIdentifier","src":"16422:88:5"},"nodeType":"YulFunctionCall","src":"16422:93:5"},"nodeType":"YulExpressionStatement","src":"16422:93:5"},{"nodeType":"YulAssignment","src":"16524:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16535:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"16540:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16531:3:5"},"nodeType":"YulFunctionCall","src":"16531:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16524:3:5"}]}]},"name":"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16317:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16325:3:5","type":""}],"src":"16183:366:5"},{"body":{"nodeType":"YulBlock","src":"16726:248:5","statements":[{"nodeType":"YulAssignment","src":"16736:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16748:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16759:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16744:3:5"},"nodeType":"YulFunctionCall","src":"16744:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16736:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16783:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16794:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16779:3:5"},"nodeType":"YulFunctionCall","src":"16779:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16802:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"16808:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16798:3:5"},"nodeType":"YulFunctionCall","src":"16798:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16772:6:5"},"nodeType":"YulFunctionCall","src":"16772:47:5"},"nodeType":"YulExpressionStatement","src":"16772:47:5"},{"nodeType":"YulAssignment","src":"16828:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16836:124:5"},"nodeType":"YulFunctionCall","src":"16836:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16828:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16706:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16721:4:5","type":""}],"src":"16555:419:5"},{"body":{"nodeType":"YulBlock","src":"17008:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17025:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17028:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17018:6:5"},"nodeType":"YulFunctionCall","src":"17018:88:5"},"nodeType":"YulExpressionStatement","src":"17018:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17122:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17125:4:5","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17115:6:5"},"nodeType":"YulFunctionCall","src":"17115:15:5"},"nodeType":"YulExpressionStatement","src":"17115:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17146:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17149:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17139:6:5"},"nodeType":"YulFunctionCall","src":"17139:15:5"},"nodeType":"YulExpressionStatement","src":"17139:15:5"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16980:180:5"},{"body":{"nodeType":"YulBlock","src":"17217:269:5","statements":[{"nodeType":"YulAssignment","src":"17227:22:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17241:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"17247:1:5","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17237:3:5"},"nodeType":"YulFunctionCall","src":"17237:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17227:6:5"}]},{"nodeType":"YulVariableDeclaration","src":"17258:38:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17288:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"17294:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17284:3:5"},"nodeType":"YulFunctionCall","src":"17284:12:5"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"17262:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"17335:51:5","statements":[{"nodeType":"YulAssignment","src":"17349:27:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17363:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17371:4:5","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17359:3:5"},"nodeType":"YulFunctionCall","src":"17359:17:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17349:6:5"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17315:18:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17308:6:5"},"nodeType":"YulFunctionCall","src":"17308:26:5"},"nodeType":"YulIf","src":"17305:81:5"},{"body":{"nodeType":"YulBlock","src":"17438:42:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"17452:16:5"},"nodeType":"YulFunctionCall","src":"17452:18:5"},"nodeType":"YulExpressionStatement","src":"17452:18:5"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"17402:18:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17425:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"17433:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17422:2:5"},"nodeType":"YulFunctionCall","src":"17422:14:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17399:2:5"},"nodeType":"YulFunctionCall","src":"17399:38:5"},"nodeType":"YulIf","src":"17396:84:5"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"17201:4:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17210:6:5","type":""}],"src":"17166:320:5"},{"body":{"nodeType":"YulBlock","src":"17606:34:5","statements":[{"nodeType":"YulAssignment","src":"17616:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"17631:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17616:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:5","type":""}],"src":"17492:148:5"},{"body":{"nodeType":"YulBlock","src":"17756:280:5","statements":[{"nodeType":"YulVariableDeclaration","src":"17766:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17813:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17780:32:5"},"nodeType":"YulFunctionCall","src":"17780:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17770:6:5","type":""}]},{"nodeType":"YulAssignment","src":"17828:96:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17912:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17917:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17835:76:5"},"nodeType":"YulFunctionCall","src":"17835:89:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17828:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17972:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"17979:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17968:3:5"},"nodeType":"YulFunctionCall","src":"17968:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"17986:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17991:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17933:34:5"},"nodeType":"YulFunctionCall","src":"17933:65:5"},"nodeType":"YulExpressionStatement","src":"17933:65:5"},{"nodeType":"YulAssignment","src":"18007:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18018:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"18023:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18014:3:5"},"nodeType":"YulFunctionCall","src":"18014:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18007:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17737:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17744:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17752:3:5","type":""}],"src":"17646:390:5"},{"body":{"nodeType":"YulBlock","src":"18226:251:5","statements":[{"nodeType":"YulAssignment","src":"18237:102:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18326:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"18335:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18244:81:5"},"nodeType":"YulFunctionCall","src":"18244:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18237:3:5"}]},{"nodeType":"YulAssignment","src":"18349:102:5","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18438:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"18447:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18356:81:5"},"nodeType":"YulFunctionCall","src":"18356:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18349:3:5"}]},{"nodeType":"YulAssignment","src":"18461:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"18468:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18461:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18197:3:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18203:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18211:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18222:3:5","type":""}],"src":"18042:435:5"},{"body":{"nodeType":"YulBlock","src":"18537:87:5","statements":[{"nodeType":"YulAssignment","src":"18547:11:5","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18555:3:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18547:4:5"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18575:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"18578:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18568:6:5"},"nodeType":"YulFunctionCall","src":"18568:14:5"},"nodeType":"YulExpressionStatement","src":"18568:14:5"},{"nodeType":"YulAssignment","src":"18591:26:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18609:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18612:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18599:9:5"},"nodeType":"YulFunctionCall","src":"18599:18:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18591:4:5"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18524:3:5","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18532:4:5","type":""}],"src":"18483:141:5"},{"body":{"nodeType":"YulBlock","src":"18674:49:5","statements":[{"nodeType":"YulAssignment","src":"18684:33:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18702:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"18709:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18698:3:5"},"nodeType":"YulFunctionCall","src":"18698:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"18714:2:5","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18694:3:5"},"nodeType":"YulFunctionCall","src":"18694:23:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18684:6:5"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18657:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18667:6:5","type":""}],"src":"18630:93:5"},{"body":{"nodeType":"YulBlock","src":"18782:54:5","statements":[{"nodeType":"YulAssignment","src":"18792:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18817:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"18823:5:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18813:3:5"},"nodeType":"YulFunctionCall","src":"18813:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18792:8:5"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18757:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"18763:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18773:8:5","type":""}],"src":"18729:107:5"},{"body":{"nodeType":"YulBlock","src":"18918:317:5","statements":[{"nodeType":"YulVariableDeclaration","src":"18928:35:5","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"18949:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"18961:1:5","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18945:3:5"},"nodeType":"YulFunctionCall","src":"18945:18:5"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"18932:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18972:109:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"19003:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"19014:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"18984:18:5"},"nodeType":"YulFunctionCall","src":"18984:97:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18976:4:5","type":""}]},{"nodeType":"YulAssignment","src":"19090:51:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"19121:9:5"},{"name":"toInsert","nodeType":"YulIdentifier","src":"19132:8:5"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"19102:18:5"},"nodeType":"YulFunctionCall","src":"19102:39:5"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"19090:8:5"}]},{"nodeType":"YulAssignment","src":"19150:30:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19163:5:5"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"19174:4:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19170:3:5"},"nodeType":"YulFunctionCall","src":"19170:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19159:3:5"},"nodeType":"YulFunctionCall","src":"19159:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19150:5:5"}]},{"nodeType":"YulAssignment","src":"19189:40:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19202:5:5"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"19213:8:5"},{"name":"mask","nodeType":"YulIdentifier","src":"19223:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19209:3:5"},"nodeType":"YulFunctionCall","src":"19209:19:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19199:2:5"},"nodeType":"YulFunctionCall","src":"19199:30:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19189:6:5"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18879:5:5","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"18886:10:5","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"18898:8:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18911:6:5","type":""}],"src":"18842:393:5"},{"body":{"nodeType":"YulBlock","src":"19273:28:5","statements":[{"nodeType":"YulAssignment","src":"19283:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"19290:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19283:3:5"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19259:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19269:3:5","type":""}],"src":"19241:60:5"},{"body":{"nodeType":"YulBlock","src":"19367:82:5","statements":[{"nodeType":"YulAssignment","src":"19377:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19435:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19417:17:5"},"nodeType":"YulFunctionCall","src":"19417:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19408:8:5"},"nodeType":"YulFunctionCall","src":"19408:34:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19390:17:5"},"nodeType":"YulFunctionCall","src":"19390:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19377:9:5"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19347:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19357:9:5","type":""}],"src":"19307:142:5"},{"body":{"nodeType":"YulBlock","src":"19502:28:5","statements":[{"nodeType":"YulAssignment","src":"19512:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"19519:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19512:3:5"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19488:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19498:3:5","type":""}],"src":"19455:75:5"},{"body":{"nodeType":"YulBlock","src":"19612:193:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19622:63:5","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"19677:7:5"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19646:30:5"},"nodeType":"YulFunctionCall","src":"19646:39:5"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"19626:16:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19701:4:5"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19741:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19735:5:5"},"nodeType":"YulFunctionCall","src":"19735:11:5"},{"name":"offset","nodeType":"YulIdentifier","src":"19748:6:5"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19780:16:5"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"19756:23:5"},"nodeType":"YulFunctionCall","src":"19756:41:5"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"19707:27:5"},"nodeType":"YulFunctionCall","src":"19707:91:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19694:6:5"},"nodeType":"YulFunctionCall","src":"19694:105:5"},"nodeType":"YulExpressionStatement","src":"19694:105:5"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19589:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19595:6:5","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"19603:7:5","type":""}],"src":"19536:269:5"},{"body":{"nodeType":"YulBlock","src":"19860:24:5","statements":[{"nodeType":"YulAssignment","src":"19870:8:5","value":{"kind":"number","nodeType":"YulLiteral","src":"19877:1:5","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19870:3:5"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19856:3:5","type":""}],"src":"19811:73:5"},{"body":{"nodeType":"YulBlock","src":"19943:136:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19953:46:5","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"19967:30:5"},"nodeType":"YulFunctionCall","src":"19967:32:5"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"19957:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20052:4:5"},{"name":"offset","nodeType":"YulIdentifier","src":"20058:6:5"},{"name":"zero_0","nodeType":"YulIdentifier","src":"20066:6:5"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20008:43:5"},"nodeType":"YulFunctionCall","src":"20008:65:5"},"nodeType":"YulExpressionStatement","src":"20008:65:5"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19929:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19935:6:5","type":""}],"src":"19890:189:5"},{"body":{"nodeType":"YulBlock","src":"20135:136:5","statements":[{"body":{"nodeType":"YulBlock","src":"20202:63:5","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20246:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"20253:1:5","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"20216:29:5"},"nodeType":"YulFunctionCall","src":"20216:39:5"},"nodeType":"YulExpressionStatement","src":"20216:39:5"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20155:5:5"},{"name":"end","nodeType":"YulIdentifier","src":"20162:3:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20152:2:5"},"nodeType":"YulFunctionCall","src":"20152:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20167:26:5","statements":[{"nodeType":"YulAssignment","src":"20169:22:5","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20182:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"20189:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20178:3:5"},"nodeType":"YulFunctionCall","src":"20178:13:5"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"20169:5:5"}]}]},"pre":{"nodeType":"YulBlock","src":"20149:2:5","statements":[]},"src":"20145:120:5"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"20123:5:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"20130:3:5","type":""}],"src":"20085:186:5"},{"body":{"nodeType":"YulBlock","src":"20356:464:5","statements":[{"body":{"nodeType":"YulBlock","src":"20382:431:5","statements":[{"nodeType":"YulVariableDeclaration","src":"20396:54:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20444:5:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20412:31:5"},"nodeType":"YulFunctionCall","src":"20412:38:5"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"20400:8:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20463:63:5","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20486:8:5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20514:10:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20496:17:5"},"nodeType":"YulFunctionCall","src":"20496:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20482:3:5"},"nodeType":"YulFunctionCall","src":"20482:44:5"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"20467:11:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"20683:27:5","statements":[{"nodeType":"YulAssignment","src":"20685:23:5","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"20700:8:5"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20685:11:5"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20667:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"20679:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20664:2:5"},"nodeType":"YulFunctionCall","src":"20664:18:5"},"nodeType":"YulIf","src":"20661:49:5"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20752:11:5"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20769:8:5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20797:3:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20779:17:5"},"nodeType":"YulFunctionCall","src":"20779:22:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20765:3:5"},"nodeType":"YulFunctionCall","src":"20765:37:5"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"20723:28:5"},"nodeType":"YulFunctionCall","src":"20723:80:5"},"nodeType":"YulExpressionStatement","src":"20723:80:5"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20373:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"20378:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20370:2:5"},"nodeType":"YulFunctionCall","src":"20370:11:5"},"nodeType":"YulIf","src":"20367:446:5"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"20332:5:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"20339:3:5","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"20344:10:5","type":""}],"src":"20277:543:5"},{"body":{"nodeType":"YulBlock","src":"20889:54:5","statements":[{"nodeType":"YulAssignment","src":"20899:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"20924:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"20930:5:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20920:3:5"},"nodeType":"YulFunctionCall","src":"20920:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"20899:8:5"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"20864:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"20870:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"20880:8:5","type":""}],"src":"20826:117:5"},{"body":{"nodeType":"YulBlock","src":"21000:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"21010:68:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21059:1:5","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"21062:5:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21055:3:5"},"nodeType":"YulFunctionCall","src":"21055:13:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21074:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21070:3:5"},"nodeType":"YulFunctionCall","src":"21070:6:5"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"21026:28:5"},"nodeType":"YulFunctionCall","src":"21026:51:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21022:3:5"},"nodeType":"YulFunctionCall","src":"21022:56:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"21014:4:5","type":""}]},{"nodeType":"YulAssignment","src":"21087:25:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21101:4:5"},{"name":"mask","nodeType":"YulIdentifier","src":"21107:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21097:3:5"},"nodeType":"YulFunctionCall","src":"21097:15:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21087:6:5"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20977:4:5","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"20983:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20993:6:5","type":""}],"src":"20949:169:5"},{"body":{"nodeType":"YulBlock","src":"21204:214:5","statements":[{"nodeType":"YulAssignment","src":"21337:37:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21364:4:5"},{"name":"len","nodeType":"YulIdentifier","src":"21370:3:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21345:18:5"},"nodeType":"YulFunctionCall","src":"21345:29:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21337:4:5"}]},{"nodeType":"YulAssignment","src":"21383:29:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21394:4:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21404:1:5","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"21407:3:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21400:3:5"},"nodeType":"YulFunctionCall","src":"21400:11:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21391:2:5"},"nodeType":"YulFunctionCall","src":"21391:21:5"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"21383:4:5"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21185:4:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"21191:3:5","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"21199:4:5","type":""}],"src":"21123:295:5"},{"body":{"nodeType":"YulBlock","src":"21515:1303:5","statements":[{"nodeType":"YulVariableDeclaration","src":"21526:51:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21573:3:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21540:32:5"},"nodeType":"YulFunctionCall","src":"21540:37:5"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"21530:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"21662:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21664:16:5"},"nodeType":"YulFunctionCall","src":"21664:18:5"},"nodeType":"YulExpressionStatement","src":"21664:18:5"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21634:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"21642:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21631:2:5"},"nodeType":"YulFunctionCall","src":"21631:30:5"},"nodeType":"YulIf","src":"21628:56:5"},{"nodeType":"YulVariableDeclaration","src":"21694:52:5","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21740:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21734:5:5"},"nodeType":"YulFunctionCall","src":"21734:11:5"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21708:25:5"},"nodeType":"YulFunctionCall","src":"21708:38:5"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"21698:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21839:4:5"},{"name":"oldLen","nodeType":"YulIdentifier","src":"21845:6:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"21853:6:5"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"21793:45:5"},"nodeType":"YulFunctionCall","src":"21793:67:5"},"nodeType":"YulExpressionStatement","src":"21793:67:5"},{"nodeType":"YulVariableDeclaration","src":"21870:18:5","value":{"kind":"number","nodeType":"YulLiteral","src":"21887:1:5","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21874:9:5","type":""}]},{"nodeType":"YulAssignment","src":"21898:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"21911:4:5","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21898:9:5"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21962:611:5","statements":[{"nodeType":"YulVariableDeclaration","src":"21976:37:5","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21995:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22007:4:5","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22003:3:5"},"nodeType":"YulFunctionCall","src":"22003:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21991:3:5"},"nodeType":"YulFunctionCall","src":"21991:22:5"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21980:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22027:51:5","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22073:4:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"22041:31:5"},"nodeType":"YulFunctionCall","src":"22041:37:5"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22031:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22091:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"22100:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22095:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"22159:163:5","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22184:6:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22202:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22207:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22198:3:5"},"nodeType":"YulFunctionCall","src":"22198:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22192:5:5"},"nodeType":"YulFunctionCall","src":"22192:26:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22177:6:5"},"nodeType":"YulFunctionCall","src":"22177:42:5"},"nodeType":"YulExpressionStatement","src":"22177:42:5"},{"nodeType":"YulAssignment","src":"22236:24:5","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22250:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"22258:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22246:3:5"},"nodeType":"YulFunctionCall","src":"22246:14:5"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22236:6:5"}]},{"nodeType":"YulAssignment","src":"22277:31:5","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22294:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22305:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22290:3:5"},"nodeType":"YulFunctionCall","src":"22290:18:5"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22277:9:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22125:1:5"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22128:7:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22122:2:5"},"nodeType":"YulFunctionCall","src":"22122:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22137:21:5","statements":[{"nodeType":"YulAssignment","src":"22139:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22148:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"22151:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22144:3:5"},"nodeType":"YulFunctionCall","src":"22144:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22139:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"22118:3:5","statements":[]},"src":"22114:208:5"},{"body":{"nodeType":"YulBlock","src":"22358:156:5","statements":[{"nodeType":"YulVariableDeclaration","src":"22376:43:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22403:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22408:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22399:3:5"},"nodeType":"YulFunctionCall","src":"22399:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22393:5:5"},"nodeType":"YulFunctionCall","src":"22393:26:5"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"22380:9:5","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22443:6:5"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"22470:9:5"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22485:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"22493:4:5","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22481:3:5"},"nodeType":"YulFunctionCall","src":"22481:17:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"22451:18:5"},"nodeType":"YulFunctionCall","src":"22451:48:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22436:6:5"},"nodeType":"YulFunctionCall","src":"22436:64:5"},"nodeType":"YulExpressionStatement","src":"22436:64:5"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"22341:7:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"22350:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22338:2:5"},"nodeType":"YulFunctionCall","src":"22338:19:5"},"nodeType":"YulIf","src":"22335:179:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22534:4:5"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22548:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"22556:1:5","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22544:3:5"},"nodeType":"YulFunctionCall","src":"22544:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"22560:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22540:3:5"},"nodeType":"YulFunctionCall","src":"22540:22:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22527:6:5"},"nodeType":"YulFunctionCall","src":"22527:36:5"},"nodeType":"YulExpressionStatement","src":"22527:36:5"}]},"nodeType":"YulCase","src":"21955:618:5","value":{"kind":"number","nodeType":"YulLiteral","src":"21960:1:5","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22590:222:5","statements":[{"nodeType":"YulVariableDeclaration","src":"22604:14:5","value":{"kind":"number","nodeType":"YulLiteral","src":"22617:1:5","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22608:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"22641:67:5","statements":[{"nodeType":"YulAssignment","src":"22659:35:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22678:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22683:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22674:3:5"},"nodeType":"YulFunctionCall","src":"22674:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22668:5:5"},"nodeType":"YulFunctionCall","src":"22668:26:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22659:5:5"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22634:6:5"},"nodeType":"YulIf","src":"22631:77:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22728:4:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22787:5:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"22794:6:5"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22734:52:5"},"nodeType":"YulFunctionCall","src":"22734:67:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22721:6:5"},"nodeType":"YulFunctionCall","src":"22721:81:5"},"nodeType":"YulExpressionStatement","src":"22721:81:5"}]},"nodeType":"YulCase","src":"22582:230:5","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21935:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"21943:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21932:2:5"},"nodeType":"YulFunctionCall","src":"21932:14:5"},"nodeType":"YulSwitch","src":"21925:887:5"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"21504:4:5","type":""},{"name":"src","nodeType":"YulTypedName","src":"21510:3:5","type":""}],"src":"21423:1395:5"},{"body":{"nodeType":"YulBlock","src":"22852:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22869:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22872:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22862:6:5"},"nodeType":"YulFunctionCall","src":"22862:88:5"},"nodeType":"YulExpressionStatement","src":"22862:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22966:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22969:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22959:6:5"},"nodeType":"YulFunctionCall","src":"22959:15:5"},"nodeType":"YulExpressionStatement","src":"22959:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22990:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22993:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22983:6:5"},"nodeType":"YulFunctionCall","src":"22983:15:5"},"nodeType":"YulExpressionStatement","src":"22983:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22824:180:5"},{"body":{"nodeType":"YulBlock","src":"23053:190:5","statements":[{"nodeType":"YulAssignment","src":"23063:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23090:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23072:17:5"},"nodeType":"YulFunctionCall","src":"23072:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23063:5:5"}]},{"body":{"nodeType":"YulBlock","src":"23186:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23188:16:5"},"nodeType":"YulFunctionCall","src":"23188:18:5"},"nodeType":"YulExpressionStatement","src":"23188:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23111:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"23118:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23108:2:5"},"nodeType":"YulFunctionCall","src":"23108:77:5"},"nodeType":"YulIf","src":"23105:103:5"},{"nodeType":"YulAssignment","src":"23217:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23228:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"23235:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23224:3:5"},"nodeType":"YulFunctionCall","src":"23224:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23217:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23039:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23049:3:5","type":""}],"src":"23010:233:5"},{"body":{"nodeType":"YulBlock","src":"23479:525:5","statements":[{"nodeType":"YulAssignment","src":"23489:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23501:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23512:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23497:3:5"},"nodeType":"YulFunctionCall","src":"23497:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23489:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23570:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23583:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23594:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23579:3:5"},"nodeType":"YulFunctionCall","src":"23579:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23526:43:5"},"nodeType":"YulFunctionCall","src":"23526:71:5"},"nodeType":"YulExpressionStatement","src":"23526:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23651:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23664:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23675:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23660:3:5"},"nodeType":"YulFunctionCall","src":"23660:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23607:43:5"},"nodeType":"YulFunctionCall","src":"23607:72:5"},"nodeType":"YulExpressionStatement","src":"23607:72:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23700:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23711:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23696:3:5"},"nodeType":"YulFunctionCall","src":"23696:18:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23720:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"23726:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23716:3:5"},"nodeType":"YulFunctionCall","src":"23716:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23689:6:5"},"nodeType":"YulFunctionCall","src":"23689:48:5"},"nodeType":"YulExpressionStatement","src":"23689:48:5"},{"nodeType":"YulAssignment","src":"23746:86:5","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23818:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"23827:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23754:63:5"},"nodeType":"YulFunctionCall","src":"23754:78:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23746:4:5"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23886:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23899:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23910:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23895:3:5"},"nodeType":"YulFunctionCall","src":"23895:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23842:43:5"},"nodeType":"YulFunctionCall","src":"23842:72:5"},"nodeType":"YulExpressionStatement","src":"23842:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23968:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23981:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23992:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23977:3:5"},"nodeType":"YulFunctionCall","src":"23977:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23924:43:5"},"nodeType":"YulFunctionCall","src":"23924:73:5"},"nodeType":"YulExpressionStatement","src":"23924:73:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23419:9:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23431:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23439:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23447:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23455:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23463:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23474:4:5","type":""}],"src":"23249:755:5"},{"body":{"nodeType":"YulBlock","src":"24116:58:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24138:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"24146:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24134:3:5"},"nodeType":"YulFunctionCall","src":"24134:14:5"},{"hexValue":"4e6f74416c6c52657665616c6564","kind":"string","nodeType":"YulLiteral","src":"24150:16:5","type":"","value":"NotAllRevealed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24127:6:5"},"nodeType":"YulFunctionCall","src":"24127:40:5"},"nodeType":"YulExpressionStatement","src":"24127:40:5"}]},"name":"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24108:6:5","type":""}],"src":"24010:164:5"},{"body":{"nodeType":"YulBlock","src":"24326:220:5","statements":[{"nodeType":"YulAssignment","src":"24336:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24402:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"24407:2:5","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24343:58:5"},"nodeType":"YulFunctionCall","src":"24343:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24336:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24508:3:5"}],"functionName":{"name":"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","nodeType":"YulIdentifier","src":"24419:88:5"},"nodeType":"YulFunctionCall","src":"24419:93:5"},"nodeType":"YulExpressionStatement","src":"24419:93:5"},{"nodeType":"YulAssignment","src":"24521:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24532:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"24537:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24528:3:5"},"nodeType":"YulFunctionCall","src":"24528:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24521:3:5"}]}]},"name":"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24314:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24322:3:5","type":""}],"src":"24180:366:5"},{"body":{"nodeType":"YulBlock","src":"24723:248:5","statements":[{"nodeType":"YulAssignment","src":"24733:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24745:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"24756:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24741:3:5"},"nodeType":"YulFunctionCall","src":"24741:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24733:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24780:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"24791:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24776:3:5"},"nodeType":"YulFunctionCall","src":"24776:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24799:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"24805:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24795:3:5"},"nodeType":"YulFunctionCall","src":"24795:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24769:6:5"},"nodeType":"YulFunctionCall","src":"24769:47:5"},"nodeType":"YulExpressionStatement","src":"24769:47:5"},{"nodeType":"YulAssignment","src":"24825:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24959:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24833:124:5"},"nodeType":"YulFunctionCall","src":"24833:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24825:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24703:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24718:4:5","type":""}],"src":"24552:419:5"},{"body":{"nodeType":"YulBlock","src":"25083:65:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25105:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"25113:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25101:3:5"},"nodeType":"YulFunctionCall","src":"25101:14:5"},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"25117:23:5","type":"","value":"OmegaAlreadyCompleted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25094:6:5"},"nodeType":"YulFunctionCall","src":"25094:47:5"},"nodeType":"YulExpressionStatement","src":"25094:47:5"}]},"name":"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25075:6:5","type":""}],"src":"24977:171:5"},{"body":{"nodeType":"YulBlock","src":"25300:220:5","statements":[{"nodeType":"YulAssignment","src":"25310:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25376:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"25381:2:5","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25317:58:5"},"nodeType":"YulFunctionCall","src":"25317:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25310:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25482:3:5"}],"functionName":{"name":"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","nodeType":"YulIdentifier","src":"25393:88:5"},"nodeType":"YulFunctionCall","src":"25393:93:5"},"nodeType":"YulExpressionStatement","src":"25393:93:5"},{"nodeType":"YulAssignment","src":"25495:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25506:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"25511:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25502:3:5"},"nodeType":"YulFunctionCall","src":"25502:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25495:3:5"}]}]},"name":"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25288:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25296:3:5","type":""}],"src":"25154:366:5"},{"body":{"nodeType":"YulBlock","src":"25697:248:5","statements":[{"nodeType":"YulAssignment","src":"25707:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25719:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"25730:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25715:3:5"},"nodeType":"YulFunctionCall","src":"25715:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25707:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25754:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"25765:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25750:3:5"},"nodeType":"YulFunctionCall","src":"25750:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25773:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"25779:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25769:3:5"},"nodeType":"YulFunctionCall","src":"25769:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25743:6:5"},"nodeType":"YulFunctionCall","src":"25743:47:5"},"nodeType":"YulExpressionStatement","src":"25743:47:5"},{"nodeType":"YulAssignment","src":"25799:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25933:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25807:124:5"},"nodeType":"YulFunctionCall","src":"25807:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25799:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25677:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25692:4:5","type":""}],"src":"25526:419:5"},{"body":{"nodeType":"YulBlock","src":"25979:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25996:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25999:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25989:6:5"},"nodeType":"YulFunctionCall","src":"25989:88:5"},"nodeType":"YulExpressionStatement","src":"25989:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26093:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26096:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26086:6:5"},"nodeType":"YulFunctionCall","src":"26086:15:5"},"nodeType":"YulExpressionStatement","src":"26086:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26117:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26120:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26110:6:5"},"nodeType":"YulFunctionCall","src":"26110:15:5"},"nodeType":"YulExpressionStatement","src":"26110:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"25951:180:5"},{"body":{"nodeType":"YulBlock","src":"26171:142:5","statements":[{"nodeType":"YulAssignment","src":"26181:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26204:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26186:17:5"},"nodeType":"YulFunctionCall","src":"26186:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26181:1:5"}]},{"nodeType":"YulAssignment","src":"26215:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26238:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26220:17:5"},"nodeType":"YulFunctionCall","src":"26220:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26215:1:5"}]},{"body":{"nodeType":"YulBlock","src":"26262:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26264:16:5"},"nodeType":"YulFunctionCall","src":"26264:18:5"},"nodeType":"YulExpressionStatement","src":"26264:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26259:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26252:6:5"},"nodeType":"YulFunctionCall","src":"26252:9:5"},"nodeType":"YulIf","src":"26249:35:5"},{"nodeType":"YulAssignment","src":"26293:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26302:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"26305:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"26298:3:5"},"nodeType":"YulFunctionCall","src":"26298:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26293:1:5"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26160:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"26163:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26169:1:5","type":""}],"src":"26137:176:5"},{"body":{"nodeType":"YulBlock","src":"26495:365:5","statements":[{"nodeType":"YulAssignment","src":"26505:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26517:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26528:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26513:3:5"},"nodeType":"YulFunctionCall","src":"26513:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26505:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26586:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26599:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26610:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26595:3:5"},"nodeType":"YulFunctionCall","src":"26595:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26542:43:5"},"nodeType":"YulFunctionCall","src":"26542:71:5"},"nodeType":"YulExpressionStatement","src":"26542:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26667:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26680:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26691:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26676:3:5"},"nodeType":"YulFunctionCall","src":"26676:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26623:43:5"},"nodeType":"YulFunctionCall","src":"26623:72:5"},"nodeType":"YulExpressionStatement","src":"26623:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26749:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26762:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26773:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26758:3:5"},"nodeType":"YulFunctionCall","src":"26758:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26705:43:5"},"nodeType":"YulFunctionCall","src":"26705:72:5"},"nodeType":"YulExpressionStatement","src":"26705:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26825:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26838:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26849:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26834:3:5"},"nodeType":"YulFunctionCall","src":"26834:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"26787:37:5"},"nodeType":"YulFunctionCall","src":"26787:66:5"},"nodeType":"YulExpressionStatement","src":"26787:66:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26443:9:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26455:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26463:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26471:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26479:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26490:4:5","type":""}],"src":"26319:541:5"},{"body":{"nodeType":"YulBlock","src":"26894:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26911:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26914:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26904:6:5"},"nodeType":"YulFunctionCall","src":"26904:88:5"},"nodeType":"YulExpressionStatement","src":"26904:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27008:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27011:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27001:6:5"},"nodeType":"YulFunctionCall","src":"27001:15:5"},"nodeType":"YulExpressionStatement","src":"27001:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27032:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27035:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27025:6:5"},"nodeType":"YulFunctionCall","src":"27025:15:5"},"nodeType":"YulExpressionStatement","src":"27025:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26866:180:5"},{"body":{"nodeType":"YulBlock","src":"27158:123:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27180:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"27188:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27176:3:5"},"nodeType":"YulFunctionCall","src":"27176:14:5"},{"hexValue":"436f6d6d697452657665616c4475726174696f6e4c6573735468616e436f6d6d","kind":"string","nodeType":"YulLiteral","src":"27192:34:5","type":"","value":"CommitRevealDurationLessThanComm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27169:6:5"},"nodeType":"YulFunctionCall","src":"27169:58:5"},"nodeType":"YulExpressionStatement","src":"27169:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27248:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"27256:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27244:3:5"},"nodeType":"YulFunctionCall","src":"27244:15:5"},{"hexValue":"69744475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"27261:12:5","type":"","value":"itDuration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27237:6:5"},"nodeType":"YulFunctionCall","src":"27237:37:5"},"nodeType":"YulExpressionStatement","src":"27237:37:5"}]},"name":"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27150:6:5","type":""}],"src":"27052:229:5"},{"body":{"nodeType":"YulBlock","src":"27433:220:5","statements":[{"nodeType":"YulAssignment","src":"27443:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27509:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"27514:2:5","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27450:58:5"},"nodeType":"YulFunctionCall","src":"27450:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27443:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27615:3:5"}],"functionName":{"name":"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","nodeType":"YulIdentifier","src":"27526:88:5"},"nodeType":"YulFunctionCall","src":"27526:93:5"},"nodeType":"YulExpressionStatement","src":"27526:93:5"},{"nodeType":"YulAssignment","src":"27628:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27639:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"27644:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27635:3:5"},"nodeType":"YulFunctionCall","src":"27635:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27628:3:5"}]}]},"name":"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27421:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27429:3:5","type":""}],"src":"27287:366:5"},{"body":{"nodeType":"YulBlock","src":"27830:248:5","statements":[{"nodeType":"YulAssignment","src":"27840:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27852:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"27863:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27848:3:5"},"nodeType":"YulFunctionCall","src":"27848:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27840:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27887:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"27898:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27883:3:5"},"nodeType":"YulFunctionCall","src":"27883:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27906:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"27912:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27902:3:5"},"nodeType":"YulFunctionCall","src":"27902:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27876:6:5"},"nodeType":"YulFunctionCall","src":"27876:47:5"},"nodeType":"YulExpressionStatement","src":"27876:47:5"},{"nodeType":"YulAssignment","src":"27932:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28066:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27940:124:5"},"nodeType":"YulFunctionCall","src":"27940:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27932:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27810:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27825:4:5","type":""}],"src":"27659:419:5"},{"body":{"nodeType":"YulBlock","src":"28190:60:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28212:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"28220:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28208:3:5"},"nodeType":"YulFunctionCall","src":"28208:14:5"},{"hexValue":"53746167654e6f7446696e6973686564","kind":"string","nodeType":"YulLiteral","src":"28224:18:5","type":"","value":"StageNotFinished"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28201:6:5"},"nodeType":"YulFunctionCall","src":"28201:42:5"},"nodeType":"YulExpressionStatement","src":"28201:42:5"}]},"name":"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28182:6:5","type":""}],"src":"28084:166:5"},{"body":{"nodeType":"YulBlock","src":"28402:220:5","statements":[{"nodeType":"YulAssignment","src":"28412:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28478:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"28483:2:5","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28419:58:5"},"nodeType":"YulFunctionCall","src":"28419:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28412:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28584:3:5"}],"functionName":{"name":"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","nodeType":"YulIdentifier","src":"28495:88:5"},"nodeType":"YulFunctionCall","src":"28495:93:5"},"nodeType":"YulExpressionStatement","src":"28495:93:5"},{"nodeType":"YulAssignment","src":"28597:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28608:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"28613:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28604:3:5"},"nodeType":"YulFunctionCall","src":"28604:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28597:3:5"}]}]},"name":"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28390:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28398:3:5","type":""}],"src":"28256:366:5"},{"body":{"nodeType":"YulBlock","src":"28799:248:5","statements":[{"nodeType":"YulAssignment","src":"28809:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28821:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"28832:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28817:3:5"},"nodeType":"YulFunctionCall","src":"28817:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28809:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28856:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"28867:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28852:3:5"},"nodeType":"YulFunctionCall","src":"28852:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28875:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"28881:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28871:3:5"},"nodeType":"YulFunctionCall","src":"28871:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28845:6:5"},"nodeType":"YulFunctionCall","src":"28845:47:5"},"nodeType":"YulExpressionStatement","src":"28845:47:5"},{"nodeType":"YulAssignment","src":"28901:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29035:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28909:124:5"},"nodeType":"YulFunctionCall","src":"28909:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28901:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28779:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28794:4:5","type":""}],"src":"28628:419:5"},{"body":{"nodeType":"YulBlock","src":"29097:147:5","statements":[{"nodeType":"YulAssignment","src":"29107:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29130:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29112:17:5"},"nodeType":"YulFunctionCall","src":"29112:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"29107:1:5"}]},{"nodeType":"YulAssignment","src":"29141:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"29164:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29146:17:5"},"nodeType":"YulFunctionCall","src":"29146:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"29141:1:5"}]},{"nodeType":"YulAssignment","src":"29175:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29186:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"29189:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29182:3:5"},"nodeType":"YulFunctionCall","src":"29182:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"29175:3:5"}]},{"body":{"nodeType":"YulBlock","src":"29215:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"29217:16:5"},"nodeType":"YulFunctionCall","src":"29217:18:5"},"nodeType":"YulExpressionStatement","src":"29217:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"29207:1:5"},{"name":"sum","nodeType":"YulIdentifier","src":"29210:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29204:2:5"},"nodeType":"YulFunctionCall","src":"29204:10:5"},"nodeType":"YulIf","src":"29201:36:5"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"29084:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"29087:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"29093:3:5","type":""}],"src":"29053:191:5"},{"body":{"nodeType":"YulBlock","src":"29572:786:5","statements":[{"nodeType":"YulAssignment","src":"29582:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29594:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"29605:3:5","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29590:3:5"},"nodeType":"YulFunctionCall","src":"29590:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29582:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29663:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29676:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"29687:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29672:3:5"},"nodeType":"YulFunctionCall","src":"29672:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29619:43:5"},"nodeType":"YulFunctionCall","src":"29619:71:5"},"nodeType":"YulExpressionStatement","src":"29619:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29744:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29757:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"29768:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29753:3:5"},"nodeType":"YulFunctionCall","src":"29753:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29700:43:5"},"nodeType":"YulFunctionCall","src":"29700:72:5"},"nodeType":"YulExpressionStatement","src":"29700:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29826:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29839:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"29850:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29835:3:5"},"nodeType":"YulFunctionCall","src":"29835:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29782:43:5"},"nodeType":"YulFunctionCall","src":"29782:72:5"},"nodeType":"YulExpressionStatement","src":"29782:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29908:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29921:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"29932:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29917:3:5"},"nodeType":"YulFunctionCall","src":"29917:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29864:43:5"},"nodeType":"YulFunctionCall","src":"29864:72:5"},"nodeType":"YulExpressionStatement","src":"29864:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"29990:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30003:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30014:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29999:3:5"},"nodeType":"YulFunctionCall","src":"29999:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29946:43:5"},"nodeType":"YulFunctionCall","src":"29946:73:5"},"nodeType":"YulExpressionStatement","src":"29946:73:5"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"30073:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30086:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30097:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30082:3:5"},"nodeType":"YulFunctionCall","src":"30082:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30029:43:5"},"nodeType":"YulFunctionCall","src":"30029:73:5"},"nodeType":"YulExpressionStatement","src":"30029:73:5"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"30156:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30169:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30180:3:5","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30165:3:5"},"nodeType":"YulFunctionCall","src":"30165:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30112:43:5"},"nodeType":"YulFunctionCall","src":"30112:73:5"},"nodeType":"YulExpressionStatement","src":"30112:73:5"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"30239:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30252:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30263:3:5","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30248:3:5"},"nodeType":"YulFunctionCall","src":"30248:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30195:43:5"},"nodeType":"YulFunctionCall","src":"30195:73:5"},"nodeType":"YulExpressionStatement","src":"30195:73:5"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"30322:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30335:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30346:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30331:3:5"},"nodeType":"YulFunctionCall","src":"30331:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30278:43:5"},"nodeType":"YulFunctionCall","src":"30278:73:5"},"nodeType":"YulExpressionStatement","src":"30278:73:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29480:9:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"29492:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"29500:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"29508:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"29516:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"29524:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29532:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29540:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29548:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29556:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29567:4:5","type":""}],"src":"29250:1108:5"},{"body":{"nodeType":"YulBlock","src":"30470:55:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30492:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"30500:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30488:3:5"},"nodeType":"YulFunctionCall","src":"30488:14:5"},{"hexValue":"544e6f744d617463686564","kind":"string","nodeType":"YulLiteral","src":"30504:13:5","type":"","value":"TNotMatched"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30481:6:5"},"nodeType":"YulFunctionCall","src":"30481:37:5"},"nodeType":"YulExpressionStatement","src":"30481:37:5"}]},"name":"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30462:6:5","type":""}],"src":"30364:161:5"},{"body":{"nodeType":"YulBlock","src":"30677:220:5","statements":[{"nodeType":"YulAssignment","src":"30687:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30753:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"30758:2:5","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30694:58:5"},"nodeType":"YulFunctionCall","src":"30694:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30687:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30859:3:5"}],"functionName":{"name":"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","nodeType":"YulIdentifier","src":"30770:88:5"},"nodeType":"YulFunctionCall","src":"30770:93:5"},"nodeType":"YulExpressionStatement","src":"30770:93:5"},{"nodeType":"YulAssignment","src":"30872:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30883:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"30888:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30879:3:5"},"nodeType":"YulFunctionCall","src":"30879:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30872:3:5"}]}]},"name":"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30665:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30673:3:5","type":""}],"src":"30531:366:5"},{"body":{"nodeType":"YulBlock","src":"31074:248:5","statements":[{"nodeType":"YulAssignment","src":"31084:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31096:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31107:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31092:3:5"},"nodeType":"YulFunctionCall","src":"31092:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31084:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31131:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31142:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31127:3:5"},"nodeType":"YulFunctionCall","src":"31127:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31150:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"31156:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31146:3:5"},"nodeType":"YulFunctionCall","src":"31146:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31120:6:5"},"nodeType":"YulFunctionCall","src":"31120:47:5"},"nodeType":"YulExpressionStatement","src":"31120:47:5"},{"nodeType":"YulAssignment","src":"31176:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31310:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31184:124:5"},"nodeType":"YulFunctionCall","src":"31184:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31176:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31054:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31069:4:5","type":""}],"src":"30903:419:5"},{"body":{"nodeType":"YulBlock","src":"31420:290:5","statements":[{"body":{"nodeType":"YulBlock","src":"31467:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"31469:77:5"},"nodeType":"YulFunctionCall","src":"31469:79:5"},"nodeType":"YulExpressionStatement","src":"31469:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"31441:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"31450:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31437:3:5"},"nodeType":"YulFunctionCall","src":"31437:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"31462:3:5","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"31433:3:5"},"nodeType":"YulFunctionCall","src":"31433:33:5"},"nodeType":"YulIf","src":"31430:120:5"},{"nodeType":"YulBlock","src":"31560:143:5","statements":[{"nodeType":"YulVariableDeclaration","src":"31575:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"31589:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"31579:6:5","type":""}]},{"nodeType":"YulAssignment","src":"31604:89:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31665:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"31676:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31661:3:5"},"nodeType":"YulFunctionCall","src":"31661:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"31685:7:5"}],"functionName":{"name":"abi_decode_t_struct$_VDFClaim_$1183_memory_ptr","nodeType":"YulIdentifier","src":"31614:46:5"},"nodeType":"YulFunctionCall","src":"31614:79:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"31604:6:5"}]}]}]},"name":"abi_decode_tuple_t_struct$_VDFClaim_$1183_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31390:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"31401:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"31413:6:5","type":""}],"src":"31328:382:5"},{"body":{"nodeType":"YulBlock","src":"31822:58:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31844:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"31852:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31840:3:5"},"nodeType":"YulFunctionCall","src":"31840:14:5"},{"hexValue":"5265636f764e6f744d6174636858","kind":"string","nodeType":"YulLiteral","src":"31856:16:5","type":"","value":"RecovNotMatchX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31833:6:5"},"nodeType":"YulFunctionCall","src":"31833:40:5"},"nodeType":"YulExpressionStatement","src":"31833:40:5"}]},"name":"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31814:6:5","type":""}],"src":"31716:164:5"},{"body":{"nodeType":"YulBlock","src":"32032:220:5","statements":[{"nodeType":"YulAssignment","src":"32042:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32108:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"32113:2:5","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32049:58:5"},"nodeType":"YulFunctionCall","src":"32049:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32042:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32214:3:5"}],"functionName":{"name":"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","nodeType":"YulIdentifier","src":"32125:88:5"},"nodeType":"YulFunctionCall","src":"32125:93:5"},"nodeType":"YulExpressionStatement","src":"32125:93:5"},{"nodeType":"YulAssignment","src":"32227:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32238:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"32243:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32234:3:5"},"nodeType":"YulFunctionCall","src":"32234:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32227:3:5"}]}]},"name":"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32020:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32028:3:5","type":""}],"src":"31886:366:5"},{"body":{"nodeType":"YulBlock","src":"32429:248:5","statements":[{"nodeType":"YulAssignment","src":"32439:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32451:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32462:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32447:3:5"},"nodeType":"YulFunctionCall","src":"32447:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32439:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32486:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32497:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32482:3:5"},"nodeType":"YulFunctionCall","src":"32482:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32505:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"32511:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32501:3:5"},"nodeType":"YulFunctionCall","src":"32501:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32475:6:5"},"nodeType":"YulFunctionCall","src":"32475:47:5"},"nodeType":"YulExpressionStatement","src":"32475:47:5"},{"nodeType":"YulAssignment","src":"32531:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32665:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32539:124:5"},"nodeType":"YulFunctionCall","src":"32539:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32531:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32409:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32424:4:5","type":""}],"src":"32258:419:5"},{"body":{"nodeType":"YulBlock","src":"32865:371:5","statements":[{"nodeType":"YulAssignment","src":"32875:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32887:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32898:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32883:3:5"},"nodeType":"YulFunctionCall","src":"32883:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32875:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32956:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32969:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32980:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32965:3:5"},"nodeType":"YulFunctionCall","src":"32965:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32912:43:5"},"nodeType":"YulFunctionCall","src":"32912:71:5"},"nodeType":"YulExpressionStatement","src":"32912:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33037:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33050:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33061:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33046:3:5"},"nodeType":"YulFunctionCall","src":"33046:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32993:43:5"},"nodeType":"YulFunctionCall","src":"32993:72:5"},"nodeType":"YulExpressionStatement","src":"32993:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33119:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33132:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33143:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33128:3:5"},"nodeType":"YulFunctionCall","src":"33128:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33075:43:5"},"nodeType":"YulFunctionCall","src":"33075:72:5"},"nodeType":"YulExpressionStatement","src":"33075:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33201:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33214:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33225:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33210:3:5"},"nodeType":"YulFunctionCall","src":"33210:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33157:43:5"},"nodeType":"YulFunctionCall","src":"33157:72:5"},"nodeType":"YulExpressionStatement","src":"33157:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32813:9:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"32825:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32833:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32841:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32849:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32860:4:5","type":""}],"src":"32683:553:5"},{"body":{"nodeType":"YulBlock","src":"33373:767:5","statements":[{"nodeType":"YulVariableDeclaration","src":"33383:29:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33406:5:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33400:5:5"},"nodeType":"YulFunctionCall","src":"33400:12:5"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"33387:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33421:50:5","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33461:9:5"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"33435:25:5"},"nodeType":"YulFunctionCall","src":"33435:36:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33425:6:5","type":""}]},{"nodeType":"YulAssignment","src":"33480:96:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33564:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"33569:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33487:76:5"},"nodeType":"YulFunctionCall","src":"33487:89:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33480:3:5"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"33625:159:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33678:3:5"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33687:9:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33702:4:5","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33698:3:5"},"nodeType":"YulFunctionCall","src":"33698:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33683:3:5"},"nodeType":"YulFunctionCall","src":"33683:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33671:6:5"},"nodeType":"YulFunctionCall","src":"33671:38:5"},"nodeType":"YulExpressionStatement","src":"33671:38:5"},{"nodeType":"YulAssignment","src":"33722:52:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33733:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33742:6:5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33764:6:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33757:6:5"},"nodeType":"YulFunctionCall","src":"33757:14:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33750:6:5"},"nodeType":"YulFunctionCall","src":"33750:22:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33738:3:5"},"nodeType":"YulFunctionCall","src":"33738:35:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33729:3:5"},"nodeType":"YulFunctionCall","src":"33729:45:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33722:3:5"}]}]},"nodeType":"YulCase","src":"33618:166:5","value":{"kind":"number","nodeType":"YulLiteral","src":"33623:1:5","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"33800:334:5","statements":[{"nodeType":"YulVariableDeclaration","src":"33845:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33892:5:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33860:31:5"},"nodeType":"YulFunctionCall","src":"33860:38:5"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"33849:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33911:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"33920:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33915:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"33978:110:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34007:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"34012:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34003:3:5"},"nodeType":"YulFunctionCall","src":"34003:11:5"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34022:7:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34016:5:5"},"nodeType":"YulFunctionCall","src":"34016:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33996:6:5"},"nodeType":"YulFunctionCall","src":"33996:35:5"},"nodeType":"YulExpressionStatement","src":"33996:35:5"},{"nodeType":"YulAssignment","src":"34048:26:5","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34063:7:5"},{"kind":"number","nodeType":"YulLiteral","src":"34072:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34059:3:5"},"nodeType":"YulFunctionCall","src":"34059:15:5"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"34048:7:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33945:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"33948:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33942:2:5"},"nodeType":"YulFunctionCall","src":"33942:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33956:21:5","statements":[{"nodeType":"YulAssignment","src":"33958:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33967:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"33970:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33963:3:5"},"nodeType":"YulFunctionCall","src":"33963:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33958:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"33938:3:5","statements":[]},"src":"33934:154:5"},{"nodeType":"YulAssignment","src":"34101:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34112:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"34117:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34108:3:5"},"nodeType":"YulFunctionCall","src":"34108:16:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34101:3:5"}]}]},"nodeType":"YulCase","src":"33793:341:5","value":{"kind":"number","nodeType":"YulLiteral","src":"33798:1:5","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33596:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33607:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33592:3:5"},"nodeType":"YulFunctionCall","src":"33592:17:5"},"nodeType":"YulSwitch","src":"33585:549:5"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33354:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33361:3:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33369:3:5","type":""}],"src":"33266:874:5"},{"body":{"nodeType":"YulBlock","src":"34279:136:5","statements":[{"nodeType":"YulAssignment","src":"34290:99:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34376:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"34385:3:5"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34297:78:5"},"nodeType":"YulFunctionCall","src":"34297:92:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34290:3:5"}]},{"nodeType":"YulAssignment","src":"34399:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"34406:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34399:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34258:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34264:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34275:3:5","type":""}],"src":"34146:269:5"},{"body":{"nodeType":"YulBlock","src":"34527:67:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34549:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"34557:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34545:3:5"},"nodeType":"YulFunctionCall","src":"34545:14:5"},{"hexValue":"4e6f74436f6d6d69747465645061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"34561:25:5","type":"","value":"NotCommittedParticipant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34538:6:5"},"nodeType":"YulFunctionCall","src":"34538:49:5"},"nodeType":"YulExpressionStatement","src":"34538:49:5"}]},"name":"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34519:6:5","type":""}],"src":"34421:173:5"},{"body":{"nodeType":"YulBlock","src":"34746:220:5","statements":[{"nodeType":"YulAssignment","src":"34756:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34822:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"34827:2:5","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34763:58:5"},"nodeType":"YulFunctionCall","src":"34763:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34756:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34928:3:5"}],"functionName":{"name":"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","nodeType":"YulIdentifier","src":"34839:88:5"},"nodeType":"YulFunctionCall","src":"34839:93:5"},"nodeType":"YulExpressionStatement","src":"34839:93:5"},{"nodeType":"YulAssignment","src":"34941:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34952:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"34957:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34948:3:5"},"nodeType":"YulFunctionCall","src":"34948:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34941:3:5"}]}]},"name":"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34734:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34742:3:5","type":""}],"src":"34600:366:5"},{"body":{"nodeType":"YulBlock","src":"35143:248:5","statements":[{"nodeType":"YulAssignment","src":"35153:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35165:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"35176:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35161:3:5"},"nodeType":"YulFunctionCall","src":"35161:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35153:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35200:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"35211:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35196:3:5"},"nodeType":"YulFunctionCall","src":"35196:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35219:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"35225:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35215:3:5"},"nodeType":"YulFunctionCall","src":"35215:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35189:6:5"},"nodeType":"YulFunctionCall","src":"35189:47:5"},"nodeType":"YulExpressionStatement","src":"35189:47:5"},{"nodeType":"YulAssignment","src":"35245:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35379:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35253:124:5"},"nodeType":"YulFunctionCall","src":"35253:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35245:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35123:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35138:4:5","type":""}],"src":"34972:419:5"},{"body":{"nodeType":"YulBlock","src":"35503:59:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35525:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"35533:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35521:3:5"},"nodeType":"YulFunctionCall","src":"35521:14:5"},{"hexValue":"416c726561647952657665616c6564","kind":"string","nodeType":"YulLiteral","src":"35537:17:5","type":"","value":"AlreadyRevealed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35514:6:5"},"nodeType":"YulFunctionCall","src":"35514:41:5"},"nodeType":"YulExpressionStatement","src":"35514:41:5"}]},"name":"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35495:6:5","type":""}],"src":"35397:165:5"},{"body":{"nodeType":"YulBlock","src":"35714:220:5","statements":[{"nodeType":"YulAssignment","src":"35724:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35790:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"35795:2:5","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35731:58:5"},"nodeType":"YulFunctionCall","src":"35731:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35724:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35896:3:5"}],"functionName":{"name":"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","nodeType":"YulIdentifier","src":"35807:88:5"},"nodeType":"YulFunctionCall","src":"35807:93:5"},"nodeType":"YulExpressionStatement","src":"35807:93:5"},{"nodeType":"YulAssignment","src":"35909:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35920:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"35925:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35916:3:5"},"nodeType":"YulFunctionCall","src":"35916:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35909:3:5"}]}]},"name":"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35702:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35710:3:5","type":""}],"src":"35568:366:5"},{"body":{"nodeType":"YulBlock","src":"36111:248:5","statements":[{"nodeType":"YulAssignment","src":"36121:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36133:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"36144:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36129:3:5"},"nodeType":"YulFunctionCall","src":"36129:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36121:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36168:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"36179:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36164:3:5"},"nodeType":"YulFunctionCall","src":"36164:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36187:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"36193:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36183:3:5"},"nodeType":"YulFunctionCall","src":"36183:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36157:6:5"},"nodeType":"YulFunctionCall","src":"36157:47:5"},"nodeType":"YulExpressionStatement","src":"36157:47:5"},{"nodeType":"YulAssignment","src":"36213:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36347:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36221:124:5"},"nodeType":"YulFunctionCall","src":"36221:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36213:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36091:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36106:4:5","type":""}],"src":"35940:419:5"},{"body":{"nodeType":"YulBlock","src":"36471:59:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36493:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"36501:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36489:3:5"},"nodeType":"YulFunctionCall","src":"36489:14:5"},{"hexValue":"414e6f744d61746368436f6d6d6974","kind":"string","nodeType":"YulLiteral","src":"36505:17:5","type":"","value":"ANotMatchCommit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36482:6:5"},"nodeType":"YulFunctionCall","src":"36482:41:5"},"nodeType":"YulExpressionStatement","src":"36482:41:5"}]},"name":"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36463:6:5","type":""}],"src":"36365:165:5"},{"body":{"nodeType":"YulBlock","src":"36682:220:5","statements":[{"nodeType":"YulAssignment","src":"36692:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36758:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"36763:2:5","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36699:58:5"},"nodeType":"YulFunctionCall","src":"36699:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36692:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36864:3:5"}],"functionName":{"name":"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","nodeType":"YulIdentifier","src":"36775:88:5"},"nodeType":"YulFunctionCall","src":"36775:93:5"},"nodeType":"YulExpressionStatement","src":"36775:93:5"},{"nodeType":"YulAssignment","src":"36877:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36888:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"36893:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36884:3:5"},"nodeType":"YulFunctionCall","src":"36884:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36877:3:5"}]}]},"name":"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36670:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36678:3:5","type":""}],"src":"36536:366:5"},{"body":{"nodeType":"YulBlock","src":"37079:248:5","statements":[{"nodeType":"YulAssignment","src":"37089:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37101:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37112:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37097:3:5"},"nodeType":"YulFunctionCall","src":"37097:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37089:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37136:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37147:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37132:3:5"},"nodeType":"YulFunctionCall","src":"37132:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37155:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"37161:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37151:3:5"},"nodeType":"YulFunctionCall","src":"37151:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37125:6:5"},"nodeType":"YulFunctionCall","src":"37125:47:5"},"nodeType":"YulExpressionStatement","src":"37125:47:5"},{"nodeType":"YulAssignment","src":"37181:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37315:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37189:124:5"},"nodeType":"YulFunctionCall","src":"37189:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37181:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37059:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37074:4:5","type":""}],"src":"36908:419:5"},{"body":{"nodeType":"YulBlock","src":"37376:128:5","statements":[{"nodeType":"YulAssignment","src":"37386:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37413:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37395:17:5"},"nodeType":"YulFunctionCall","src":"37395:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37386:5:5"}]},{"body":{"nodeType":"YulBlock","src":"37447:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37449:16:5"},"nodeType":"YulFunctionCall","src":"37449:18:5"},"nodeType":"YulExpressionStatement","src":"37449:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37434:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"37441:4:5","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"37431:2:5"},"nodeType":"YulFunctionCall","src":"37431:15:5"},"nodeType":"YulIf","src":"37428:41:5"},{"nodeType":"YulAssignment","src":"37478:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37489:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"37496:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37485:3:5"},"nodeType":"YulFunctionCall","src":"37485:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37478:3:5"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37362:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"37372:3:5","type":""}],"src":"37333:171:5"},{"body":{"nodeType":"YulBlock","src":"37616:119:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37638:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"37646:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37634:3:5"},"nodeType":"YulFunctionCall","src":"37634:14:5"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"37650:34:5","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37627:6:5"},"nodeType":"YulFunctionCall","src":"37627:58:5"},"nodeType":"YulExpressionStatement","src":"37627:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37706:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"37714:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37702:3:5"},"nodeType":"YulFunctionCall","src":"37702:15:5"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"37719:8:5","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37695:6:5"},"nodeType":"YulFunctionCall","src":"37695:33:5"},"nodeType":"YulExpressionStatement","src":"37695:33:5"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37608:6:5","type":""}],"src":"37510:225:5"},{"body":{"nodeType":"YulBlock","src":"37887:220:5","statements":[{"nodeType":"YulAssignment","src":"37897:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37963:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"37968:2:5","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37904:58:5"},"nodeType":"YulFunctionCall","src":"37904:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37897:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38069:3:5"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"37980:88:5"},"nodeType":"YulFunctionCall","src":"37980:93:5"},"nodeType":"YulExpressionStatement","src":"37980:93:5"},{"nodeType":"YulAssignment","src":"38082:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38093:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"38098:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38089:3:5"},"nodeType":"YulFunctionCall","src":"38089:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38082:3:5"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37875:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37883:3:5","type":""}],"src":"37741:366:5"},{"body":{"nodeType":"YulBlock","src":"38284:248:5","statements":[{"nodeType":"YulAssignment","src":"38294:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38306:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"38317:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38302:3:5"},"nodeType":"YulFunctionCall","src":"38302:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38294:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38341:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"38352:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38337:3:5"},"nodeType":"YulFunctionCall","src":"38337:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38360:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"38366:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38356:3:5"},"nodeType":"YulFunctionCall","src":"38356:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38330:6:5"},"nodeType":"YulFunctionCall","src":"38330:47:5"},"nodeType":"YulExpressionStatement","src":"38330:47:5"},{"nodeType":"YulAssignment","src":"38386:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38520:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38394:124:5"},"nodeType":"YulFunctionCall","src":"38394:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38386:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38264:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38279:4:5","type":""}],"src":"38113:419:5"},{"body":{"nodeType":"YulBlock","src":"38644:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38666:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"38674:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38662:3:5"},"nodeType":"YulFunctionCall","src":"38662:14:5"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"38678:34:5","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38655:6:5"},"nodeType":"YulFunctionCall","src":"38655:58:5"},"nodeType":"YulExpressionStatement","src":"38655:58:5"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38636:6:5","type":""}],"src":"38538:182:5"},{"body":{"nodeType":"YulBlock","src":"38872:220:5","statements":[{"nodeType":"YulAssignment","src":"38882:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38948:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"38953:2:5","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38889:58:5"},"nodeType":"YulFunctionCall","src":"38889:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38882:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39054:3:5"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"38965:88:5"},"nodeType":"YulFunctionCall","src":"38965:93:5"},"nodeType":"YulExpressionStatement","src":"38965:93:5"},{"nodeType":"YulAssignment","src":"39067:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39078:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"39083:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39074:3:5"},"nodeType":"YulFunctionCall","src":"39074:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39067:3:5"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38860:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38868:3:5","type":""}],"src":"38726:366:5"},{"body":{"nodeType":"YulBlock","src":"39269:248:5","statements":[{"nodeType":"YulAssignment","src":"39279:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39291:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"39302:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39287:3:5"},"nodeType":"YulFunctionCall","src":"39287:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39279:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39326:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"39337:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39322:3:5"},"nodeType":"YulFunctionCall","src":"39322:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39345:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"39351:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39341:3:5"},"nodeType":"YulFunctionCall","src":"39341:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39315:6:5"},"nodeType":"YulFunctionCall","src":"39315:47:5"},"nodeType":"YulExpressionStatement","src":"39315:47:5"},{"nodeType":"YulAssignment","src":"39371:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39505:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39379:124:5"},"nodeType":"YulFunctionCall","src":"39379:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39371:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39249:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39264:4:5","type":""}],"src":"39098:419:5"},{"body":{"nodeType":"YulBlock","src":"39629:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39651:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"39659:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39647:3:5"},"nodeType":"YulFunctionCall","src":"39647:14:5"},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","kind":"string","nodeType":"YulLiteral","src":"39663:28:5","type":"","value":"FunctionInvalidAtThisStage"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39640:6:5"},"nodeType":"YulFunctionCall","src":"39640:52:5"},"nodeType":"YulExpressionStatement","src":"39640:52:5"}]},"name":"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39621:6:5","type":""}],"src":"39523:176:5"},{"body":{"nodeType":"YulBlock","src":"39851:220:5","statements":[{"nodeType":"YulAssignment","src":"39861:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39927:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"39932:2:5","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39868:58:5"},"nodeType":"YulFunctionCall","src":"39868:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39861:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40033:3:5"}],"functionName":{"name":"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","nodeType":"YulIdentifier","src":"39944:88:5"},"nodeType":"YulFunctionCall","src":"39944:93:5"},"nodeType":"YulExpressionStatement","src":"39944:93:5"},{"nodeType":"YulAssignment","src":"40046:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40057:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"40062:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40053:3:5"},"nodeType":"YulFunctionCall","src":"40053:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40046:3:5"}]}]},"name":"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39839:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39847:3:5","type":""}],"src":"39705:366:5"},{"body":{"nodeType":"YulBlock","src":"40248:248:5","statements":[{"nodeType":"YulAssignment","src":"40258:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40270:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"40281:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40266:3:5"},"nodeType":"YulFunctionCall","src":"40266:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40258:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40305:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"40316:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40301:3:5"},"nodeType":"YulFunctionCall","src":"40301:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40324:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"40330:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40320:3:5"},"nodeType":"YulFunctionCall","src":"40320:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40294:6:5"},"nodeType":"YulFunctionCall","src":"40294:47:5"},"nodeType":"YulExpressionStatement","src":"40294:47:5"},{"nodeType":"YulAssignment","src":"40350:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40484:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40358:124:5"},"nodeType":"YulFunctionCall","src":"40358:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40350:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40228:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40243:4:5","type":""}],"src":"40077:419:5"},{"body":{"nodeType":"YulBlock","src":"40544:143:5","statements":[{"nodeType":"YulAssignment","src":"40554:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40577:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40559:17:5"},"nodeType":"YulFunctionCall","src":"40559:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"40554:1:5"}]},{"nodeType":"YulAssignment","src":"40588:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40611:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40593:17:5"},"nodeType":"YulFunctionCall","src":"40593:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"40588:1:5"}]},{"body":{"nodeType":"YulBlock","src":"40635:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"40637:16:5"},"nodeType":"YulFunctionCall","src":"40637:18:5"},"nodeType":"YulExpressionStatement","src":"40637:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"40632:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40625:6:5"},"nodeType":"YulFunctionCall","src":"40625:9:5"},"nodeType":"YulIf","src":"40622:35:5"},{"nodeType":"YulAssignment","src":"40667:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"40676:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"40679:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40672:3:5"},"nodeType":"YulFunctionCall","src":"40672:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"40667:1:5"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"40533:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"40536:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"40542:1:5","type":""}],"src":"40502:185:5"},{"body":{"nodeType":"YulBlock","src":"40799:55:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40821:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"40829:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40817:3:5"},"nodeType":"YulFunctionCall","src":"40817:14:5"},{"hexValue":"416c6c46696e6973686564","kind":"string","nodeType":"YulLiteral","src":"40833:13:5","type":"","value":"AllFinished"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40810:6:5"},"nodeType":"YulFunctionCall","src":"40810:37:5"},"nodeType":"YulExpressionStatement","src":"40810:37:5"}]},"name":"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40791:6:5","type":""}],"src":"40693:161:5"},{"body":{"nodeType":"YulBlock","src":"41006:220:5","statements":[{"nodeType":"YulAssignment","src":"41016:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41082:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"41087:2:5","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41023:58:5"},"nodeType":"YulFunctionCall","src":"41023:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41016:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41188:3:5"}],"functionName":{"name":"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","nodeType":"YulIdentifier","src":"41099:88:5"},"nodeType":"YulFunctionCall","src":"41099:93:5"},"nodeType":"YulExpressionStatement","src":"41099:93:5"},{"nodeType":"YulAssignment","src":"41201:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41212:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"41217:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41208:3:5"},"nodeType":"YulFunctionCall","src":"41208:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41201:3:5"}]}]},"name":"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40994:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41002:3:5","type":""}],"src":"40860:366:5"},{"body":{"nodeType":"YulBlock","src":"41403:248:5","statements":[{"nodeType":"YulAssignment","src":"41413:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41425:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"41436:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41421:3:5"},"nodeType":"YulFunctionCall","src":"41421:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41413:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41460:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"41471:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41456:3:5"},"nodeType":"YulFunctionCall","src":"41456:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41479:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"41485:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41475:3:5"},"nodeType":"YulFunctionCall","src":"41475:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41449:6:5"},"nodeType":"YulFunctionCall","src":"41449:47:5"},"nodeType":"YulExpressionStatement","src":"41449:47:5"},{"nodeType":"YulAssignment","src":"41505:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41639:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41513:124:5"},"nodeType":"YulFunctionCall","src":"41513:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41505:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41383:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41398:4:5","type":""}],"src":"41232:419:5"},{"body":{"nodeType":"YulBlock","src":"41705:362:5","statements":[{"nodeType":"YulAssignment","src":"41715:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41738:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41720:17:5"},"nodeType":"YulFunctionCall","src":"41720:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41715:1:5"}]},{"nodeType":"YulAssignment","src":"41749:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41772:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41754:17:5"},"nodeType":"YulFunctionCall","src":"41754:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41749:1:5"}]},{"nodeType":"YulVariableDeclaration","src":"41783:28:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41806:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"41809:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41802:3:5"},"nodeType":"YulFunctionCall","src":"41802:9:5"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"41787:11:5","type":""}]},{"nodeType":"YulAssignment","src":"41820:41:5","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"41849:11:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41831:17:5"},"nodeType":"YulFunctionCall","src":"41831:30:5"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"41820:7:5"}]},{"body":{"nodeType":"YulBlock","src":"42038:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"42040:16:5"},"nodeType":"YulFunctionCall","src":"42040:18:5"},"nodeType":"YulExpressionStatement","src":"42040:18:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41971:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41964:6:5"},"nodeType":"YulFunctionCall","src":"41964:9:5"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41994:1:5"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"42001:7:5"},{"name":"x","nodeType":"YulIdentifier","src":"42010:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"41997:3:5"},"nodeType":"YulFunctionCall","src":"41997:15:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41991:2:5"},"nodeType":"YulFunctionCall","src":"41991:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"41944:2:5"},"nodeType":"YulFunctionCall","src":"41944:83:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41924:6:5"},"nodeType":"YulFunctionCall","src":"41924:113:5"},"nodeType":"YulIf","src":"41921:139:5"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41688:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"41691:1:5","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"41697:7:5","type":""}],"src":"41657:410:5"},{"body":{"nodeType":"YulBlock","src":"42209:139:5","statements":[{"nodeType":"YulAssignment","src":"42220:102:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42309:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"42318:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"42227:81:5"},"nodeType":"YulFunctionCall","src":"42227:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42220:3:5"}]},{"nodeType":"YulAssignment","src":"42332:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"42339:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42332:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42188:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42194:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42205:3:5","type":""}],"src":"42073:275:5"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct Pietrzak_VDF.VDFClaim\n    function abi_decode_t_struct$_VDFClaim_$1183_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // n\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // x\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // y\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // T\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // v\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0xa0))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0xa0) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_VDFClaim_$1183_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_struct$_VDFClaim_$1183_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0xa0)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_struct$_VDFClaim_$1183_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Stages_$145(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Stages_$145(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stages_$145(value)\n    }\n\n    function convert_t_enum$_Stages_$145_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stages_$145(value)\n    }\n\n    function abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stages_$145_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162(memPtr) {\n\n        mstore(add(memPtr, 0), \"GreaterOrEqualThanN\")\n\n    }\n\n    function abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532(memPtr) {\n\n        mstore(add(memPtr, 0), \"AlreadyCommitted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotAllRevealed\")\n\n    }\n\n    function abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"OmegaAlreadyCompleted\")\n\n    }\n\n    function abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68(memPtr) {\n\n        mstore(add(memPtr, 0), \"CommitRevealDurationLessThanComm\")\n\n        mstore(add(memPtr, 32), \"itDuration\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874(memPtr) {\n\n        mstore(add(memPtr, 0), \"StageNotFinished\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TNotMatched\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_struct$_VDFClaim_$1183_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_VDFClaim_$1183_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"RecovNotMatchX\")\n\n    }\n\n    function abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotCommittedParticipant\")\n\n    }\n\n    function abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"AlreadyRevealed\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ANotMatchCommit\")\n\n    }\n\n    function abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"FunctionInvalidAtThisStage\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"AllFinished\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73FA4F46 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xB0E9EB3F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB0E9EB3F EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xBFB70E04 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xDCA669E4 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x73FA4F46 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x77F0ADE9 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x7F93C751 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x16F80CD4 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x16F80CD4 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x22FADC28 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x50D30CBF EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x224 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xD64B071 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x12CE9906 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0xA25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x11C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x272D JUMP JUMPDEST PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x1250 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B4 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x281D JUMP JUMPDEST PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x285D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x1467 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x290B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x29C7 JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C8 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D9 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473 SWAP1 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x484 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x48E PUSH1 0x0 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD PUSH2 0x4A4 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x51D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x500 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 PUSH2 0x52E DUP7 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x2D38 JUMP JUMPDEST POP DUP2 PUSH2 0x6E0 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xBD41A700367CDF3254812A81BAAD606F9D6102E946F1BB28AAB0A4AFE25EF0C9 DUP5 DUP7 DUP4 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x720 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x791 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x806 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x810 PUSH1 0x2 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x966 JUMPI DUP3 DUP1 PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST PUSH2 0x94F PUSH2 0x921 DUP7 DUP7 PUSH2 0x8DE PUSH1 0x8 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x8E7 DUP12 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST DUP8 PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1AEB JUMP JUMPDEST DUP8 MULMOD SWAP6 POP DUP1 DUP1 PUSH2 0x95E SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x88F JUMP JUMPDEST POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x31D4D513959D79380D7F8AF557AC2408B4D6C2CF59AF943DD997A11100520F66 DUP8 DUP7 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0xA10 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD LT PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 LT PUSH2 0xACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP1 PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xAE1 JUMPI PUSH2 0xAE0 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x3165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4C DUP3 PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB60 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB8D JUMPI PUSH2 0xB8C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xC33 JUMPI PUSH2 0xC32 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x2D38 JUMP JUMPDEST POP PUSH32 0x1A5E4FA05B9601AF979A44C50EF7E103B9B51CD105EB42040B5817EB3E58449C DUP2 TIMESTAMP DUP8 DUP8 DUP8 DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD19 JUMPI PUSH2 0xD18 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xD3D SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xDB7 JUMPI PUSH2 0xDB6 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE12 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0xE5F PUSH2 0x1250 JUMP JUMPDEST PUSH2 0xE69 PUSH1 0x0 PUSH2 0x1C94 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0xF42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP1 PUSH2 0x3292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFA1 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF97 JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x32B2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xF67 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x106D JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1042 DUP3 DUP7 PUSH2 0xFFF DUP6 PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x1008 DUP9 PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1019 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST DUP8 PUSH2 0x1AEB JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH2 0x1053 JUMPI PUSH2 0x1052 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP2 DUP8 MULMOD SWAP6 POP POP POP DUP1 DUP1 PUSH2 0x1065 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA5 JUMP JUMPDEST POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP4 EQ PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP1 PUSH2 0x332B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1110 JUMPI PUSH2 0x110F PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3FC2D4F2E2E4E84069307A4D3A9B7AD25D93E2026627031A87B54A1C61907CE CALLER DUP5 DUP9 DUP9 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D0 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x11DA PUSH1 0x0 PUSH2 0x1D0C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x128D JUMPI PUSH2 0x128C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x12A7 JUMPI POP PUSH1 0x2 SLOAD DUP2 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x137F JUMPI PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0x1352 JUMPI PUSH2 0x12BE PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x3413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x137E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1378 JUMPI PUSH2 0x1377 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1393 JUMPI PUSH2 0x1392 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13B5 JUMPI PUSH2 0x13B4 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x13DC JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0x13DB JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x13EA JUMPI PUSH2 0x13E9 PUSH2 0x1DD0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x14C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B9 SWAP1 PUSH2 0x2A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A3 SWAP1 PUSH2 0x3476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x15F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1654 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1AEB JUMP JUMPDEST EQ PUSH2 0x1694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168B SWAP1 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x169C PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x16A6 PUSH1 0x1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x16B7 SWAP1 PUSH2 0x356E JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP6 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SUB PUSH2 0x1752 JUMPI PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x171D JUMPI PUSH2 0x171C PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x167147E5476FB37532A0AAB79DEA3EB6B8FE0FBD723AC6025B0DE29237B0496 DUP6 DUP8 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x17F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x1823 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x184F SWAP1 PUSH2 0x2AFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x189C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1871 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x189C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x187F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x18AC PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1912 SWAP1 PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1924 DUP2 PUSH2 0x1D0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x192F PUSH2 0x1EB7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x194D PUSH2 0x13ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199A SWAP1 PUSH2 0x3675 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B8 JUMPI PUSH2 0x19B7 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19D9 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1A1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A11 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A2C DUP5 PUSH2 0x1EBF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A4B JUMPI PUSH2 0x1A4A PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A7D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AE0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AD4 JUMPI PUSH2 0x1AD3 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1A8B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1B43 JUMPI PUSH1 0x1 DUP1 DUP6 AND SUB PUSH2 0x1B1B JUMPI DUP3 DUP1 PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP6 DUP3 MULMOD SWAP1 POP JUMPDEST DUP3 DUP1 PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP5 POP PUSH1 0x2 DUP5 PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C88 JUMPI PUSH1 0x0 PUSH2 0x1B85 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B78 JUMPI PUSH2 0x1B77 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2012 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1B9C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1BB1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BBF SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1BF2 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C00 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C11 JUMPI PUSH2 0x1C10 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x1C33 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C41 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C52 JUMPI PUSH2 0x1C51 PUSH2 0x3058 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ PUSH2 0x1C74 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C8F JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1C80 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B58 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST GT PUSH2 0x1D09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D00 SWAP1 PUSH2 0x36E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1DE3 JUMPI PUSH2 0x1DE2 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3C SWAP1 PUSH2 0x377E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH2 0x1E55 JUMPI PUSH2 0x1E54 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST ADDMOD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8B PUSH2 0x2894 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x2894 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1F1D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1F5A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1F50 JUMPI PUSH2 0x1F4F PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1F89 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1F7F JUMPI PUSH2 0x1F7E PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1FB2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1FA8 JUMPI PUSH2 0x1FA7 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1FD7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1FCD JUMPI PUSH2 0x1FCC PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1FFA JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2009 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201A PUSH2 0x2226 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x20B2 JUMPI PUSH2 0x203A DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x207B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2105 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x20D3 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x20E0 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x1A1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20F1 SWAP3 SWAP2 SWAP1 PUSH2 0x2B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD AND SUB PUSH2 0x212E JUMPI PUSH1 0x2 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x2127 SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP3 POP PUSH2 0x216B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x2141 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH2 0x214B SWAP2 SWAP1 PUSH2 0x3701 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP4 PUSH2 0x215E SWAP2 SWAP1 PUSH2 0x379E JUMP JUMPDEST PUSH2 0x2168 SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21AD PUSH2 0x219E DUP9 PUSH1 0x20 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D3 PUSH2 0x21C8 DUP9 PUSH1 0x80 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP6 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1AEB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21FB SWAP2 SWAP1 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x221E SWAP2 SWAP1 PUSH2 0x2FE2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x2259 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22AA DUP2 PUSH2 0x2259 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C7 DUP2 PUSH2 0x22A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x22CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP2 EQ PUSH2 0x2313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2325 DUP2 PUSH2 0x22FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2342 JUMPI PUSH2 0x2341 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2350 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2361 DUP6 DUP3 DUP7 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23B9 DUP3 PUSH2 0x2370 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23D8 JUMPI PUSH2 0x23D7 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23EB PUSH2 0x228D JUMP JUMPDEST SWAP1 POP PUSH2 0x23F7 DUP3 DUP3 PUSH2 0x23B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2448 JUMPI PUSH2 0x2447 PUSH2 0x242D JUMP JUMPDEST JUMPDEST PUSH2 0x2452 PUSH1 0xA0 PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2462 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2476 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x249E DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x24B2 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D1 PUSH2 0x24CC DUP5 PUSH2 0x23FC JUMP JUMPDEST PUSH2 0x23E1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x2428 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x251D JUMPI DUP1 PUSH2 0x2509 DUP9 DUP3 PUSH2 0x2432 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x24F6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x253C JUMPI PUSH2 0x253B PUSH2 0x236B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x254C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2571 JUMPI PUSH2 0x2570 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257F DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2590 DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x25A1 DUP9 DUP3 DUP10 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C2 JUMPI PUSH2 0x25C1 PUSH2 0x229C JUMP JUMPDEST JUMPDEST PUSH2 0x25CE DUP9 DUP3 DUP10 ADD PUSH2 0x2527 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x25DF DUP9 DUP3 DUP10 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2603 JUMPI PUSH2 0x2602 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2611 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2622 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2635 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2650 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x265D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x266A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x268D JUMPI PUSH2 0x268C PUSH2 0x236B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26AA JUMPI PUSH2 0x26A9 PUSH2 0x2672 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xA0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x26C6 JUMPI PUSH2 0x26C5 PUSH2 0x2428 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26E6 JUMPI PUSH2 0x26E5 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F4 DUP7 DUP3 DUP8 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x229C JUMP JUMPDEST JUMPDEST PUSH2 0x2721 DUP7 DUP3 DUP8 ADD PUSH2 0x2677 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2743 JUMPI PUSH2 0x2742 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2751 DUP5 DUP3 DUP6 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276F DUP2 PUSH2 0x275A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x278B PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2798 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27A5 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27B2 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27BF PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27CC PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27D9 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x27E6 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x27F4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2817 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x262C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2833 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2842 DUP6 DUP3 DUP7 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2853 DUP6 DUP3 DUP7 ADD PUSH2 0x22B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2872 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x287F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2766 JUMP JUMPDEST PUSH2 0x288C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x28D4 JUMPI PUSH2 0x28D3 PUSH2 0x2894 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x28E5 DUP3 PUSH2 0x28C3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F5 DUP3 PUSH2 0x28D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2905 DUP2 PUSH2 0x28EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2960 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2977 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x2981 DUP2 DUP6 PUSH2 0x2931 JUMP JUMPDEST SWAP4 POP PUSH2 0x2991 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x299A DUP2 PUSH2 0x2370 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BF DUP2 DUP5 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29DD JUMPI PUSH2 0x29DC PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP5 DUP3 DUP6 ADD PUSH2 0x2316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x477265617465724F72457175616C5468616E4E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2A PUSH1 0x13 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A35 DUP3 PUSH2 0x29F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A59 DUP2 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479436F6D6D697474656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A96 PUSH1 0x10 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA1 DUP3 PUSH2 0x2A60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AC5 DUP2 PUSH2 0x2A89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B13 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2B26 JUMPI PUSH2 0x2B25 PUSH2 0x2ACC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B42 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH2 0x2B4C DUP2 DUP6 PUSH2 0x2B2C JUMP JUMPDEST SWAP4 POP PUSH2 0x2B5C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2942 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B74 DUP3 DUP6 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B80 DUP3 DUP5 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2BEE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x2BF8 DUP7 DUP4 PUSH2 0x2BB1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C35 PUSH2 0x2C30 PUSH2 0x2C2B DUP5 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x2C10 JUMP JUMPDEST PUSH2 0x2259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C4F DUP4 PUSH2 0x2C1A JUMP JUMPDEST PUSH2 0x2C63 PUSH2 0x2C5B DUP3 PUSH2 0x2C3C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2BBE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2C78 PUSH2 0x2C6B JUMP JUMPDEST PUSH2 0x2C83 DUP2 DUP5 DUP5 PUSH2 0x2C46 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CA7 JUMPI PUSH2 0x2C9C PUSH1 0x0 DUP3 PUSH2 0x2C70 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CEC JUMPI PUSH2 0x2CBD DUP2 PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0x2CC6 DUP5 PUSH2 0x2BA1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2CD5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2CE9 PUSH2 0x2CE1 DUP6 PUSH2 0x2BA1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2C88 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D0F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2CF1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D28 DUP4 DUP4 PUSH2 0x2CFE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2D41 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x2381 JUMP JUMPDEST JUMPDEST PUSH2 0x2D64 DUP3 SLOAD PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0x2D6F DUP3 DUP3 DUP6 PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DA2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2D90 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2D9A DUP6 DUP3 PUSH2 0x2D1C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2DB0 DUP7 PUSH2 0x2B8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2DD8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DB3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2DF5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2DF1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2CFE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2E44 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2E76 JUMPI PUSH2 0x2E75 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E96 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x2EA3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2EB5 DUP2 DUP7 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP PUSH2 0x2EC4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2ED1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74416C6C52657665616C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F11 PUSH1 0xE DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1C DUP3 PUSH2 0x2EDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F40 DUP2 PUSH2 0x2F04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6D656761416C7265616479436F6D706C657465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x15 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F88 DUP3 PUSH2 0x2F47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FAC DUP2 PUSH2 0x2F70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FED DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF8 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3008 JUMPI PUSH2 0x3007 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3042 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x304F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2766 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x436F6D6D697452657665616C4475726174696F6E4C6573735468616E436F6D6D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x69744475726174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E3 PUSH1 0x2A DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x30EE DUP3 PUSH2 0x3087 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3112 DUP2 PUSH2 0x30D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746167654E6F7446696E697368656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314F PUSH1 0x10 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x315A DUP3 PUSH2 0x3119 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x317E DUP2 PUSH2 0x3142 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3190 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x319B DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x31B3 JUMPI PUSH2 0x31B2 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x31CF PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x31DC PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x31E9 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x31F6 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3203 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3210 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x321D PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x322A PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3238 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x544E6F744D617463686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327C PUSH1 0xB DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3287 DUP3 PUSH2 0x3246 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32AB DUP2 PUSH2 0x326F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C8 JUMPI PUSH2 0x32C7 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32D6 DUP5 DUP3 DUP6 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265636F764E6F744D6174636858000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3315 PUSH1 0xE DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3320 DUP3 PUSH2 0x32DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3344 DUP2 PUSH2 0x3308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3360 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x336D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x337A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x3387 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x339D DUP2 PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0x33A7 DUP2 DUP7 PUSH2 0x2B2C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x33C2 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x33D7 JUMPI PUSH2 0x340A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x340A JUMP JUMPDEST PUSH2 0x33E0 DUP6 PUSH2 0x2B8C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3402 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33E3 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341F DUP3 DUP5 PUSH2 0x3390 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74436F6D6D69747465645061727469636970616E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3460 PUSH1 0x17 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x346B DUP3 PUSH2 0x342A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x348F DUP2 PUSH2 0x3453 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647952657665616C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CC PUSH1 0xF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x34D7 DUP3 PUSH2 0x3496 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34FB DUP2 PUSH2 0x34BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414E6F744D61746368436F6D6D69740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3538 PUSH1 0xF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3543 DUP3 PUSH2 0x3502 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3567 DUP2 PUSH2 0x352B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3579 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x358C JUMPI PUSH2 0x358B PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 PUSH1 0x26 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FE DUP3 PUSH2 0x3597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3622 DUP2 PUSH2 0x35E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365F PUSH1 0x20 DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x366A DUP3 PUSH2 0x3629 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x368E DUP2 PUSH2 0x3652 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E496E76616C69644174546869735374616765000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36CB PUSH1 0x1A DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D6 DUP3 PUSH2 0x3695 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36FA DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x370C DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x3717 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3727 JUMPI PUSH2 0x3726 PUSH2 0x2FB3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C46696E6973686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3768 PUSH1 0xB DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 POP PUSH2 0x3773 DUP3 PUSH2 0x3732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3797 DUP2 PUSH2 0x375B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A9 DUP3 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B4 DUP4 PUSH2 0x2259 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x37C2 DUP2 PUSH2 0x2259 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x37D9 JUMPI PUSH2 0x37D8 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37EC DUP3 DUP5 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 SMOD 0xA6 DUP14 PUSH28 0x20A2C7500857CD87B8E592F102BB7C57C0CC9718EC813174CD460864 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"469:12259:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3849:805;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6194:1657;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1915:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9961:1196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2109:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8184:1368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1609:35:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2213:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1544:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11434:736;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2379:92:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5266:922;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2050:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1984:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1732:20:2;;;;:::o;3849:805::-;3951:7;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1094:13:0::1;:11;:13::i;:::-;3989:16:2::2;:30;4006:12;3989:30;;;;;;;;;;;;;;;:37;4020:5;;3989:37;;;;;;;;;;;:47;;;;;;;;;;;;3988:48;3980:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4067:12;:10;:12::i;:::-;4089:25;4100:13;4089:10;:25::i;:::-;4124:14;4141:5;;4124:22;;4156:28;4187:13;4156:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4241:14;4257:30;4279:7;4257:21;:30::i;:::-;4227:61;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4210:78;;4338:32;;;;;;;;4350:6;4338:32;;;;4358:4;4338:32;;;;;;4364:5;4338:32;;;;::::0;4298:16:::2;:30;4315:12;4298:30;;;;;;;;;;;;;;;:37;4329:5;;4298:37;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4416:43;;;;;;;;4434:7;4416:43;;;;4443:1;4416:43;;;;4446:12;4416:43;;;;::::0;4380:18:::2;:25;4399:5;;4380:25;;;;;;;;;;;:33;4406:6;4380:33;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4521:14;4505:13;:30;;;;;;:::i;:::-;;4553:8;;;;:::i;:::-;;;;4545:5;:16;;;;4576:71;4584:12;4598:7;4607:14;4623:6;4631:15;4576:71;;;;;;;;;;:::i;:::-;;;;;;;;3970:684;;3849:805:::0;;;:::o;6194:1657::-;6236:7;6255:14;6272:5;;6255:22;;6295:13;:21;6309:6;6295:21;;;;;;;;;;;:35;;;;;;;;;;;;6287:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6368:13;:21;6382:6;6368:21;;;;;;;;;;;:33;;;;;;;;;;;;6367:34;6359:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6437:12;:10;:12::i;:::-;6459:27;6470:15;6459:10;:27::i;:::-;6496:26;6525:13;:21;6539:6;6525:21;;;;;;;;;;;:39;;;6496:68;;6574:14;6591:1;6574:18;;6602:14;6619:13;:21;6633:6;6619:21;;;;;;;;;;;:27;;;6602:44;;6656:10;6669:13;:20;6683:5;;6669:20;;;;;;;;;;;:22;;;6656:35;;6701:10;6714:13;:20;6728:5;;6714:20;;;;;;;;;;;:22;;;6701:35;;6746:17;6766:4;6746:24;;6785:9;6780:780;6804:18;6800:1;:22;6780:780;;;7533:2;6852:697;;;;;:::i;:::-;;6900:615;6944:476;6992:2;7368;7154:54;7176:18;:26;7195:6;7176:26;;;;;;;;;;;:29;7203:1;7176:29;;;;;;;;;;;:31;;;7154:21;:54::i;:::-;7246:29;7268:6;7246:21;:29::i;:::-;7100:209;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7057:282;;;;;;7020:345;;:350;;;;:::i;:::-;7396:2;6944:22;:476::i;:::-;7442:18;:26;7461:6;7442:26;;;;;;;;;;;:29;7469:1;7442:29;;;;;;;;;;;:31;;;7495:2;6900:22;:615::i;:::-;6876:6;6852:697;6843:706;;6824:3;;;;;:::i;:::-;;;;6780:780;;;;7599:6;7569:13;:21;7583:6;7569:21;;;;;;;;;;;:27;;:36;;;;7651:12;7615:13;:21;7629:6;7615:21;;;;;;;;;;;:33;;;:48;;;;;;;;;;;;;;;;;;7729:15;7721:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7759:62;7775:6;7783;7791:15;7808:12;7759:62;;;;;;;;;:::i;:::-;;;;;;;;7838:6;7831:13;;;;;;;;;6194:1657;:::o;1915:20::-;;;;:::o;9961:1196::-;10192:2;10177:7;10185:1;10177:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;:17;10169:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;10268:21;10250:15;:39;10229:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;10384:15;10375:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;10367:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;10430:49;10471:7;10430:40;:49::i;:::-;;10498:1;10489:5;;:10;;;;;;;:::i;:::-;;;;;;;;10517:13;10509:5;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10552:15;10540:9;:27;;;;10594:15;10577:14;:32;;;;10642:21;10619:20;:44;;;;10698:7;10706:1;10698:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10673:13;:20;10687:5;;10673:20;;;;;;;;;;;:22;;:37;;;;10745:7;10753:1;10745:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10720:13;:20;10734:5;;10720:20;;;;;;;;;;;:22;;:37;;;;10792:7;10800:1;10792:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10767:13;:20;10781:5;;10767:20;;;;;;;;;;;:22;;:37;;;;10839:2;10814:13;:20;10828:5;;10814:20;;;;;;;;;;;:22;;:27;;;;10859:1;10851:5;:9;;;;10870:18;;;;;;;;;;;;:13;:18;;;;;;:::i;:::-;;10903:247;10922:12;10948:15;10977;11006:21;11041:2;11057:7;11065:1;11057:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;11083:7;11091:1;11083:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;11109:7;11117:1;11109:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;11135:5;;10903:247;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9961:1196;;;;;:::o;2109:95::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8184:1368::-;8305:6;;8312:1;8305:9;;;;;;;:::i;:::-;;;;;;;:11;;;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8328:13:::1;8344:1;8328:17;;8355:10;8368:13;:21;8382:6;8368:21;;;;;;;;;;;:23;;;8355:36;;8401:14;8418:13;:21;8432:6;8418:21;;;;;;;;;;;:27;;;8401:44;;8528:12;:10;:12::i;:::-;8550:24;8560:13;8550:9;:24::i;:::-;8593:13;:21;8607:6;8593:21;;;;;;;;;;;:33;;;;;;;;;;;;8592:34;8584:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8697:6;;8704:1;8697:9;;;;;;;:::i;:::-;;;;;;;:11;;;8670:13;:21;8684:6;8670:21;;;;;;;;;;;:23;;;:38;8662:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8734:48;8775:6;;8734:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:40;:48::i;:::-;;8797:9;8792:490;8816:13;:21;8830:6;8816:21;;;;;;;;;;;:39;;;8812:1;:43;8792:490;;;8876:10;8889:18;:26;8908:6;8889:26;;;;;;;;;;;:29;8916:1;8889:29;;;;;;;;;;;:31;;;8876:44;;8934:12;8949:277;8989:2;9190;9090:25;9112:2;9090:21;:25::i;:::-;9117:29;9139:6;9117:21;:29::i;:::-;9073:74;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9038:131;;;;;;9009:178;;:183;;;;:::i;:::-;9210:2;8949:22;:277::i;:::-;8934:292;;9268:2;9248:23;;;;;:::i;:::-;;9262:4;9255:5;9248:23;9240:31;;8862:420;;8857:3;;;;;:::i;:::-;;;;8792:490;;;;9308:6;;9315:1;9308:9;;;;;;;:::i;:::-;;;;;;;:11;;;9299:5;:20;9291:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;9384:4;9348:13;:21;9362:6;9348:21;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;9428:6;;9435:1;9428:9;;;;;;;:::i;:::-;;;;;;;:11;;;9398:13;:21;9412:6;9398:21;;;;;;;;;;;:27;;:41;;;;9457:15;9449:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9487:58;9497:10;9509:5;9516:6;;9523:1;9516:9;;;;;;;:::i;:::-;;;;;;;:11;;;9529:15;9487:58;;;;;;;;;:::i;:::-;;;;;;;;8318:1234;;;8184:1368:::0;;;;:::o;1574:29::-;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1609:35:2:-;;;;:::o;2213:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1544:24::-;;;;:::o;11434:736::-;11473:18;11494:9;;11473:30;;11526:13;11517:22;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;:72;;;;;11575:14;;11562:10;:27;;;;:::i;:::-;11543:15;:46;;11517:72;11513:472;;;11618:1;11609:5;;:10;11605:370;;11639:11;:9;:11::i;:::-;11709:5;;11668:13;:20;11682:5;;11668:20;;;;;;;;;;;:38;;:46;;;;11732:14;11823:13;:20;11837:5;;11823:20;;;;;;;;;;;:22;;;11784:13;11767:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;11757:42;;;;;;11749:51;;:96;;;;:::i;:::-;11732:113;;11892:6;11863:13;:20;11877:5;;11863:20;;;;;;;;;;;:26;;:35;;;;11621:292;11605:370;;;11945:15;11937:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;11605:370;11513:472;12020:13;12011:22;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;:106;;;;;12082:20;;12069:10;:33;;;;:::i;:::-;12050:15;:52;;:66;;;;12115:1;12106:5;;:10;12050:66;12011:106;11994:170;;;12142:11;:9;:11::i;:::-;11994:170;11463:707;11434:736::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2379:92:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5266:922::-;5341:2;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5355:14:::1;5372:5;;5355:22;;5387:24;5414:16;:30;5431:12;5414:30;;;;;;;;;;;;;;;:38;5445:6;5414:38;;;;;;;;;;;5387:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5470:5;:15;;;5462:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;5532:5;:14;;;5531:15;5523:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5693:18;:26;5712:6;5693:26;;;;;;;;;;;:39;5720:5;:11;;;5693:39;;;;;;;;;;;:41;;;5597:76;5620:13;:21;5634:6;5620:21;;;;;;;;;;;:23;;;5645:2;5649:13;:21;5663:6;5649:21;;;;;;;;;;;:23;;;5597:22;:76::i;:::-;:137;5576:199;;;;;;;;;;;;:::i;:::-;;;;;;;;;5785:12;:10;:12::i;:::-;5807:25;5818:13;5807:10;:25::i;:::-;5842:14;5861:5;;5859:7;;;;;:::i;:::-;;;;;;;5842:24;;5920:2;5876:18;:26;5895:6;5876:26;;;;;;;;;;;:39;5903:5;:11;;;5876:39;;;;;;;;;;;:41;;:46;;;;5946:1;5936:6;:11:::0;5932:121:::1;;5971:15;5963:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6038:4;6000:13;:21;6014:6;6000:21;;;;;;;;;;;:35;;;:42;;;;;;;;;;;;;;;;;;5932:121;6112:4;6062:16;:30;6079:12;6062:30;;;;;;;;;;;;;;;:38;6093:6;6062:38;;;;;;;;;;;:47;;;:54;;;;;;;;;;;;;;;;;;6131:50;6139:12;6153:2;6157:6;6165:15;6131:50;;;;;;;;;:::i;:::-;;;;;;;;5345:843;;;5266:922:::0;;;:::o;2050:19::-;;;;;;;;;;;;;:::o;1984:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;12176:120:2:-;12252:6;12243:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;12235:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;12176:120;:::o;3201:691:4:-;3257:13;3306:14;3338:1;3323:12;3329:5;3323;:12::i;:::-;:16;3306:33;;3353:20;3387:6;3376:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:41;;3408:11;3534:6;3530:2;3526:15;3518:6;3514:28;3507:35;;3569:280;3576:4;3569:280;;;3600:5;;;;;;;;3739:8;3734:2;3727:5;3723:14;3718:30;3713:3;3705:44;3793:2;3784:11;;;;;;:::i;:::-;;;;;3826:1;3817:5;:10;3569:280;3813:21;3569:280;3869:6;3862:13;;;;;3201:691;;;:::o;2705:323::-;2780:7;2799:14;2816:1;2799:18;;2827:172;2838:1;2834;:5;2827:172;;;2868:1;2863;2859;:5;:10;2855:78;;2916:1;2898:20;;;;;:::i;:::-;;2913:1;2905:6;2898:20;2889:29;;2855:78;2963:1;2950:15;;;;;:::i;:::-;;2960:1;2957;2950:15;2946:19;;2987:1;2983;:5;;;;:::i;:::-;2979:9;;2827:172;;;3015:6;3008:13;;;2705:323;;;;;:::o;1776:703::-;1865:4;1881:17;1901:9;:16;1881:36;;1933:9;1928:524;1952:9;1948:1;:13;1928:524;;;1982:33;2018:39;2044:9;2054:1;2044:12;;;;;;;;:::i;:::-;;;;;;;;2018:25;:39::i;:::-;1982:75;;2076:6;:15;;;2071:371;;2118:5;2111:12;;;;;;;2071:371;2167:6;:17;;;2162:265;;2193:4;2186:11;;;;;;;2162:265;2242:9;2256:1;2252;:5;;;;:::i;:::-;2242:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2224:6;:14;;;:36;2220:207;;2269:5;2262:12;;;;;;;2220:207;2319:9;2333:1;2329;:5;;;;:::i;:::-;2319:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2301:6;:14;;;:36;2297:130;;2346:5;2339:12;;;;;;;2297:130;2395:9;2409:1;2405;:5;;;;:::i;:::-;2395:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2378:6;:13;;;:35;2374:53;;2422:5;2415:12;;;;;;;2374:53;1968:484;1963:3;;;;;:::i;:::-;;;;1928:524;;;;2468:4;2461:11;;;1776:703;;;;:::o;12302:118:2:-;12376:6;12368:14;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:14;;;;;;;;:::i;:::-;;;12360:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;12302:118;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;12577:149:2:-;12634:15;12625:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;12617:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;12716:1;12690:28;;;;;:::i;:::-;;12713:1;12705:5;;;;;;;;;;;12697:14;;;;;;;;:::i;:::-;;12690:28;12683:36;;;;;;;;:::i;:::-;;12675:5;;:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12577:149::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;4077:916:4:-;4130:7;4149:14;4166:1;4149:18;;4214:8;4205:5;:17;4201:103;;4251:8;4242:17;;;;;;:::i;:::-;;;;;4287:2;4277:12;;;;4201:103;4330:8;4321:5;:17;4317:103;;4367:8;4358:17;;;;;;:::i;:::-;;;;;4403:2;4393:12;;;;4317:103;4446:8;4437:5;:17;4433:103;;4483:8;4474:17;;;;;;:::i;:::-;;;;;4519:2;4509:12;;;;4433:103;4562:7;4553:5;:16;4549:100;;4598:7;4589:16;;;;;;:::i;:::-;;;;;4633:1;4623:11;;;;4549:100;4675:7;4666:5;:16;4662:100;;4711:7;4702:16;;;;;;:::i;:::-;;;;;4746:1;4736:11;;;;4662:100;4788:7;4779:5;:16;4775:100;;4824:7;4815:16;;;;;;:::i;:::-;;;;;4859:1;4849:11;;;;4775:100;4901:7;4892:5;:16;4888:66;;4938:1;4928:11;;;;4888:66;4980:6;4973:13;;;4077:916;;;:::o;595:1175::-;693:26;;:::i;:::-;749:1;735:8;:10;;;:15;731:1033;;784:36;794:8;:10;;;806:1;809:8;:10;;;784:9;:36::i;:::-;770:8;:10;;;:50;766:225;;847:41;;;;;;;;867:4;847:41;;;;;;873:5;847:41;;;;;;880:1;847:41;;;;883:1;847:41;;;;886:1;847:41;;;840:48;;;;766:225;934:42;;;;;;;;954:5;934:42;;;;;;961:5;934:42;;;;;;968:1;934:42;;;;971:1;934:42;;;;974:1;934:42;;;927:49;;;;731:1033;1021:13;1048:9;1060:8;:10;;;1048:22;;1084:9;1096:124;1121:8;:10;;;1163:20;1172:8;:10;;;1163:8;:20::i;:::-;1185;1194:8;:10;;;1185:8;:20::i;:::-;1149:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1096:7;:124::i;:::-;1084:136;;1257:1;1252;1239:8;:10;;;:14;:19;1235:189;;1299:1;1286:8;:10;;;:14;;;;:::i;:::-;1278:22;;1235:189;;;1366:1;1361;1348:8;:10;;;:14;;;;:::i;:::-;1347:20;;;;:::i;:::-;1339:28;;1399:8;:10;;;1394:1;1390;:5;;;;:::i;:::-;1389:20;;;;:::i;:::-;1385:24;;1235:189;1460:293;;;;;;;;1501:4;1460:293;;;;;;1527:4;1460:293;;;;;;1553:71;1563:36;1573:8;:10;;;1585:1;1588:8;:10;;;1563:9;:36::i;:::-;1601:8;:10;;;1613:8;:10;;;1553:9;:71::i;:::-;1460:293;;;;1646:62;1656:36;1666:8;:10;;;1678:1;1681:8;:10;;;1656:9;:36::i;:::-;1694:1;1697:8;:10;;;1646:9;:62::i;:::-;1460:293;;;;1730:5;1460:293;;;1437:316;;;;;595:1175;;;;:::o;433:156::-;507:7;581:1;568:7;551:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;541:36;;;;;;533:45;;:49;;;;:::i;:::-;526:56;;433:156;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:126::-;1079:7;1119:42;1112:5;1108:54;1097:65;;1042:126;;;:::o;1174:96::-;1211:7;1240:24;1258:5;1240:24;:::i;:::-;1229:35;;1174:96;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:117::-;2138:1;2135;2128:12;2152:102;2193:6;2244:2;2240:7;2235:2;2228:5;2224:14;2220:28;2210:38;;2152:102;;;:::o;2260:180::-;2308:77;2305:1;2298:88;2405:4;2402:1;2395:15;2429:4;2426:1;2419:15;2446:281;2529:27;2551:4;2529:27;:::i;:::-;2521:6;2517:40;2659:6;2647:10;2644:22;2623:18;2611:10;2608:34;2605:62;2602:88;;;2670:18;;:::i;:::-;2602:88;2710:10;2706:2;2699:22;2489:238;2446:281;;:::o;2733:129::-;2767:6;2794:20;;:::i;:::-;2784:30;;2823:33;2851:4;2843:6;2823:33;:::i;:::-;2733:129;;;:::o;2868:337::-;2971:4;3061:18;3053:6;3050:30;3047:56;;;3083:18;;:::i;:::-;3047:56;3133:4;3125:6;3121:17;3113:25;;3193:4;3187;3183:15;3175:23;;2868:337;;;:::o;3211:117::-;3320:1;3317;3310:12;3334:117;3443:1;3440;3433:12;3616:1044;3691:5;3735:4;3723:9;3718:3;3714:19;3710:30;3707:117;;;3743:79;;:::i;:::-;3707:117;3842:21;3858:4;3842:21;:::i;:::-;3833:30;;3919:1;3959:49;4004:3;3995:6;3984:9;3980:22;3959:49;:::i;:::-;3952:4;3945:5;3941:16;3934:75;3873:147;4076:2;4117:49;4162:3;4153:6;4142:9;4138:22;4117:49;:::i;:::-;4110:4;4103:5;4099:16;4092:75;4030:148;4234:2;4275:49;4320:3;4311:6;4300:9;4296:22;4275:49;:::i;:::-;4268:4;4261:5;4257:16;4250:75;4188:148;4392:2;4433:49;4478:3;4469:6;4458:9;4454:22;4433:49;:::i;:::-;4426:4;4419:5;4415:16;4408:75;4346:148;4550:3;4592:49;4637:3;4628:6;4617:9;4613:22;4592:49;:::i;:::-;4585:4;4578:5;4574:16;4567:75;4504:149;3616:1044;;;;:::o;4704:788::-;4826:5;4851:107;4867:90;4950:6;4867:90;:::i;:::-;4851:107;:::i;:::-;4842:116;;4978:5;5007:6;5000:5;4993:21;5041:4;5034:5;5030:16;5023:23;;5094:4;5086:6;5082:17;5074:6;5070:30;5123:3;5115:6;5112:15;5109:122;;;5142:79;;:::i;:::-;5109:122;5257:6;5240:246;5274:6;5269:3;5266:15;5240:246;;;5349:3;5378:63;5437:3;5425:10;5378:63;:::i;:::-;5373:3;5366:76;5471:4;5466:3;5462:14;5455:21;;5316:170;5300:4;5295:3;5291:14;5284:21;;5240:246;;;5244:21;4832:660;;4704:788;;;;;:::o;5536:422::-;5633:5;5682:3;5675:4;5667:6;5663:17;5659:27;5649:122;;5690:79;;:::i;:::-;5649:122;5807:6;5794:20;5832:120;5948:3;5940:6;5933:4;5925:6;5921:17;5832:120;:::i;:::-;5823:129;;5639:319;5536:422;;;;:::o;5964:1173::-;6110:6;6118;6126;6134;6142;6191:3;6179:9;6170:7;6166:23;6162:33;6159:120;;;6198:79;;:::i;:::-;6159:120;6318:1;6343:53;6388:7;6379:6;6368:9;6364:22;6343:53;:::i;:::-;6333:63;;6289:117;6445:2;6471:53;6516:7;6507:6;6496:9;6492:22;6471:53;:::i;:::-;6461:63;;6416:118;6573:2;6599:53;6644:7;6635:6;6624:9;6620:22;6599:53;:::i;:::-;6589:63;;6544:118;6729:2;6718:9;6714:18;6701:32;6760:18;6752:6;6749:30;6746:117;;;6782:79;;:::i;:::-;6746:117;6887:104;6983:7;6974:6;6963:9;6959:22;6887:104;:::i;:::-;6877:114;;6672:329;7040:3;7067:53;7112:7;7103:6;7092:9;7088:22;7067:53;:::i;:::-;7057:63;;7011:119;5964:1173;;;;;;;;:::o;7143:474::-;7211:6;7219;7268:2;7256:9;7247:7;7243:23;7239:32;7236:119;;;7274:79;;:::i;:::-;7236:119;7394:1;7419:53;7464:7;7455:6;7444:9;7440:22;7419:53;:::i;:::-;7409:63;;7365:117;7521:2;7547:53;7592:7;7583:6;7572:9;7568:22;7547:53;:::i;:::-;7537:63;;7492:118;7143:474;;;;;:::o;7623:118::-;7710:24;7728:5;7710:24;:::i;:::-;7705:3;7698:37;7623:118;;:::o;7747:442::-;7896:4;7934:2;7923:9;7919:18;7911:26;;7947:71;8015:1;8004:9;8000:17;7991:6;7947:71;:::i;:::-;8028:72;8096:2;8085:9;8081:18;8072:6;8028:72;:::i;:::-;8110;8178:2;8167:9;8163:18;8154:6;8110:72;:::i;:::-;7747:442;;;;;;:::o;8195:117::-;8304:1;8301;8294:12;8356:596;8457:8;8467:6;8517:3;8510:4;8502:6;8498:17;8494:27;8484:122;;8525:79;;:::i;:::-;8484:122;8638:6;8625:20;8615:30;;8668:18;8660:6;8657:30;8654:117;;;8690:79;;:::i;:::-;8654:117;8804:4;8796:6;8792:17;8780:29;;8858:3;8850:4;8842:6;8838:17;8828:8;8824:32;8821:41;8818:128;;;8865:79;;:::i;:::-;8818:128;8356:596;;;;;:::o;8958:760::-;9081:6;9089;9097;9146:2;9134:9;9125:7;9121:23;9117:32;9114:119;;;9152:79;;:::i;:::-;9114:119;9272:1;9297:53;9342:7;9333:6;9322:9;9318:22;9297:53;:::i;:::-;9287:63;;9243:117;9427:2;9416:9;9412:18;9399:32;9458:18;9450:6;9447:30;9444:117;;;9480:79;;:::i;:::-;9444:117;9593:108;9693:7;9684:6;9673:9;9669:22;9593:108;:::i;:::-;9575:126;;;;9370:341;8958:760;;;;;:::o;9724:329::-;9783:6;9832:2;9820:9;9811:7;9807:23;9803:32;9800:119;;;9838:79;;:::i;:::-;9800:119;9958:1;9983:53;10028:7;10019:6;10008:9;10004:22;9983:53;:::i;:::-;9973:63;;9929:117;9724:329;;;;:::o;10059:90::-;10093:7;10136:5;10129:13;10122:21;10111:32;;10059:90;;;:::o;10155:109::-;10236:21;10251:5;10236:21;:::i;:::-;10231:3;10224:34;10155:109;;:::o;10270:1084::-;10575:4;10613:3;10602:9;10598:19;10590:27;;10627:71;10695:1;10684:9;10680:17;10671:6;10627:71;:::i;:::-;10708:72;10776:2;10765:9;10761:18;10752:6;10708:72;:::i;:::-;10790;10858:2;10847:9;10843:18;10834:6;10790:72;:::i;:::-;10872;10940:2;10929:9;10925:18;10916:6;10872:72;:::i;:::-;10954:73;11022:3;11011:9;11007:19;10998:6;10954:73;:::i;:::-;11037;11105:3;11094:9;11090:19;11081:6;11037:73;:::i;:::-;11120;11188:3;11177:9;11173:19;11164:6;11120:73;:::i;:::-;11203:67;11265:3;11254:9;11250:19;11241:6;11203:67;:::i;:::-;11280;11342:3;11331:9;11327:19;11318:6;11280:67;:::i;:::-;10270:1084;;;;;;;;;;;;:::o;11360:222::-;11453:4;11491:2;11480:9;11476:18;11468:26;;11504:71;11572:1;11561:9;11557:17;11548:6;11504:71;:::i;:::-;11360:222;;;;:::o;11588:474::-;11656:6;11664;11713:2;11701:9;11692:7;11688:23;11684:32;11681:119;;;11719:79;;:::i;:::-;11681:119;11839:1;11864:53;11909:7;11900:6;11889:9;11885:22;11864:53;:::i;:::-;11854:63;;11810:117;11966:2;11992:53;12037:7;12028:6;12017:9;12013:22;11992:53;:::i;:::-;11982:63;;11937:118;11588:474;;;;;:::o;12068:418::-;12205:4;12243:2;12232:9;12228:18;12220:26;;12256:71;12324:1;12313:9;12309:17;12300:6;12256:71;:::i;:::-;12337:66;12399:2;12388:9;12384:18;12375:6;12337:66;:::i;:::-;12413;12475:2;12464:9;12460:18;12451:6;12413:66;:::i;:::-;12068:418;;;;;;:::o;12492:180::-;12540:77;12537:1;12530:88;12637:4;12634:1;12627:15;12661:4;12658:1;12651:15;12678:115;12761:1;12754:5;12751:12;12741:46;;12767:18;;:::i;:::-;12741:46;12678:115;:::o;12799:131::-;12846:7;12875:5;12864:16;;12881:43;12918:5;12881:43;:::i;:::-;12799:131;;;:::o;12936:::-;12994:9;13027:34;13055:5;13027:34;:::i;:::-;13014:47;;12936:131;;;:::o;13073:147::-;13168:45;13207:5;13168:45;:::i;:::-;13163:3;13156:58;13073:147;;:::o;13226:238::-;13327:4;13365:2;13354:9;13350:18;13342:26;;13378:79;13454:1;13443:9;13439:17;13430:6;13378:79;:::i;:::-;13226:238;;;;:::o;13470:99::-;13522:6;13556:5;13550:12;13540:22;;13470:99;;;:::o;13575:169::-;13659:11;13693:6;13688:3;13681:19;13733:4;13728:3;13724:14;13709:29;;13575:169;;;;:::o;13750:246::-;13831:1;13841:113;13855:6;13852:1;13849:13;13841:113;;;13940:1;13935:3;13931:11;13925:18;13921:1;13916:3;13912:11;13905:39;13877:2;13874:1;13870:10;13865:15;;13841:113;;;13988:1;13979:6;13974:3;13970:16;13963:27;13812:184;13750:246;;;:::o;14002:377::-;14090:3;14118:39;14151:5;14118:39;:::i;:::-;14173:71;14237:6;14232:3;14173:71;:::i;:::-;14166:78;;14253:65;14311:6;14306:3;14299:4;14292:5;14288:16;14253:65;:::i;:::-;14343:29;14365:6;14343:29;:::i;:::-;14338:3;14334:39;14327:46;;14094:285;14002:377;;;;:::o;14385:313::-;14498:4;14536:2;14525:9;14521:18;14513:26;;14585:9;14579:4;14575:20;14571:1;14560:9;14556:17;14549:47;14613:78;14686:4;14677:6;14613:78;:::i;:::-;14605:86;;14385:313;;;;:::o;14704:329::-;14763:6;14812:2;14800:9;14791:7;14787:23;14783:32;14780:119;;;14818:79;;:::i;:::-;14780:119;14938:1;14963:53;15008:7;14999:6;14988:9;14984:22;14963:53;:::i;:::-;14953:63;;14909:117;14704:329;;;;:::o;15039:169::-;15179:21;15175:1;15167:6;15163:14;15156:45;15039:169;:::o;15214:366::-;15356:3;15377:67;15441:2;15436:3;15377:67;:::i;:::-;15370:74;;15453:93;15542:3;15453:93;:::i;:::-;15571:2;15566:3;15562:12;15555:19;;15214:366;;;:::o;15586:419::-;15752:4;15790:2;15779:9;15775:18;15767:26;;15839:9;15833:4;15829:20;15825:1;15814:9;15810:17;15803:47;15867:131;15993:4;15867:131;:::i;:::-;15859:139;;15586:419;;;:::o;16011:166::-;16151:18;16147:1;16139:6;16135:14;16128:42;16011:166;:::o;16183:366::-;16325:3;16346:67;16410:2;16405:3;16346:67;:::i;:::-;16339:74;;16422:93;16511:3;16422:93;:::i;:::-;16540:2;16535:3;16531:12;16524:19;;16183:366;;;:::o;16555:419::-;16721:4;16759:2;16748:9;16744:18;16736:26;;16808:9;16802:4;16798:20;16794:1;16783:9;16779:17;16772:47;16836:131;16962:4;16836:131;:::i;:::-;16828:139;;16555:419;;;:::o;16980:180::-;17028:77;17025:1;17018:88;17125:4;17122:1;17115:15;17149:4;17146:1;17139:15;17166:320;17210:6;17247:1;17241:4;17237:12;17227:22;;17294:1;17288:4;17284:12;17315:18;17305:81;;17371:4;17363:6;17359:17;17349:27;;17305:81;17433:2;17425:6;17422:14;17402:18;17399:38;17396:84;;17452:18;;:::i;:::-;17396:84;17217:269;17166:320;;;:::o;17492:148::-;17594:11;17631:3;17616:18;;17492:148;;;;:::o;17646:390::-;17752:3;17780:39;17813:5;17780:39;:::i;:::-;17835:89;17917:6;17912:3;17835:89;:::i;:::-;17828:96;;17933:65;17991:6;17986:3;17979:4;17972:5;17968:16;17933:65;:::i;:::-;18023:6;18018:3;18014:16;18007:23;;17756:280;17646:390;;;;:::o;18042:435::-;18222:3;18244:95;18335:3;18326:6;18244:95;:::i;:::-;18237:102;;18356:95;18447:3;18438:6;18356:95;:::i;:::-;18349:102;;18468:3;18461:10;;18042:435;;;;;:::o;18483:141::-;18532:4;18555:3;18547:11;;18578:3;18575:1;18568:14;18612:4;18609:1;18599:18;18591:26;;18483:141;;;:::o;18630:93::-;18667:6;18714:2;18709;18702:5;18698:14;18694:23;18684:33;;18630:93;;;:::o;18729:107::-;18773:8;18823:5;18817:4;18813:16;18792:37;;18729:107;;;;:::o;18842:393::-;18911:6;18961:1;18949:10;18945:18;18984:97;19014:66;19003:9;18984:97;:::i;:::-;19102:39;19132:8;19121:9;19102:39;:::i;:::-;19090:51;;19174:4;19170:9;19163:5;19159:21;19150:30;;19223:4;19213:8;19209:19;19202:5;19199:30;19189:40;;18918:317;;18842:393;;;;;:::o;19241:60::-;19269:3;19290:5;19283:12;;19241:60;;;:::o;19307:142::-;19357:9;19390:53;19408:34;19417:24;19435:5;19417:24;:::i;:::-;19408:34;:::i;:::-;19390:53;:::i;:::-;19377:66;;19307:142;;;:::o;19455:75::-;19498:3;19519:5;19512:12;;19455:75;;;:::o;19536:269::-;19646:39;19677:7;19646:39;:::i;:::-;19707:91;19756:41;19780:16;19756:41;:::i;:::-;19748:6;19741:4;19735:11;19707:91;:::i;:::-;19701:4;19694:105;19612:193;19536:269;;;:::o;19811:73::-;19856:3;19811:73;:::o;19890:189::-;19967:32;;:::i;:::-;20008:65;20066:6;20058;20052:4;20008:65;:::i;:::-;19943:136;19890:189;;:::o;20085:186::-;20145:120;20162:3;20155:5;20152:14;20145:120;;;20216:39;20253:1;20246:5;20216:39;:::i;:::-;20189:1;20182:5;20178:13;20169:22;;20145:120;;;20085:186;;:::o;20277:543::-;20378:2;20373:3;20370:11;20367:446;;;20412:38;20444:5;20412:38;:::i;:::-;20496:29;20514:10;20496:29;:::i;:::-;20486:8;20482:44;20679:2;20667:10;20664:18;20661:49;;;20700:8;20685:23;;20661:49;20723:80;20779:22;20797:3;20779:22;:::i;:::-;20769:8;20765:37;20752:11;20723:80;:::i;:::-;20382:431;;20367:446;20277:543;;;:::o;20826:117::-;20880:8;20930:5;20924:4;20920:16;20899:37;;20826:117;;;;:::o;20949:169::-;20993:6;21026:51;21074:1;21070:6;21062:5;21059:1;21055:13;21026:51;:::i;:::-;21022:56;21107:4;21101;21097:15;21087:25;;21000:118;20949:169;;;;:::o;21123:295::-;21199:4;21345:29;21370:3;21364:4;21345:29;:::i;:::-;21337:37;;21407:3;21404:1;21400:11;21394:4;21391:21;21383:29;;21123:295;;;;:::o;21423:1395::-;21540:37;21573:3;21540:37;:::i;:::-;21642:18;21634:6;21631:30;21628:56;;;21664:18;;:::i;:::-;21628:56;21708:38;21740:4;21734:11;21708:38;:::i;:::-;21793:67;21853:6;21845;21839:4;21793:67;:::i;:::-;21887:1;21911:4;21898:17;;21943:2;21935:6;21932:14;21960:1;21955:618;;;;22617:1;22634:6;22631:77;;;22683:9;22678:3;22674:19;22668:26;22659:35;;22631:77;22734:67;22794:6;22787:5;22734:67;:::i;:::-;22728:4;22721:81;22590:222;21925:887;;21955:618;22007:4;22003:9;21995:6;21991:22;22041:37;22073:4;22041:37;:::i;:::-;22100:1;22114:208;22128:7;22125:1;22122:14;22114:208;;;22207:9;22202:3;22198:19;22192:26;22184:6;22177:42;22258:1;22250:6;22246:14;22236:24;;22305:2;22294:9;22290:18;22277:31;;22151:4;22148:1;22144:12;22139:17;;22114:208;;;22350:6;22341:7;22338:19;22335:179;;;22408:9;22403:3;22399:19;22393:26;22451:48;22493:4;22485:6;22481:17;22470:9;22451:48;:::i;:::-;22443:6;22436:64;22358:156;22335:179;22560:1;22556;22548:6;22544:14;22540:22;22534:4;22527:36;21962:611;;;21925:887;;21515:1303;;;21423:1395;;:::o;22824:180::-;22872:77;22869:1;22862:88;22969:4;22966:1;22959:15;22993:4;22990:1;22983:15;23010:233;23049:3;23072:24;23090:5;23072:24;:::i;:::-;23063:33;;23118:66;23111:5;23108:77;23105:103;;23188:18;;:::i;:::-;23105:103;23235:1;23228:5;23224:13;23217:20;;23010:233;;;:::o;23249:755::-;23474:4;23512:3;23501:9;23497:19;23489:27;;23526:71;23594:1;23583:9;23579:17;23570:6;23526:71;:::i;:::-;23607:72;23675:2;23664:9;23660:18;23651:6;23607:72;:::i;:::-;23726:9;23720:4;23716:20;23711:2;23700:9;23696:18;23689:48;23754:78;23827:4;23818:6;23754:78;:::i;:::-;23746:86;;23842:72;23910:2;23899:9;23895:18;23886:6;23842:72;:::i;:::-;23924:73;23992:3;23981:9;23977:19;23968:6;23924:73;:::i;:::-;23249:755;;;;;;;;:::o;24010:164::-;24150:16;24146:1;24138:6;24134:14;24127:40;24010:164;:::o;24180:366::-;24322:3;24343:67;24407:2;24402:3;24343:67;:::i;:::-;24336:74;;24419:93;24508:3;24419:93;:::i;:::-;24537:2;24532:3;24528:12;24521:19;;24180:366;;;:::o;24552:419::-;24718:4;24756:2;24745:9;24741:18;24733:26;;24805:9;24799:4;24795:20;24791:1;24780:9;24776:17;24769:47;24833:131;24959:4;24833:131;:::i;:::-;24825:139;;24552:419;;;:::o;24977:171::-;25117:23;25113:1;25105:6;25101:14;25094:47;24977:171;:::o;25154:366::-;25296:3;25317:67;25381:2;25376:3;25317:67;:::i;:::-;25310:74;;25393:93;25482:3;25393:93;:::i;:::-;25511:2;25506:3;25502:12;25495:19;;25154:366;;;:::o;25526:419::-;25692:4;25730:2;25719:9;25715:18;25707:26;;25779:9;25773:4;25769:20;25765:1;25754:9;25750:17;25743:47;25807:131;25933:4;25807:131;:::i;:::-;25799:139;;25526:419;;;:::o;25951:180::-;25999:77;25996:1;25989:88;26096:4;26093:1;26086:15;26120:4;26117:1;26110:15;26137:176;26169:1;26186:20;26204:1;26186:20;:::i;:::-;26181:25;;26220:20;26238:1;26220:20;:::i;:::-;26215:25;;26259:1;26249:35;;26264:18;;:::i;:::-;26249:35;26305:1;26302;26298:9;26293:14;;26137:176;;;;:::o;26319:541::-;26490:4;26528:3;26517:9;26513:19;26505:27;;26542:71;26610:1;26599:9;26595:17;26586:6;26542:71;:::i;:::-;26623:72;26691:2;26680:9;26676:18;26667:6;26623:72;:::i;:::-;26705;26773:2;26762:9;26758:18;26749:6;26705:72;:::i;:::-;26787:66;26849:2;26838:9;26834:18;26825:6;26787:66;:::i;:::-;26319:541;;;;;;;:::o;26866:180::-;26914:77;26911:1;26904:88;27011:4;27008:1;27001:15;27035:4;27032:1;27025:15;27052:229;27192:34;27188:1;27180:6;27176:14;27169:58;27261:12;27256:2;27248:6;27244:15;27237:37;27052:229;:::o;27287:366::-;27429:3;27450:67;27514:2;27509:3;27450:67;:::i;:::-;27443:74;;27526:93;27615:3;27526:93;:::i;:::-;27644:2;27639:3;27635:12;27628:19;;27287:366;;;:::o;27659:419::-;27825:4;27863:2;27852:9;27848:18;27840:26;;27912:9;27906:4;27902:20;27898:1;27887:9;27883:17;27876:47;27940:131;28066:4;27940:131;:::i;:::-;27932:139;;27659:419;;;:::o;28084:166::-;28224:18;28220:1;28212:6;28208:14;28201:42;28084:166;:::o;28256:366::-;28398:3;28419:67;28483:2;28478:3;28419:67;:::i;:::-;28412:74;;28495:93;28584:3;28495:93;:::i;:::-;28613:2;28608:3;28604:12;28597:19;;28256:366;;;:::o;28628:419::-;28794:4;28832:2;28821:9;28817:18;28809:26;;28881:9;28875:4;28871:20;28867:1;28856:9;28852:17;28845:47;28909:131;29035:4;28909:131;:::i;:::-;28901:139;;28628:419;;;:::o;29053:191::-;29093:3;29112:20;29130:1;29112:20;:::i;:::-;29107:25;;29146:20;29164:1;29146:20;:::i;:::-;29141:25;;29189:1;29186;29182:9;29175:16;;29210:3;29207:1;29204:10;29201:36;;;29217:18;;:::i;:::-;29201:36;29053:191;;;;:::o;29250:1108::-;29567:4;29605:3;29594:9;29590:19;29582:27;;29619:71;29687:1;29676:9;29672:17;29663:6;29619:71;:::i;:::-;29700:72;29768:2;29757:9;29753:18;29744:6;29700:72;:::i;:::-;29782;29850:2;29839:9;29835:18;29826:6;29782:72;:::i;:::-;29864;29932:2;29921:9;29917:18;29908:6;29864:72;:::i;:::-;29946:73;30014:3;30003:9;29999:19;29990:6;29946:73;:::i;:::-;30029;30097:3;30086:9;30082:19;30073:6;30029:73;:::i;:::-;30112;30180:3;30169:9;30165:19;30156:6;30112:73;:::i;:::-;30195;30263:3;30252:9;30248:19;30239:6;30195:73;:::i;:::-;30278;30346:3;30335:9;30331:19;30322:6;30278:73;:::i;:::-;29250:1108;;;;;;;;;;;;:::o;30364:161::-;30504:13;30500:1;30492:6;30488:14;30481:37;30364:161;:::o;30531:366::-;30673:3;30694:67;30758:2;30753:3;30694:67;:::i;:::-;30687:74;;30770:93;30859:3;30770:93;:::i;:::-;30888:2;30883:3;30879:12;30872:19;;30531:366;;;:::o;30903:419::-;31069:4;31107:2;31096:9;31092:18;31084:26;;31156:9;31150:4;31146:20;31142:1;31131:9;31127:17;31120:47;31184:131;31310:4;31184:131;:::i;:::-;31176:139;;30903:419;;;:::o;31328:382::-;31413:6;31462:3;31450:9;31441:7;31437:23;31433:33;31430:120;;;31469:79;;:::i;:::-;31430:120;31589:1;31614:79;31685:7;31676:6;31665:9;31661:22;31614:79;:::i;:::-;31604:89;;31560:143;31328:382;;;;:::o;31716:164::-;31856:16;31852:1;31844:6;31840:14;31833:40;31716:164;:::o;31886:366::-;32028:3;32049:67;32113:2;32108:3;32049:67;:::i;:::-;32042:74;;32125:93;32214:3;32125:93;:::i;:::-;32243:2;32238:3;32234:12;32227:19;;31886:366;;;:::o;32258:419::-;32424:4;32462:2;32451:9;32447:18;32439:26;;32511:9;32505:4;32501:20;32497:1;32486:9;32482:17;32475:47;32539:131;32665:4;32539:131;:::i;:::-;32531:139;;32258:419;;;:::o;32683:553::-;32860:4;32898:3;32887:9;32883:19;32875:27;;32912:71;32980:1;32969:9;32965:17;32956:6;32912:71;:::i;:::-;32993:72;33061:2;33050:9;33046:18;33037:6;32993:72;:::i;:::-;33075;33143:2;33132:9;33128:18;33119:6;33075:72;:::i;:::-;33157;33225:2;33214:9;33210:18;33201:6;33157:72;:::i;:::-;32683:553;;;;;;;:::o;33266:874::-;33369:3;33406:5;33400:12;33435:36;33461:9;33435:36;:::i;:::-;33487:89;33569:6;33564:3;33487:89;:::i;:::-;33480:96;;33607:1;33596:9;33592:17;33623:1;33618:166;;;;33798:1;33793:341;;;;33585:549;;33618:166;33702:4;33698:9;33687;33683:25;33678:3;33671:38;33764:6;33757:14;33750:22;33742:6;33738:35;33733:3;33729:45;33722:52;;33618:166;;33793:341;33860:38;33892:5;33860:38;:::i;:::-;33920:1;33934:154;33948:6;33945:1;33942:13;33934:154;;;34022:7;34016:14;34012:1;34007:3;34003:11;33996:35;34072:1;34063:7;34059:15;34048:26;;33970:4;33967:1;33963:12;33958:17;;33934:154;;;34117:6;34112:3;34108:16;34101:23;;33800:334;;33585:549;;33373:767;;33266:874;;;;:::o;34146:269::-;34275:3;34297:92;34385:3;34376:6;34297:92;:::i;:::-;34290:99;;34406:3;34399:10;;34146:269;;;;:::o;34421:173::-;34561:25;34557:1;34549:6;34545:14;34538:49;34421:173;:::o;34600:366::-;34742:3;34763:67;34827:2;34822:3;34763:67;:::i;:::-;34756:74;;34839:93;34928:3;34839:93;:::i;:::-;34957:2;34952:3;34948:12;34941:19;;34600:366;;;:::o;34972:419::-;35138:4;35176:2;35165:9;35161:18;35153:26;;35225:9;35219:4;35215:20;35211:1;35200:9;35196:17;35189:47;35253:131;35379:4;35253:131;:::i;:::-;35245:139;;34972:419;;;:::o;35397:165::-;35537:17;35533:1;35525:6;35521:14;35514:41;35397:165;:::o;35568:366::-;35710:3;35731:67;35795:2;35790:3;35731:67;:::i;:::-;35724:74;;35807:93;35896:3;35807:93;:::i;:::-;35925:2;35920:3;35916:12;35909:19;;35568:366;;;:::o;35940:419::-;36106:4;36144:2;36133:9;36129:18;36121:26;;36193:9;36187:4;36183:20;36179:1;36168:9;36164:17;36157:47;36221:131;36347:4;36221:131;:::i;:::-;36213:139;;35940:419;;;:::o;36365:165::-;36505:17;36501:1;36493:6;36489:14;36482:41;36365:165;:::o;36536:366::-;36678:3;36699:67;36763:2;36758:3;36699:67;:::i;:::-;36692:74;;36775:93;36864:3;36775:93;:::i;:::-;36893:2;36888:3;36884:12;36877:19;;36536:366;;;:::o;36908:419::-;37074:4;37112:2;37101:9;37097:18;37089:26;;37161:9;37155:4;37151:20;37147:1;37136:9;37132:17;37125:47;37189:131;37315:4;37189:131;:::i;:::-;37181:139;;36908:419;;;:::o;37333:171::-;37372:3;37395:24;37413:5;37395:24;:::i;:::-;37386:33;;37441:4;37434:5;37431:15;37428:41;;37449:18;;:::i;:::-;37428:41;37496:1;37489:5;37485:13;37478:20;;37333:171;;;:::o;37510:225::-;37650:34;37646:1;37638:6;37634:14;37627:58;37719:8;37714:2;37706:6;37702:15;37695:33;37510:225;:::o;37741:366::-;37883:3;37904:67;37968:2;37963:3;37904:67;:::i;:::-;37897:74;;37980:93;38069:3;37980:93;:::i;:::-;38098:2;38093:3;38089:12;38082:19;;37741:366;;;:::o;38113:419::-;38279:4;38317:2;38306:9;38302:18;38294:26;;38366:9;38360:4;38356:20;38352:1;38341:9;38337:17;38330:47;38394:131;38520:4;38394:131;:::i;:::-;38386:139;;38113:419;;;:::o;38538:182::-;38678:34;38674:1;38666:6;38662:14;38655:58;38538:182;:::o;38726:366::-;38868:3;38889:67;38953:2;38948:3;38889:67;:::i;:::-;38882:74;;38965:93;39054:3;38965:93;:::i;:::-;39083:2;39078:3;39074:12;39067:19;;38726:366;;;:::o;39098:419::-;39264:4;39302:2;39291:9;39287:18;39279:26;;39351:9;39345:4;39341:20;39337:1;39326:9;39322:17;39315:47;39379:131;39505:4;39379:131;:::i;:::-;39371:139;;39098:419;;;:::o;39523:176::-;39663:28;39659:1;39651:6;39647:14;39640:52;39523:176;:::o;39705:366::-;39847:3;39868:67;39932:2;39927:3;39868:67;:::i;:::-;39861:74;;39944:93;40033:3;39944:93;:::i;:::-;40062:2;40057:3;40053:12;40046:19;;39705:366;;;:::o;40077:419::-;40243:4;40281:2;40270:9;40266:18;40258:26;;40330:9;40324:4;40320:20;40316:1;40305:9;40301:17;40294:47;40358:131;40484:4;40358:131;:::i;:::-;40350:139;;40077:419;;;:::o;40502:185::-;40542:1;40559:20;40577:1;40559:20;:::i;:::-;40554:25;;40593:20;40611:1;40593:20;:::i;:::-;40588:25;;40632:1;40622:35;;40637:18;;:::i;:::-;40622:35;40679:1;40676;40672:9;40667:14;;40502:185;;;;:::o;40693:161::-;40833:13;40829:1;40821:6;40817:14;40810:37;40693:161;:::o;40860:366::-;41002:3;41023:67;41087:2;41082:3;41023:67;:::i;:::-;41016:74;;41099:93;41188:3;41099:93;:::i;:::-;41217:2;41212:3;41208:12;41201:19;;40860:366;;;:::o;41232:419::-;41398:4;41436:2;41425:9;41421:18;41413:26;;41485:9;41479:4;41475:20;41471:1;41460:9;41456:17;41449:47;41513:131;41639:4;41513:131;:::i;:::-;41505:139;;41232:419;;;:::o;41657:410::-;41697:7;41720:20;41738:1;41720:20;:::i;:::-;41715:25;;41754:20;41772:1;41754:20;:::i;:::-;41749:25;;41809:1;41806;41802:9;41831:30;41849:11;41831:30;:::i;:::-;41820:41;;42010:1;42001:7;41997:15;41994:1;41991:22;41971:1;41964:9;41944:83;41921:139;;42040:18;;:::i;:::-;41921:139;41705:362;41657:410;;;;:::o;42073:275::-;42205:3;42227:95;42318:3;42309:6;42227:95;:::i;:::-;42220:102;;42339:3;42332:10;;42073:275;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2876200","executionCost":"infinite","totalCost":"infinite"},"external":{"calculateOmega()":"infinite","checkStage()":"infinite","commit(uint256,address)":"infinite","commitDuration()":"2518","commitRevealDuration()":"2452","commitRevealValues(uint256,uint256)":"infinite","commitsString()":"infinite","count()":"2453","owner()":"2633","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"infinite","renounceOwnership()":"30509","reveal(uint256,address)":"infinite","round()":"2519","stage()":"2626","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[],address)":"infinite","startTime()":"2496","transferOwnership(address)":"30854","userInfosAtRound(address,uint256)":"infinite","valuesAtRound(uint256)":"infinite"},"internal":{"equalStage(enum CommitRecover.Stages)":"infinite","nextStage()":"infinite","overStage(enum CommitRecover.Stages)":"infinite"}},"methodIdentifiers":{"calculateOmega()":"12ce9906","checkStage()":"7f93c751","commit(uint256,address)":"0d64b071","commitDuration()":"6f833811","commitRevealDuration()":"73fa4f46","commitRevealValues(uint256,uint256)":"22fadc28","commitsString()":"dca669e4","count()":"06661abd","owner()":"8da5cb5b","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"50d30cbf","renounceOwnership()":"715018a6","reveal(uint256,address)":"bfb70e04","round()":"146ca531","stage()":"c040e6b8","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[],address)":"16f80cd4","startTime()":"78e97925","transferOwnership(address)":"f2fde38b","userInfosAtRound(address,uint256)":"b0e9eb3f","valuesAtRound(uint256)":"77f0ade9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"omega\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"calculatedTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"name\":\"CalculatedOmega\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"commitsString\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitTimestamp\",\"type\":\"uint256\"}],\"name\":\"CommitC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recov\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"omegaRecov\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoveredTimestamp\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealLeftCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealTimestamp\",\"type\":\"uint256\"}],\"name\":\"RevealA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitRevealDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"g\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"Start\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"calculateOmega\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitRevealDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"commitRevealValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"participantAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitsString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum CommitRecover.Stages\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitRevealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"_proofs\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"userInfosAtRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"committed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revealed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"valuesAtRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"omega\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bStar\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numOfParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"g\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAllRevealed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Justin g\",\"kind\":\"dev\",\"methods\":{\"commit(uint256,address)\":{\"params\":{\"_commit\":\"participant's commit value\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])\":{\"params\":{\"proofs\":\"the proof of the recovered value\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reveal(uint256,address)\":{\"params\":{\"_a\":\"participant's reveal value\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Bicorn-RX Commit-Reveal-Recover\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkStage()\":{\"notice\":\"checkStage functionrevert if the current stage is not the given stagethis function is used to check if the current stage is the given stageit will update the stage to the next stage if needed\"},\"commit(uint256,address)\":{\"notice\":\"Commit functionThe participant's commit value must be less than the modulorThe participant can only commit oncecheck period, update stage if needed, revert if not currently at commit stage\"},\"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])\":{\"notice\":\"Recover functionThe recovered value must be less than the modulorrevert if currently at commit stagerevert if count == 0 meaning no one has committedcalculate and finalize omega\"},\"reveal(uint256,address)\":{\"notice\":\"Reveal functionh must be set before revealparticipant must have committedparticipant must not have revealedThe participant's reveal value must match the commit valueThe participant's reveal value must be less than the modulorcheck period, update stage if needed, revert if not currently at reveal stageupdate omega, countif count == 0, update valuesAtRound, stageupdate userInfosAtRound\"},\"start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[],address)\":{\"notice\":\"Start functionThe contract must be in the Finished stageThe commit period must be less than the commit + reveal periodThe g value must be less than the modulorreset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omegaincrease round\"}},\"notice\":\"This contract is for generating random number    1. Commit: participants commit their value    2. Reveal: participants reveal their value    3. Finished: Calculate or recover the random number    4. go to 1\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CommitRecover.sol\":\"CommitRecover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CommitRecover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./libraries/Pietrzak_VDF.sol\\\";\\n//import ownable\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Bicorn-RX Commit-Reveal-Recover\\n * @author Justin g\\n * @notice This contract is for generating random number\\n *    1. Commit: participants commit their value\\n *    2. Reveal: participants reveal their value\\n *    3. Finished: Calculate or recover the random number\\n *    4. go to 1\\n */\\ncontract CommitRecover is Ownable {\\n    /* Type declaration */\\n    /**\\n     * @notice Stages of the contract\\n     * @notice Recover can be performed in the Reveal and Finished stages.\\n     */\\n    enum Stages {\\n        Commit,\\n        Reveal,\\n        Finished\\n    }\\n    struct ValueAtRound {\\n        uint256 omega; // the random number\\n        uint256 bStar; //hash of commitsString\\n        uint256 numOfParticipants; // number of participants\\n        uint256 g; // a value generated from the generator list\\n        uint256 h; // a value generated from the VDF(g)\\n        uint256 n; // modulor\\n        uint256 T;\\n        bool isCompleted; // omega is finalized when this is true\\n        bool isAllRevealed; // true when all participants have revealed\\n    }\\n    struct CommitRevealValue {\\n        uint256 c;\\n        uint256 a;\\n        address participantAddress;\\n    }\\n    struct UserAtRound {\\n        uint256 index; // index of the commitRevealValues\\n        bool committed; // true if committed\\n        bool revealed; // true if revealed\\n    }\\n\\n    /* State variables */\\n    uint256 public startTime;\\n    uint256 public commitDuration;\\n    uint256 public commitRevealDuration; //commit + reveal period, commitRevealDuration - commitDuration => revealDuration\\n    uint256 public count; //This variable is used to keep track of the number of commitments and reveals, and to check if anything has been committed when moving to the reveal stage.\\n    uint256 public round; //first round is 1, second round is 2, ...\\n    string public commitsString; //concatenated string of commits\\n    Stages public stage;\\n    //bool public isHAndBStarSet;\\n    mapping(uint256 round => mapping(uint256 index => CommitRevealValue)) public commitRevealValues; //\\n    mapping(uint256 round => ValueAtRound omega) public valuesAtRound; // 1 => ValueAtRound(omega, isCompleted, ...), 2 => ValueAtRound(omega, isCompleted, ...), ...\\n    mapping(address owner => mapping(uint256 round => UserAtRound user)) public userInfosAtRound;\\n\\n    /* Events */\\n    event CommitC(\\n        address participant,\\n        uint256 commit,\\n        string commitsString,\\n        uint256 commitCount,\\n        uint256 commitTimestamp\\n    );\\n    event RevealA(address participant, uint256 a, uint256 revealLeftCount, uint256 revealTimestamp);\\n    event Recovered(\\n        address msgSender,\\n        uint256 recov,\\n        uint256 omegaRecov,\\n        uint256 recoveredTimestamp\\n    );\\n    event Start(\\n        address msgSender,\\n        uint256 startTime,\\n        uint256 commitDuration,\\n        uint256 commitRevealDuration,\\n        uint256 n,\\n        uint256 g,\\n        uint256 h,\\n        uint256 T,\\n        uint256 round\\n    );\\n    event CalculatedOmega(\\n        uint256 round,\\n        uint256 omega,\\n        uint256 calculatedTimestamp,\\n        bool isCompleted\\n    );\\n\\n    modifier shouldBeLessThanN(uint256 _value) {\\n        require(_value < valuesAtRound[round].n, \\\"GreaterOrEqualThanN\\\");\\n        _;\\n    }\\n\\n    /* Functions */\\n    /**\\n     */\\n    constructor() {\\n        stage = Stages.Finished;\\n    }\\n\\n    /**\\n     * @param _commit participant's commit value\\n     * @notice Commit function\\n     * @notice The participant's commit value must be less than the modulor\\n     * @notice The participant can only commit once\\n     * @notice check period, update stage if needed, revert if not currently at commit stage\\n     */\\n    function commit(\\n        uint256 _commit,\\n        address _userAddress\\n    ) public shouldBeLessThanN(_commit) onlyOwner {\\n        require(!userInfosAtRound[_userAddress][round].committed, \\\"AlreadyCommitted\\\");\\n        checkStage();\\n        equalStage(Stages.Commit);\\n        uint256 _count = count;\\n        string memory _commitsString = commitsString;\\n        _commitsString = string.concat(_commitsString, Pietrzak_VDF.toString(_commit));\\n        userInfosAtRound[_userAddress][round] = UserAtRound(_count, true, false);\\n        commitRevealValues[round][_count] = CommitRevealValue(_commit, 0, _userAddress); //index starts from 0, so _count -1\\n        commitsString = _commitsString;\\n        count = ++_count;\\n        emit CommitC(_userAddress, _commit, _commitsString, _count, block.timestamp);\\n    }\\n\\n    /**\\n     * @param _a participant's reveal value\\n     * @notice Reveal function\\n     * @notice h must be set before reveal\\n     * @notice participant must have committed\\n     * @notice participant must not have revealed\\n     * @notice The participant's reveal value must match the commit value\\n     * @notice The participant's reveal value must be less than the modulor\\n     * @notice check period, update stage if needed, revert if not currently at reveal stage\\n     * @notice update omega, count\\n     * @notice if count == 0, update valuesAtRound, stage\\n     * @notice update userInfosAtRound\\n     */\\n    function reveal(uint256 _a, address _userAddress) public shouldBeLessThanN(_a) {\\n        uint256 _round = round;\\n        UserAtRound memory _user = userInfosAtRound[_userAddress][_round];\\n        require(_user.committed, \\\"NotCommittedParticipant\\\");\\n        require(!_user.revealed, \\\"AlreadyRevealed\\\");\\n        require(\\n            Pietrzak_VDF.powerModN(valuesAtRound[_round].g, _a, valuesAtRound[_round].n) ==\\n                commitRevealValues[_round][_user.index].c,\\n            \\\"ANotMatchCommit\\\"\\n        );\\n        checkStage();\\n        equalStage(Stages.Reveal);\\n        uint256 _count = --count;\\n        commitRevealValues[_round][_user.index].a = _a;\\n        if (_count == 0) {\\n            stage = Stages.Finished;\\n            valuesAtRound[_round].isAllRevealed = true;\\n        }\\n        userInfosAtRound[_userAddress][_round].revealed = true;\\n        emit RevealA(_userAddress, _a, _count, block.timestamp);\\n    }\\n\\n    function calculateOmega() public returns (uint256) {\\n        uint256 _round = round;\\n        require(valuesAtRound[_round].isAllRevealed, \\\"NotAllRevealed\\\");\\n        require(!valuesAtRound[_round].isCompleted, \\\"OmegaAlreadyCompleted\\\");\\n        checkStage();\\n        equalStage(Stages.Finished);\\n        uint256 _numOfParticipants = valuesAtRound[_round].numOfParticipants;\\n        uint256 _omega = 1;\\n        uint256 _bStar = valuesAtRound[_round].bStar;\\n        uint256 _h = valuesAtRound[round].h;\\n        uint256 _n = valuesAtRound[round].n;\\n        bool _isCompleted = true;\\n        for (uint256 i = 0; i < _numOfParticipants; i++) {\\n            _omega = mulmod(\\n                _omega,\\n                Pietrzak_VDF.powerModN(\\n                    Pietrzak_VDF.powerModN(\\n                        _h,\\n                        uint256(\\n                            keccak256(\\n                                abi.encodePacked(\\n                                    Pietrzak_VDF.toString(commitRevealValues[_round][i].c),\\n                                    Pietrzak_VDF.toString(_bStar)\\n                                )\\n                            )\\n                        ) % _n,\\n                        _n\\n                    ),\\n                    commitRevealValues[_round][i].a,\\n                    _n\\n                ),\\n                _n\\n            );\\n        }\\n        valuesAtRound[_round].omega = _omega;\\n        valuesAtRound[_round].isCompleted = _isCompleted; //false when not all participants have revealed\\n        stage = Stages.Finished;\\n        emit CalculatedOmega(_round, _omega, block.timestamp, _isCompleted);\\n        return _omega;\\n    }\\n\\n    /**\\n     * @param proofs the proof of the recovered value\\n     * @notice Recover function\\n     * @notice The recovered value must be less than the modulor\\n     * @notice revert if currently at commit stage\\n     * @notice revert if count == 0 meaning no one has committed\\n     * @notice calculate and finalize omega\\n     */\\n    function recover(\\n        uint256 _round,\\n        Pietrzak_VDF.VDFClaim[] calldata proofs\\n    ) public shouldBeLessThanN(proofs[0].y) {\\n        uint256 recov = 1;\\n        uint256 _n = valuesAtRound[_round].n;\\n        uint256 _bStar = valuesAtRound[_round].bStar;\\n        //require(stage != Stages.Commit, \\\"FunctionInvalidAtThisStage\\\");\\n        checkStage();\\n        overStage(Stages.Commit);\\n        require(!valuesAtRound[_round].isCompleted, \\\"OmegaAlreadyCompleted\\\");\\n        require(valuesAtRound[_round].T == proofs[0].T, \\\"TNotMatched\\\");\\n        Pietrzak_VDF.verifyRecursiveHalvingProof(proofs);\\n        for (uint256 i = 0; i < valuesAtRound[_round].numOfParticipants; i++) {\\n            uint256 _c = commitRevealValues[_round][i].c;\\n            uint256 temp = Pietrzak_VDF.powerModN(\\n                _c,\\n                uint256(\\n                    keccak256(\\n                        abi.encodePacked(Pietrzak_VDF.toString(_c), Pietrzak_VDF.toString(_bStar))\\n                    )\\n                ) % _n,\\n                _n\\n            );\\n            recov = mulmod(recov, temp, _n);\\n        }\\n        require(recov == proofs[0].x, \\\"RecovNotMatchX\\\");\\n        valuesAtRound[_round].isCompleted = true;\\n        valuesAtRound[_round].omega = proofs[0].y;\\n        stage = Stages.Finished;\\n        emit Recovered(msg.sender, recov, proofs[0].y, block.timestamp);\\n    }\\n\\n    /**\\n     *\\n     * @notice Start function\\n     * @notice The contract must be in the Finished stage\\n     * @notice The commit period must be less than the commit + reveal period\\n     * @notice The g value must be less than the modulor\\n     * @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\\n     * @notice increase round\\n     */\\n    function start(\\n        uint256 _commitDuration,\\n        uint256 _commitRevealDuration,\\n        uint256 _n,\\n        Pietrzak_VDF.VDFClaim[] memory _proofs,\\n        address _userAddress\\n    ) public {\\n        require(_proofs[0].x < _n, \\\"GreaterOrEqualThanN\\\");\\n\\n        require(\\n            _commitDuration < _commitRevealDuration,\\n            \\\"CommitRevealDurationLessThanCommitDuration\\\"\\n        );\\n        require(stage == Stages.Finished, \\\"StageNotFinished\\\");\\n        Pietrzak_VDF.verifyRecursiveHalvingProof(_proofs);\\n        round += 1;\\n        stage = Stages.Commit;\\n        startTime = block.timestamp;\\n        commitDuration = _commitDuration;\\n        commitRevealDuration = _commitRevealDuration;\\n        valuesAtRound[round].T = _proofs[0].T;\\n        valuesAtRound[round].g = _proofs[0].x;\\n        valuesAtRound[round].h = _proofs[0].y;\\n        valuesAtRound[round].n = _n;\\n        count = 0;\\n        commitsString = \\\"\\\";\\n        emit Start(\\n            _userAddress,\\n            block.timestamp,\\n            _commitDuration,\\n            _commitRevealDuration,\\n            _n,\\n            _proofs[0].x,\\n            _proofs[0].y,\\n            _proofs[0].T,\\n            round\\n        );\\n    }\\n\\n    /**\\n     * @notice checkStage function\\n     * @notice revert if the current stage is not the given stage\\n     * @notice this function is used to check if the current stage is the given stage\\n     * @notice it will update the stage to the next stage if needed\\n     */\\n    function checkStage() public {\\n        uint256 _startTime = startTime;\\n        if (stage == Stages.Commit && block.timestamp >= _startTime + commitDuration) {\\n            if (count != 0) {\\n                nextStage();\\n                valuesAtRound[round].numOfParticipants = count;\\n                uint256 _bStar = uint256(keccak256(abi.encodePacked(commitsString))) %\\n                    valuesAtRound[round].n;\\n                valuesAtRound[round].bStar = _bStar;\\n            } else {\\n                stage = Stages.Finished;\\n            }\\n        }\\n        if (\\n            stage == Stages.Reveal &&\\n            (block.timestamp >= _startTime + commitRevealDuration || count == 0)\\n        ) {\\n            nextStage();\\n        }\\n    }\\n\\n    function equalStage(Stages _stage) internal view {\\n        require(stage == _stage, \\\"FunctionInvalidAtThisStage\\\");\\n    }\\n\\n    function overStage(Stages _stage) internal view {\\n        require(stage > _stage, \\\"FunctionInvalidAtThisStage\\\");\\n    }\\n\\n    /**\\n     * @notice NextStage function\\n     * @notice update stage to the next stage\\n     * @notice revert if the current stage is Finished\\n     */\\n    function nextStage() internal {\\n        require(stage != Stages.Finished, \\\"AllFinished\\\");\\n        stage = Stages(addmod(uint256(stage), 1, 3));\\n    }\\n}\\n\",\"keccak256\":\"0xf521c2ddb6c243d997375010c6833a07a85646a72b2ff4642286f80ec36d007e\",\"license\":\"MIT\"},\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":180,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"startTime","offset":0,"slot":"1","type":"t_uint256"},{"astId":182,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitDuration","offset":0,"slot":"2","type":"t_uint256"},{"astId":184,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitRevealDuration","offset":0,"slot":"3","type":"t_uint256"},{"astId":186,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"count","offset":0,"slot":"4","type":"t_uint256"},{"astId":188,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"round","offset":0,"slot":"5","type":"t_uint256"},{"astId":190,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitsString","offset":0,"slot":"6","type":"t_string_storage"},{"astId":193,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"stage","offset":0,"slot":"7","type":"t_enum(Stages)145"},{"astId":200,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitRevealValues","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage))"},{"astId":205,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"valuesAtRound","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_struct(ValueAtRound)164_storage)"},{"astId":212,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"userInfosAtRound","offset":0,"slot":"10","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(UserAtRound)178_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(Stages)145":{"encoding":"inplace","label":"enum CommitRecover.Stages","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(UserAtRound)178_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(UserAtRound)178_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage)"},"t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.CommitRevealValue)","numberOfBytes":"32","value":"t_struct(CommitRevealValue)171_storage"},"t_mapping(t_uint256,t_struct(UserAtRound)178_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.UserAtRound)","numberOfBytes":"32","value":"t_struct(UserAtRound)178_storage"},"t_mapping(t_uint256,t_struct(ValueAtRound)164_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.ValueAtRound)","numberOfBytes":"32","value":"t_struct(ValueAtRound)164_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(CommitRevealValue)171_storage":{"encoding":"inplace","label":"struct CommitRecover.CommitRevealValue","members":[{"astId":166,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"c","offset":0,"slot":"0","type":"t_uint256"},{"astId":168,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"a","offset":0,"slot":"1","type":"t_uint256"},{"astId":170,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"participantAddress","offset":0,"slot":"2","type":"t_address"}],"numberOfBytes":"96"},"t_struct(UserAtRound)178_storage":{"encoding":"inplace","label":"struct CommitRecover.UserAtRound","members":[{"astId":173,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"index","offset":0,"slot":"0","type":"t_uint256"},{"astId":175,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"committed","offset":0,"slot":"1","type":"t_bool"},{"astId":177,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"revealed","offset":1,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_struct(ValueAtRound)164_storage":{"encoding":"inplace","label":"struct CommitRecover.ValueAtRound","members":[{"astId":147,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"omega","offset":0,"slot":"0","type":"t_uint256"},{"astId":149,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"bStar","offset":0,"slot":"1","type":"t_uint256"},{"astId":151,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"numOfParticipants","offset":0,"slot":"2","type":"t_uint256"},{"astId":153,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"g","offset":0,"slot":"3","type":"t_uint256"},{"astId":155,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"h","offset":0,"slot":"4","type":"t_uint256"},{"astId":157,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"n","offset":0,"slot":"5","type":"t_uint256"},{"astId":159,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"T","offset":0,"slot":"6","type":"t_uint256"},{"astId":161,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"isCompleted","offset":0,"slot":"7","type":"t_bool"},{"astId":163,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"isAllRevealed","offset":1,"slot":"7","type":"t_bool"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"checkStage()":{"notice":"checkStage functionrevert if the current stage is not the given stagethis function is used to check if the current stage is the given stageit will update the stage to the next stage if needed"},"commit(uint256,address)":{"notice":"Commit functionThe participant's commit value must be less than the modulorThe participant can only commit oncecheck period, update stage if needed, revert if not currently at commit stage"},"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":{"notice":"Recover functionThe recovered value must be less than the modulorrevert if currently at commit stagerevert if count == 0 meaning no one has committedcalculate and finalize omega"},"reveal(uint256,address)":{"notice":"Reveal functionh must be set before revealparticipant must have committedparticipant must not have revealedThe participant's reveal value must match the commit valueThe participant's reveal value must be less than the modulorcheck period, update stage if needed, revert if not currently at reveal stageupdate omega, countif count == 0, update valuesAtRound, stageupdate userInfosAtRound"},"start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[],address)":{"notice":"Start functionThe contract must be in the Finished stageThe commit period must be less than the commit + reveal periodThe g value must be less than the modulorreset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omegaincrease round"}},"notice":"This contract is for generating random number    1. Commit: participants commit their value    2. Reveal: participants reveal their value    3. Finished: Calculate or recover the random number    4. go to 1","version":1}}},"contracts/interfaces/ICommitRecover.sol":{"ICommitRecover":{"abi":[{"inputs":[],"name":"calculateOmega","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkStage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commit","type":"uint256"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_round","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"proofs","type":"tuple[]"}],"name":"recover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitDuration","type":"uint256"},{"internalType":"uint256","name":"_commitRevealDuration","type":"uint256"},{"internalType":"uint256","name":"_n","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"_proofs","type":"tuple[]"}],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"calculateOmega()":"12ce9906","checkStage()":"7f93c751","commit(uint256)":"f4f98ad5","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"50d30cbf","reveal(uint256)":"c2ca0ac5","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])":"a58be661"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"calculateOmega\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commit\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitRevealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"_proofs\",\"type\":\"tuple[]\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICommitRecover.sol\":\"ICommitRecover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICommitRecover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"../libraries/Pietrzak_VDF.sol\\\";\\npragma solidity ^0.8.19;\\n\\ninterface ICommitRecover {\\n    function commit(uint256 _commit) external;\\n\\n    function reveal(uint256 _a) external;\\n\\n    function calculateOmega() external returns (uint256);\\n\\n    function recover(uint256 _round, Pietrzak_VDF.VDFClaim[] calldata proofs) external;\\n\\n    function start(\\n        uint256 _commitDuration,\\n        uint256 _commitRevealDuration,\\n        uint256 _n,\\n        Pietrzak_VDF.VDFClaim[] memory _proofs\\n    ) external;\\n\\n    function checkStage() external;\\n}\\n\",\"keccak256\":\"0xdb5218546071cb45938e6f78a768e4d66cf7a67583977c0ecb8b2102836ca240\",\"license\":\"MIT\"},\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/Pietrzak_VDF.sol":{"Pietrzak_VDF":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e50b4abb639c9c06b3259a10d1a743b62a695aaf774e447582adafc6f9763cf64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E POP 0xB4 0xAB 0xB6 CODECOPY 0xC9 0xC0 PUSH12 0x3259A10D1A743B62A695AAF7 PUSH21 0xE447582ADAFC6F9763CF64736F6C63430008130033 ","sourceMap":"59:4936:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e50b4abb639c9c06b3259a10d1a743b62a695aaf774e447582adafc6f9763cf64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E POP 0xB4 0xAB 0xB6 CODECOPY 0xC9 0xC0 PUSH12 0x3259A10D1A743B62A695AAF7 PUSH21 0xE447582ADAFC6F9763CF64736F6C63430008130033 ","sourceMap":"59:4936:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"log10(uint256)":"infinite","modHash(uint256,string memory)":"infinite","powerModN(uint256,uint256,uint256)":"infinite","processSingleHalvingProof(struct Pietrzak_VDF.VDFClaim memory)":"infinite","toString(uint256)":"infinite","verifyRecursiveHalvingProof(struct Pietrzak_VDF.VDFClaim memory[] memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Pietrzak_VDF.sol\":\"Pietrzak_VDF\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}