{"id":"a6c521000430356c119b73fecc76494c","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/CommitRecover.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"./libraries/Pietrzak_VDF.sol\";\n//import ownable\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Bicorn-RX Commit-Reveal-Recover\n * @author Justin g\n * @notice This contract is for generating random number\n *    1. Commit: participants commit their value\n *    2. Reveal: participants reveal their value\n *    3. Finished: Calculate or recover the random number\n *    4. go to 1\n */\ncontract CommitRecover is Ownable {\n    /* Type declaration */\n    /**\n     * @notice Stages of the contract\n     * @notice Recover can be performed in the Reveal and Finished stages.\n     */\n    enum Stages {\n        Commit,\n        Reveal,\n        Finished\n    }\n    struct ValueAtRound {\n        uint256 omega; // the random number\n        uint256 bStar; //hash of commitsString\n        uint256 numOfParticipants; // number of participants\n        uint256 g; // a value generated from the generator list\n        uint256 h; // a value generated from the VDF(g)\n        uint256 n; // modulor\n        uint256 T;\n        bool isCompleted; // omega is finalized when this is true\n        bool isAllRevealed; // true when all participants have revealed\n    }\n    struct CommitRevealValue {\n        uint256 c;\n        uint256 a;\n        address participantAddress;\n    }\n    struct UserAtRound {\n        uint256 index; // index of the commitRevealValues\n        bool committed; // true if committed\n        bool revealed; // true if revealed\n    }\n\n    /* State variables */\n    uint256 public startTime;\n    uint256 public commitDuration;\n    uint256 public commitRevealDuration; //commit + reveal period, commitRevealDuration - commitDuration => revealDuration\n    uint256 public count; //This variable is used to keep track of the number of commitments and reveals, and to check if anything has been committed when moving to the reveal stage.\n    uint256 public round; //first round is 1, second round is 2, ...\n    string public commitsString; //concatenated string of commits\n    Stages public stage;\n    //bool public isHAndBStarSet;\n    mapping(uint256 round => mapping(uint256 index => CommitRevealValue)) public commitRevealValues; //\n    mapping(uint256 round => ValueAtRound omega) public valuesAtRound; // 1 => ValueAtRound(omega, isCompleted, ...), 2 => ValueAtRound(omega, isCompleted, ...), ...\n    mapping(address owner => mapping(uint256 round => UserAtRound user)) public userInfosAtRound;\n\n    /* Events */\n    event CommitC(\n        address participant,\n        uint256 commit,\n        string commitsString,\n        uint256 commitCount,\n        uint256 commitTimestamp\n    );\n    event RevealA(address participant, uint256 a, uint256 revealLeftCount, uint256 revealTimestamp);\n    event Recovered(\n        address msgSender,\n        uint256 recov,\n        uint256 omegaRecov,\n        uint256 recoveredTimestamp\n    );\n    event Start(\n        address msgSender,\n        uint256 startTime,\n        uint256 commitDuration,\n        uint256 commitRevealDuration,\n        uint256 n,\n        uint256 g,\n        uint256 h,\n        uint256 T,\n        uint256 round\n    );\n    event CalculatedOmega(\n        uint256 round,\n        uint256 omega,\n        uint256 calculatedTimestamp,\n        bool isCompleted\n    );\n\n    modifier shouldBeLessThanN(uint256 _value) {\n        require(_value < valuesAtRound[round].n, \"GreaterOrEqualThanN\");\n        _;\n    }\n\n    /* Functions */\n    /**\n     */\n    constructor() {\n        stage = Stages.Finished;\n    }\n\n    /**\n     * @param _commit participant's commit value\n     * @notice Commit function\n     * @notice The participant's commit value must be less than the modulor\n     * @notice The participant can only commit once\n     * @notice check period, update stage if needed, revert if not currently at commit stage\n     */\n    function commit(uint256 _commit) public shouldBeLessThanN(_commit) onlyOwner {\n        require(!userInfosAtRound[msg.sender][round].committed, \"AlreadyCommitted\");\n        checkStage();\n        equalStage(Stages.Commit);\n        uint256 _count = count;\n        string memory _commitsString = commitsString;\n        _commitsString = string.concat(_commitsString, Pietrzak_VDF.toString(_commit));\n        userInfosAtRound[msg.sender][round] = UserAtRound(_count, true, false);\n        commitRevealValues[round][_count] = CommitRevealValue(_commit, 0, msg.sender); //index starts from 0, so _count -1\n        commitsString = _commitsString;\n        count = ++_count;\n        emit CommitC(msg.sender, _commit, _commitsString, _count, block.timestamp);\n    }\n\n    /**\n     * @param _a participant's reveal value\n     * @notice Reveal function\n     * @notice h must be set before reveal\n     * @notice participant must have committed\n     * @notice participant must not have revealed\n     * @notice The participant's reveal value must match the commit value\n     * @notice The participant's reveal value must be less than the modulor\n     * @notice check period, update stage if needed, revert if not currently at reveal stage\n     * @notice update omega, count\n     * @notice if count == 0, update valuesAtRound, stage\n     * @notice update userInfosAtRound\n     */\n    function reveal(uint256 _a) public shouldBeLessThanN(_a) {\n        uint256 _round = round;\n        UserAtRound memory _user = userInfosAtRound[msg.sender][_round];\n        require(_user.committed, \"NotCommittedParticipant\");\n        require(!_user.revealed, \"AlreadyRevealed\");\n        require(\n            Pietrzak_VDF.powerModN(valuesAtRound[_round].g, _a, valuesAtRound[_round].n) ==\n                commitRevealValues[_round][_user.index].c,\n            \"ANotMatchCommit\"\n        );\n        checkStage();\n        equalStage(Stages.Reveal);\n        uint256 _count = --count;\n        commitRevealValues[_round][_user.index].a = _a;\n        if (_count == 0) {\n            stage = Stages.Finished;\n            valuesAtRound[_round].isAllRevealed = true;\n        }\n        userInfosAtRound[msg.sender][_round].revealed = true;\n        emit RevealA(msg.sender, _a, _count, block.timestamp);\n    }\n\n    function calculateOmega() public returns (uint256) {\n        uint256 _round = round;\n        require(valuesAtRound[_round].isAllRevealed, \"NotAllRevealed\");\n        require(!valuesAtRound[_round].isCompleted, \"OmegaAlreadyCompleted\");\n        checkStage();\n        equalStage(Stages.Finished);\n        uint256 _numOfParticipants = valuesAtRound[_round].numOfParticipants;\n        uint256 _omega = 1;\n        uint256 _bStar = valuesAtRound[_round].bStar;\n        uint256 _h = valuesAtRound[round].h;\n        uint256 _n = valuesAtRound[round].n;\n        bool _isCompleted = true;\n        for (uint256 i = 0; i < _numOfParticipants; i++) {\n            _omega = mulmod(\n                _omega,\n                Pietrzak_VDF.powerModN(\n                    Pietrzak_VDF.powerModN(\n                        _h,\n                        uint256(\n                            keccak256(\n                                abi.encodePacked(\n                                    Pietrzak_VDF.toString(commitRevealValues[_round][i].c),\n                                    Pietrzak_VDF.toString(_bStar)\n                                )\n                            )\n                        ) % _n,\n                        _n\n                    ),\n                    commitRevealValues[_round][i].a,\n                    _n\n                ),\n                _n\n            );\n        }\n        valuesAtRound[_round].omega = _omega;\n        valuesAtRound[_round].isCompleted = _isCompleted; //false when not all participants have revealed\n        stage = Stages.Finished;\n        emit CalculatedOmega(_round, _omega, block.timestamp, _isCompleted);\n        return _omega;\n    }\n\n    /**\n     * @param proofs the proof of the recovered value\n     * @notice Recover function\n     * @notice The recovered value must be less than the modulor\n     * @notice revert if currently at commit stage\n     * @notice revert if count == 0 meaning no one has committed\n     * @notice calculate and finalize omega\n     */\n    function recover(\n        uint256 _round,\n        Pietrzak_VDF.VDFClaim[] calldata proofs\n    ) public shouldBeLessThanN(proofs[0].y) {\n        uint256 recov = 1;\n        uint256 _n = valuesAtRound[_round].n;\n        uint256 _bStar = valuesAtRound[_round].bStar;\n        //require(stage != Stages.Commit, \"FunctionInvalidAtThisStage\");\n        checkStage();\n        overStage(Stages.Commit);\n        require(!valuesAtRound[_round].isCompleted, \"OmegaAlreadyCompleted\");\n        require(valuesAtRound[_round].T == proofs[0].T, \"TNotMatched\");\n        Pietrzak_VDF.verifyRecursiveHalvingProof(proofs);\n        for (uint256 i = 0; i < valuesAtRound[_round].numOfParticipants; i++) {\n            uint256 _c = commitRevealValues[_round][i].c;\n            uint256 temp = Pietrzak_VDF.powerModN(\n                _c,\n                uint256(\n                    keccak256(\n                        abi.encodePacked(Pietrzak_VDF.toString(_c), Pietrzak_VDF.toString(_bStar))\n                    )\n                ) % _n,\n                _n\n            );\n            recov = mulmod(recov, temp, _n);\n        }\n        require(recov == proofs[0].x, \"RecovNotMatchX\");\n        valuesAtRound[_round].isCompleted = true;\n        valuesAtRound[_round].omega = proofs[0].y;\n        stage = Stages.Finished;\n        emit Recovered(msg.sender, recov, proofs[0].y, block.timestamp);\n    }\n\n    /**\n     *\n     * @notice Start function\n     * @notice The contract must be in the Finished stage\n     * @notice The commit period must be less than the commit + reveal period\n     * @notice The g value must be less than the modulor\n     * @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\n     * @notice increase round\n     */\n    function start(\n        uint256 _commitDuration,\n        uint256 _commitRevealDuration,\n        uint256 _n,\n        Pietrzak_VDF.VDFClaim[] memory _proofs\n    ) public {\n        require(_proofs[0].x < _n, \"GreaterOrEqualThanN\");\n\n        require(\n            _commitDuration < _commitRevealDuration,\n            \"CommitRevealDurationLessThanCommitDuration\"\n        );\n        require(stage == Stages.Finished, \"StageNotFinished\");\n        Pietrzak_VDF.verifyRecursiveHalvingProof(_proofs);\n        round += 1;\n        stage = Stages.Commit;\n        startTime = block.timestamp;\n        commitDuration = _commitDuration;\n        commitRevealDuration = _commitRevealDuration;\n        valuesAtRound[round].T = _proofs[0].T;\n        valuesAtRound[round].g = _proofs[0].x;\n        valuesAtRound[round].h = _proofs[0].y;\n        valuesAtRound[round].n = _n;\n        count = 0;\n        commitsString = \"\";\n        emit Start(\n            msg.sender,\n            block.timestamp,\n            _commitDuration,\n            _commitRevealDuration,\n            _n,\n            _proofs[0].x,\n            _proofs[0].y,\n            _proofs[0].T,\n            round\n        );\n    }\n\n    /**\n     * @notice checkStage function\n     * @notice revert if the current stage is not the given stage\n     * @notice this function is used to check if the current stage is the given stage\n     * @notice it will update the stage to the next stage if needed\n     */\n    function checkStage() public {\n        uint256 _startTime = startTime;\n        if (stage == Stages.Commit && block.timestamp >= _startTime + commitDuration) {\n            if (count != 0) {\n                nextStage();\n                valuesAtRound[round].numOfParticipants = count;\n                uint256 _bStar = uint256(keccak256(abi.encodePacked(commitsString))) %\n                    valuesAtRound[round].n;\n                valuesAtRound[round].bStar = _bStar;\n            } else {\n                stage = Stages.Finished;\n            }\n        }\n        if (\n            stage == Stages.Reveal &&\n            (block.timestamp >= _startTime + commitRevealDuration || count == 0)\n        ) {\n            nextStage();\n        }\n    }\n\n    function equalStage(Stages _stage) internal view {\n        require(stage == _stage, \"FunctionInvalidAtThisStage\");\n    }\n\n    function overStage(Stages _stage) internal view {\n        require(stage > _stage, \"FunctionInvalidAtThisStage\");\n    }\n\n    /**\n     * @notice NextStage function\n     * @notice update stage to the next stage\n     * @notice revert if the current stage is Finished\n     */\n    function nextStage() internal {\n        require(stage != Stages.Finished, \"AllFinished\");\n        stage = Stages(addmod(uint256(stage), 1, 3));\n    }\n}\n"},"contracts/interfaces/ICommitRecover.sol":{"content":"// SPDX-License-Identifier: MIT\nimport \"../libraries/Pietrzak_VDF.sol\";\npragma solidity ^0.8.19;\n\ninterface ICommitRecover {\n    function commit(uint256 _commit) external;\n\n    function reveal(uint256 _a) external;\n\n    function calculateOmega() external returns (uint256);\n\n    function recover(uint256 _round, Pietrzak_VDF.VDFClaim[] calldata proofs) external;\n\n    function start(\n        uint256 _commitDuration,\n        uint256 _commitRevealDuration,\n        uint256 _n,\n        Pietrzak_VDF.VDFClaim[] memory _proofs\n    ) external;\n\n    function checkStage() external;\n}\n"},"contracts/libraries/Pietrzak_VDF.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nlibrary Pietrzak_VDF {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n\n    struct VDFClaim {\n        uint256 n;\n        uint256 x;\n        uint256 y;\n        uint256 T;\n        uint256 v;\n    }\n\n    struct SingHalvProofOutput {\n        bool verified;\n        bool calculated;\n        uint256 x_prime;\n        uint256 y_prime;\n        uint256 T_half;\n    }\n\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\n    }\n\n    function processSingleHalvingProof(\n        VDFClaim memory vdfClaim\n    ) internal pure returns (SingHalvProofOutput memory) {\n        if (vdfClaim.T == 1) {\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\n                return SingHalvProofOutput(true, false, 0, 0, 0);\n            } else {\n                return SingHalvProofOutput(false, false, 0, 0, 0);\n            }\n        } else {\n            uint256 tHalf;\n            uint256 y = vdfClaim.y;\n            uint256 r = modHash(\n                vdfClaim.x,\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\n            );\n\n            if (vdfClaim.T & 1 == 0) {\n                tHalf = vdfClaim.T / 2;\n            } else {\n                tHalf = (vdfClaim.T + 1) / 2;\n                y = (y * y) % vdfClaim.n;\n            }\n            return\n                SingHalvProofOutput(\n                    true,\n                    true,\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\n                    tHalf\n                );\n        }\n    }\n\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\n        uint256 proofSize = proofList.length;\n\n        for (uint256 i = 0; i < proofSize; i++) {\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\n            if (!output.verified) {\n                return false;\n            } else {\n                if (!output.calculated) return true;\n                else if (output.x_prime != proofList[i + 1].x) return false;\n                else if (output.y_prime != proofList[i + 1].y) return false;\n                else if (output.T_half != proofList[i + 1].T) return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param a base value\n     * @param b exponent value\n     * @return result of a^b mod N\n     * @notice powerModN function\n     * @notice calculate a^b mod N\n     * @notice O(log b) complexity\n     */\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\n        uint256 result = 1;\n        while (b > 0) {\n            if (b & 1 == 1) {\n                result = mulmod(result, a, n);\n            }\n            a = mulmod(a, a, n);\n            b = b / 2;\n        }\n        return result;\n    }\n\n    /**\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[134],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":135,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,134],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"111:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":134,"linearizedBaseContracts":[134],"name":"Context","nameLocation":"626:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"702:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:1","memberName":"sender","nodeType":"MemberAccess","src":"719:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"712:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"659:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"693:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:1"},"scope":134,"src":"640:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"809:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:1","memberName":"data","nodeType":"MemberAccess","src":"826:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"819:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"759:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"793:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:1"},"scope":134,"src":"742:99:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":135,"src":"608:235:1","usedErrors":[]}],"src":"86:758:1"},"id":1},"contracts/CommitRecover.sol":{"ast":{"absolutePath":"contracts/CommitRecover.sol","exportedSymbols":{"CommitRecover":[1125],"Context":[134],"Ownable":[112],"Pietrzak_VDF":[1676]},"id":1126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:2"},{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","file":"./libraries/Pietrzak_VDF.sol","id":137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":1677,"src":"59:38:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":113,"src":"115:52:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":140,"name":"Ownable","nameLocations":["495:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"495:7:2"},"id":141,"nodeType":"InheritanceSpecifier","src":"495:7:2"}],"canonicalName":"CommitRecover","contractDependencies":[],"contractKind":"contract","documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"169:299:2","text":" @title Bicorn-RX Commit-Reveal-Recover\n @author Justin g\n @notice This contract is for generating random number\n    1. Commit: participants commit their value\n    2. Reveal: participants reveal their value\n    3. Finished: Calculate or recover the random number\n    4. go to 1"},"fullyImplemented":true,"id":1125,"linearizedBaseContracts":[1125,112,134],"name":"CommitRecover","nameLocation":"478:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CommitRecover.Stages","id":145,"members":[{"id":142,"name":"Commit","nameLocation":"687:6:2","nodeType":"EnumValue","src":"687:6:2"},{"id":143,"name":"Reveal","nameLocation":"703:6:2","nodeType":"EnumValue","src":"703:6:2"},{"id":144,"name":"Finished","nameLocation":"719:8:2","nodeType":"EnumValue","src":"719:8:2"}],"name":"Stages","nameLocation":"670:6:2","nodeType":"EnumDefinition","src":"665:68:2"},{"canonicalName":"CommitRecover.ValueAtRound","id":164,"members":[{"constant":false,"id":147,"mutability":"mutable","name":"omega","nameLocation":"776:5:2","nodeType":"VariableDeclaration","scope":164,"src":"768:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"bStar","nameLocation":"820:5:2","nodeType":"VariableDeclaration","scope":164,"src":"812:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"numOfParticipants","nameLocation":"867:17:2","nodeType":"VariableDeclaration","scope":164,"src":"859:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"g","nameLocation":"928:1:2","nodeType":"VariableDeclaration","scope":164,"src":"920:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"h","nameLocation":"992:1:2","nodeType":"VariableDeclaration","scope":164,"src":"984:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"n","nameLocation":"1048:1:2","nodeType":"VariableDeclaration","scope":164,"src":"1040:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1040:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"T","nameLocation":"1078:1:2","nodeType":"VariableDeclaration","scope":164,"src":"1070:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"isCompleted","nameLocation":"1094:11:2","nodeType":"VariableDeclaration","scope":164,"src":"1089:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":160,"name":"bool","nodeType":"ElementaryTypeName","src":"1089:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"isAllRevealed","nameLocation":"1160:13:2","nodeType":"VariableDeclaration","scope":164,"src":"1155:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"1155:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ValueAtRound","nameLocation":"745:12:2","nodeType":"StructDefinition","scope":1125,"src":"738:486:2","visibility":"public"},{"canonicalName":"CommitRecover.CommitRevealValue","id":171,"members":[{"constant":false,"id":166,"mutability":"mutable","name":"c","nameLocation":"1272:1:2","nodeType":"VariableDeclaration","scope":171,"src":"1264:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1264:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"a","nameLocation":"1291:1:2","nodeType":"VariableDeclaration","scope":171,"src":"1283:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"participantAddress","nameLocation":"1310:18:2","nodeType":"VariableDeclaration","scope":171,"src":"1302:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CommitRevealValue","nameLocation":"1236:17:2","nodeType":"StructDefinition","scope":1125,"src":"1229:106:2","visibility":"public"},{"canonicalName":"CommitRecover.UserAtRound","id":178,"members":[{"constant":false,"id":173,"mutability":"mutable","name":"index","nameLocation":"1377:5:2","nodeType":"VariableDeclaration","scope":178,"src":"1369:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"committed","nameLocation":"1432:9:2","nodeType":"VariableDeclaration","scope":178,"src":"1427:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"1427:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"revealed","nameLocation":"1477:8:2","nodeType":"VariableDeclaration","scope":178,"src":"1472:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":176,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"UserAtRound","nameLocation":"1347:11:2","nodeType":"StructDefinition","scope":1125,"src":"1340:172:2","visibility":"public"},{"constant":false,"functionSelector":"78e97925","id":180,"mutability":"mutable","name":"startTime","nameLocation":"1559:9:2","nodeType":"VariableDeclaration","scope":1125,"src":"1544:24:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6f833811","id":182,"mutability":"mutable","name":"commitDuration","nameLocation":"1589:14:2","nodeType":"VariableDeclaration","scope":1125,"src":"1574:29:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"73fa4f46","id":184,"mutability":"mutable","name":"commitRevealDuration","nameLocation":"1624:20:2","nodeType":"VariableDeclaration","scope":1125,"src":"1609:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"06661abd","id":186,"mutability":"mutable","name":"count","nameLocation":"1747:5:2","nodeType":"VariableDeclaration","scope":1125,"src":"1732:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"146ca531","id":188,"mutability":"mutable","name":"round","nameLocation":"1930:5:2","nodeType":"VariableDeclaration","scope":1125,"src":"1915:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1915:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dca669e4","id":190,"mutability":"mutable","name":"commitsString","nameLocation":"1998:13:2","nodeType":"VariableDeclaration","scope":1125,"src":"1984:27:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":189,"name":"string","nodeType":"ElementaryTypeName","src":"1984:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"c040e6b8","id":193,"mutability":"mutable","name":"stage","nameLocation":"2064:5:2","nodeType":"VariableDeclaration","scope":1125,"src":"2050:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":192,"nodeType":"UserDefinedTypeName","pathNode":{"id":191,"name":"Stages","nameLocations":["2050:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"2050:6:2"},"referencedDeclaration":145,"src":"2050:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"public"},{"constant":false,"functionSelector":"22fadc28","id":200,"mutability":"mutable","name":"commitRevealValues","nameLocation":"2186:18:2","nodeType":"VariableDeclaration","scope":1125,"src":"2109:95:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))"},"typeName":{"id":199,"keyName":"round","keyNameLocation":"2125:5:2","keyType":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2109:69:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":198,"keyName":"index","keyNameLocation":"2150:5:2","keyType":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2134:43:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":197,"nodeType":"UserDefinedTypeName","pathNode":{"id":196,"name":"CommitRevealValue","nameLocations":["2159:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":171,"src":"2159:17:2"},"referencedDeclaration":171,"src":"2159:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage_ptr","typeString":"struct CommitRecover.CommitRevealValue"}}}},"visibility":"public"},{"constant":false,"functionSelector":"77f0ade9","id":205,"mutability":"mutable","name":"valuesAtRound","nameLocation":"2265:13:2","nodeType":"VariableDeclaration","scope":1125,"src":"2213:65:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound)"},"typeName":{"id":204,"keyName":"round","keyNameLocation":"2229:5:2","keyType":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2213:44:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound)"},"valueName":"omega","valueNameLocation":"2251:5:2","valueType":{"id":203,"nodeType":"UserDefinedTypeName","pathNode":{"id":202,"name":"ValueAtRound","nameLocations":["2238:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":164,"src":"2238:12:2"},"referencedDeclaration":164,"src":"2238:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage_ptr","typeString":"struct CommitRecover.ValueAtRound"}}},"visibility":"public"},{"constant":false,"functionSelector":"b0e9eb3f","id":212,"mutability":"mutable","name":"userInfosAtRound","nameLocation":"2455:16:2","nodeType":"VariableDeclaration","scope":1125,"src":"2379:92:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))"},"typeName":{"id":211,"keyName":"owner","keyNameLocation":"2395:5:2","keyType":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2379:68:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":210,"keyName":"round","keyNameLocation":"2420:5:2","keyType":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2404:42:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound)"},"valueName":"user","valueNameLocation":"2441:4:2","valueType":{"id":209,"nodeType":"UserDefinedTypeName","pathNode":{"id":208,"name":"UserAtRound","nameLocations":["2429:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"2429:11:2"},"referencedDeclaration":178,"src":"2429:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage_ptr","typeString":"struct CommitRecover.UserAtRound"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"bd41a700367cdf3254812a81baad606f9d6102e946f1bb28aab0a4afe25ef0c9","id":224,"name":"CommitC","nameLocation":"2501:7:2","nodeType":"EventDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"participant","nameLocation":"2526:11:2","nodeType":"VariableDeclaration","scope":224,"src":"2518:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"2518:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"commit","nameLocation":"2555:6:2","nodeType":"VariableDeclaration","scope":224,"src":"2547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"commitsString","nameLocation":"2578:13:2","nodeType":"VariableDeclaration","scope":224,"src":"2571:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"2571:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"commitCount","nameLocation":"2609:11:2","nodeType":"VariableDeclaration","scope":224,"src":"2601:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"indexed":false,"mutability":"mutable","name":"commitTimestamp","nameLocation":"2638:15:2","nodeType":"VariableDeclaration","scope":224,"src":"2630:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2508:151:2"},"src":"2495:165:2"},{"anonymous":false,"eventSelector":"0167147e5476fb37532a0aab79dea3eb6b8fe0fbd723ac6025b0de29237b0496","id":234,"name":"RevealA","nameLocation":"2671:7:2","nodeType":"EventDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"indexed":false,"mutability":"mutable","name":"participant","nameLocation":"2687:11:2","nodeType":"VariableDeclaration","scope":234,"src":"2679:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"indexed":false,"mutability":"mutable","name":"a","nameLocation":"2708:1:2","nodeType":"VariableDeclaration","scope":234,"src":"2700:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"indexed":false,"mutability":"mutable","name":"revealLeftCount","nameLocation":"2719:15:2","nodeType":"VariableDeclaration","scope":234,"src":"2711:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2711:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"indexed":false,"mutability":"mutable","name":"revealTimestamp","nameLocation":"2744:15:2","nodeType":"VariableDeclaration","scope":234,"src":"2736:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2736:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:82:2"},"src":"2665:96:2"},{"anonymous":false,"eventSelector":"03fc2d4f2e2e4e84069307a4d3a9b7ad25d93e2026627031a87b54a1c61907ce","id":244,"name":"Recovered","nameLocation":"2772:9:2","nodeType":"EventDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"indexed":false,"mutability":"mutable","name":"msgSender","nameLocation":"2799:9:2","nodeType":"VariableDeclaration","scope":244,"src":"2791:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"2791:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"indexed":false,"mutability":"mutable","name":"recov","nameLocation":"2826:5:2","nodeType":"VariableDeclaration","scope":244,"src":"2818:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"indexed":false,"mutability":"mutable","name":"omegaRecov","nameLocation":"2849:10:2","nodeType":"VariableDeclaration","scope":244,"src":"2841:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2841:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"recoveredTimestamp","nameLocation":"2877:18:2","nodeType":"VariableDeclaration","scope":244,"src":"2869:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2781:120:2"},"src":"2766:136:2"},{"anonymous":false,"eventSelector":"1a5e4fa05b9601af979a44c50ef7e103b9b51cd105eb42040b5817eb3e58449c","id":264,"name":"Start","nameLocation":"2913:5:2","nodeType":"EventDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"indexed":false,"mutability":"mutable","name":"msgSender","nameLocation":"2936:9:2","nodeType":"VariableDeclaration","scope":264,"src":"2928:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"2928:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2963:9:2","nodeType":"VariableDeclaration","scope":264,"src":"2955:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"commitDuration","nameLocation":"2990:14:2","nodeType":"VariableDeclaration","scope":264,"src":"2982:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"commitRevealDuration","nameLocation":"3022:20:2","nodeType":"VariableDeclaration","scope":264,"src":"3014:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3014:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":false,"mutability":"mutable","name":"n","nameLocation":"3060:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3052:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"g","nameLocation":"3079:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3071:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3071:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"indexed":false,"mutability":"mutable","name":"h","nameLocation":"3098:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3090:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":false,"mutability":"mutable","name":"T","nameLocation":"3117:1:2","nodeType":"VariableDeclaration","scope":264,"src":"3109:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3109:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"3136:5:2","nodeType":"VariableDeclaration","scope":264,"src":"3128:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2918:229:2"},"src":"2907:241:2"},{"anonymous":false,"eventSelector":"31d4d513959d79380d7f8af557ac2408b4d6c2cf59af943dd997a11100520f66","id":274,"name":"CalculatedOmega","nameLocation":"3159:15:2","nodeType":"EventDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"indexed":false,"mutability":"mutable","name":"round","nameLocation":"3192:5:2","nodeType":"VariableDeclaration","scope":274,"src":"3184:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3184:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":268,"indexed":false,"mutability":"mutable","name":"omega","nameLocation":"3215:5:2","nodeType":"VariableDeclaration","scope":274,"src":"3207:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"indexed":false,"mutability":"mutable","name":"calculatedTimestamp","nameLocation":"3238:19:2","nodeType":"VariableDeclaration","scope":274,"src":"3230:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"indexed":false,"mutability":"mutable","name":"isCompleted","nameLocation":"3272:11:2","nodeType":"VariableDeclaration","scope":274,"src":"3267:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":271,"name":"bool","nodeType":"ElementaryTypeName","src":"3267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3174:115:2"},"src":"3153:137:2"},{"body":{"id":289,"nodeType":"Block","src":"3339:91:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3357:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":280,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"3366:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":282,"indexExpression":{"id":281,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3380:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3366:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3387:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"3366:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3357:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"477265617465724f72457175616c5468616e4e","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3390:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""},"value":"GreaterOrEqualThanN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3349:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"3349:63:2"},{"id":288,"nodeType":"PlaceholderStatement","src":"3422:1:2"}]},"id":290,"name":"shouldBeLessThanN","nameLocation":"3305:17:2","nodeType":"ModifierDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"_value","nameLocation":"3331:6:2","nodeType":"VariableDeclaration","scope":290,"src":"3323:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3323:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3322:16:2"},"src":"3296:134:2","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"3486:40:2","statements":[{"expression":{"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":293,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3496:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":294,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"3504:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3511:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"3504:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"3496:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":297,"nodeType":"ExpressionStatement","src":"3496:23:2"}]},"id":299,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"3483:2:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"3486:0:2"},"scope":1125,"src":"3472:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":395,"nodeType":"Block","src":"3926:676:2","statements":[{"expression":{"arguments":[{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3944:46:2","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":311,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"3945:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":314,"indexExpression":{"expression":{"id":312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3962:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3966:6:2","memberName":"sender","nodeType":"MemberAccess","src":"3962:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3945:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":316,"indexExpression":{"id":315,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3974:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3945:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:9:2","memberName":"committed","nodeType":"MemberAccess","referencedDeclaration":175,"src":"3945:45:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479436f6d6d6974746564","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3992:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","typeString":"literal_string \"AlreadyCommitted\""},"value":"AlreadyCommitted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","typeString":"literal_string \"AlreadyCommitted\""}],"id":310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3936:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3936:75:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"ExpressionStatement","src":"3936:75:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"4021:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4021:12:2"},{"expression":{"arguments":[{"expression":{"id":326,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"4054:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4061:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"4054:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":325,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"4043:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":329,"nodeType":"ExpressionStatement","src":"4043:25:2"},{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"_count","nameLocation":"4086:6:2","nodeType":"VariableDeclaration","scope":395,"src":"4078:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"4078:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":333,"initialValue":{"id":332,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4095:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4078:22:2"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"_commitsString","nameLocation":"4124:14:2","nodeType":"VariableDeclaration","scope":395,"src":"4110:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":334,"name":"string","nodeType":"ElementaryTypeName","src":"4110:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":337,"initialValue":{"id":336,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4141:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4110:44:2"},{"expression":{"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":338,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4164:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":342,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4195:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":345,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":343,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"4211:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4224:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"4211:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4181:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"4181:6:2","typeDescriptions":{}}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4188:6:2","memberName":"concat","nodeType":"MemberAccess","src":"4181:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4181:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4164:78:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":349,"nodeType":"ExpressionStatement","src":"4164:78:2"},{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":350,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"4252:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":354,"indexExpression":{"expression":{"id":351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4269:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4273:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4269:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4252:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":355,"indexExpression":{"id":353,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4281:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4252:35:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":357,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4302:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4310:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4316:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":356,"name":"UserAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"4290:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserAtRound_$178_storage_ptr_$","typeString":"type(struct CommitRecover.UserAtRound storage pointer)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4290:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"src":"4252:70:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":362,"nodeType":"ExpressionStatement","src":"4252:70:2"},{"expression":{"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":363,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"4332:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":366,"indexExpression":{"id":364,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"4351:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4332:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":367,"indexExpression":{"id":365,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4358:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4332:33:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":369,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4386:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4398:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4402:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"}],"id":368,"name":"CommitRevealValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"4368:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CommitRevealValue_$171_storage_ptr_$","typeString":"type(struct CommitRecover.CommitRevealValue storage pointer)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_memory_ptr","typeString":"struct CommitRecover.CommitRevealValue memory"}},"src":"4332:77:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":375,"nodeType":"ExpressionStatement","src":"4332:77:2"},{"expression":{"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":376,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"4455:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":377,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4471:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4455:30:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":379,"nodeType":"ExpressionStatement","src":"4455:30:2"},{"expression":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":380,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4495:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4503:8:2","subExpression":{"id":381,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4505:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4495:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":384,"nodeType":"ExpressionStatement","src":"4495:16:2"},{"eventCall":{"arguments":[{"expression":{"id":386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4534:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4538:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4534:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":388,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4546:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":389,"name":"_commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4555:14:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":390,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"4571:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4579:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4585:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"4579:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":385,"name":"CommitC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4526:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,uint256)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"EmitStatement","src":"4521:74:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3532:312:2","text":" @param _commit participant's commit value\n @notice Commit function\n @notice The participant's commit value must be less than the modulor\n @notice The participant can only commit once\n @notice check period, update stage if needed, revert if not currently at commit stage"},"functionSelector":"f4f98ad5","id":396,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":305,"name":"_commit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"3907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":306,"kind":"modifierInvocation","modifierName":{"id":304,"name":"shouldBeLessThanN","nameLocations":["3889:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"3889:17:2"},"nodeType":"ModifierInvocation","src":"3889:26:2"},{"id":308,"kind":"modifierInvocation","modifierName":{"id":307,"name":"onlyOwner","nameLocations":["3916:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3916:9:2"},"nodeType":"ModifierInvocation","src":"3916:9:2"}],"name":"commit","nameLocation":"3858:6:2","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"_commit","nameLocation":"3873:7:2","nodeType":"VariableDeclaration","scope":396,"src":"3865:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3865:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3864:17:2"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"3926:0:2"},"scope":1125,"src":"3849:753:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"5271:837:2","statements":[{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"_round","nameLocation":"5289:6:2","nodeType":"VariableDeclaration","scope":515,"src":"5281:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":408,"initialValue":{"id":407,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"5298:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5281:22:2"},{"assignments":[411],"declarations":[{"constant":false,"id":411,"mutability":"mutable","name":"_user","nameLocation":"5332:5:2","nodeType":"VariableDeclaration","scope":515,"src":"5313:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound"},"typeName":{"id":410,"nodeType":"UserDefinedTypeName","pathNode":{"id":409,"name":"UserAtRound","nameLocations":["5313:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":178,"src":"5313:11:2"},"referencedDeclaration":178,"src":"5313:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage_ptr","typeString":"struct CommitRecover.UserAtRound"}},"visibility":"internal"}],"id":418,"initialValue":{"baseExpression":{"baseExpression":{"id":412,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5340:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":415,"indexExpression":{"expression":{"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5357:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:2","memberName":"sender","nodeType":"MemberAccess","src":"5357:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5340:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":417,"indexExpression":{"id":416,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5369:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5340:36:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5313:63:2"},{"expression":{"arguments":[{"expression":{"id":420,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5394:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5400:9:2","memberName":"committed","nodeType":"MemberAccess","referencedDeclaration":175,"src":"5394:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74436f6d6d69747465645061727469636970616e74","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5411:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","typeString":"literal_string \"NotCommittedParticipant\""},"value":"NotCommittedParticipant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","typeString":"literal_string \"NotCommittedParticipant\""}],"id":419,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5386:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5386:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"ExpressionStatement","src":"5386:51:2"},{"expression":{"arguments":[{"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:15:2","subExpression":{"expression":{"id":426,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5456:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5462:8:2","memberName":"revealed","nodeType":"MemberAccess","referencedDeclaration":177,"src":"5456:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647952657665616c6564","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5472:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","typeString":"literal_string \"AlreadyRevealed\""},"value":"AlreadyRevealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","typeString":"literal_string \"AlreadyRevealed\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"5447:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"baseExpression":{"id":435,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5544:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":437,"indexExpression":{"id":436,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5558:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5544:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5566:1:2","memberName":"g","nodeType":"MemberAccess","referencedDeclaration":153,"src":"5544:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":439,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5569:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":440,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5573:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":442,"indexExpression":{"id":441,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5587:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5573:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5595:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"5573:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":433,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"5521:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5534:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"5521:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5521:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":445,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5617:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":447,"indexExpression":{"id":446,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5636:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5617:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":450,"indexExpression":{"expression":{"id":448,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5644:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5650:5:2","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":173,"src":"5644:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5617:39:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5657:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"5617:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5521:137:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"414e6f744d61746368436f6d6d6974","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5672:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","typeString":"literal_string \"ANotMatchCommit\""},"value":"ANotMatchCommit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","typeString":"literal_string \"ANotMatchCommit\""}],"id":432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5500:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:199:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"5500:199:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"5709:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5709:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"ExpressionStatement","src":"5709:12:2"},{"expression":{"arguments":[{"expression":{"id":460,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"5742:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5749:6:2","memberName":"Reveal","nodeType":"MemberAccess","referencedDeclaration":143,"src":"5742:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":459,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"5731:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5731:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"5731:25:2"},{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"_count","nameLocation":"5774:6:2","nodeType":"VariableDeclaration","scope":515,"src":"5766:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5766:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":468,"initialValue":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"5783:7:2","subExpression":{"id":466,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5785:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5766:24:2"},{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":469,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"5800:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":473,"indexExpression":{"id":470,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5819:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5800:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":474,"indexExpression":{"expression":{"id":471,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5827:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_memory_ptr","typeString":"struct CommitRecover.UserAtRound memory"}},"id":472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5833:5:2","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":173,"src":"5827:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5800:39:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5840:1:2","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":168,"src":"5800:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":476,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5844:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5800:46:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"5800:46:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5860:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5860:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":495,"nodeType":"IfStatement","src":"5856:121:2","trueBody":{"id":494,"nodeType":"Block","src":"5873:104:2","statements":[{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":482,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5887:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":483,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"5895:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5902:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"5895:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"5887:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":486,"nodeType":"ExpressionStatement","src":"5887:23:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":487,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"5924:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":489,"indexExpression":{"id":488,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5938:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5924:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5946:13:2","memberName":"isAllRevealed","nodeType":"MemberAccess","referencedDeclaration":163,"src":"5924:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5962:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5924:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"ExpressionStatement","src":"5924:42:2"}]}},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":496,"name":"userInfosAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"5986:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound storage ref))"}},"id":500,"indexExpression":{"expression":{"id":497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6003:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6007:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6003:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5986:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_UserAtRound_$178_storage_$","typeString":"mapping(uint256 => struct CommitRecover.UserAtRound storage ref)"}},"id":501,"indexExpression":{"id":499,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6015:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5986:36:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserAtRound_$178_storage","typeString":"struct CommitRecover.UserAtRound storage ref"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6023:8:2","memberName":"revealed","nodeType":"MemberAccess","referencedDeclaration":177,"src":"5986:45:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6034:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5986:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"ExpressionStatement","src":"5986:52:2"},{"eventCall":{"arguments":[{"expression":{"id":507,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6061:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6065:6:2","memberName":"sender","nodeType":"MemberAccess","src":"6061:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":509,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6073:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":510,"name":"_count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6077:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":511,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6085:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6091:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6085:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"RevealA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"6053:7:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6053:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"EmitStatement","src":"6048:53:2"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"4608:601:2","text":" @param _a participant's reveal value\n @notice Reveal function\n @notice h must be set before reveal\n @notice participant must have committed\n @notice participant must not have revealed\n @notice The participant's reveal value must match the commit value\n @notice The participant's reveal value must be less than the modulor\n @notice check period, update stage if needed, revert if not currently at reveal stage\n @notice update omega, count\n @notice if count == 0, update valuesAtRound, stage\n @notice update userInfosAtRound"},"functionSelector":"c2ca0ac5","id":516,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":402,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5267:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":403,"kind":"modifierInvocation","modifierName":{"id":401,"name":"shouldBeLessThanN","nameLocations":["5249:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"5249:17:2"},"nodeType":"ModifierInvocation","src":"5249:21:2"}],"name":"reveal","nameLocation":"5223:6:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"_a","nameLocation":"5238:2:2","nodeType":"VariableDeclaration","scope":516,"src":"5230:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5229:12:2"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"5271:0:2"},"scope":1125,"src":"5214:894:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":672,"nodeType":"Block","src":"6165:1606:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"_round","nameLocation":"6183:6:2","nodeType":"VariableDeclaration","scope":672,"src":"6175:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"6175:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":524,"initialValue":{"id":523,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6192:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6175:22:2"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":526,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6215:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":528,"indexExpression":{"id":527,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6229:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6215:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6237:13:2","memberName":"isAllRevealed","nodeType":"MemberAccess","referencedDeclaration":163,"src":"6215:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74416c6c52657665616c6564","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6252:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","typeString":"literal_string \"NotAllRevealed\""},"value":"NotAllRevealed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","typeString":"literal_string \"NotAllRevealed\""}],"id":525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6207:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6207:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"6207:62:2"},{"expression":{"arguments":[{"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6287:34:2","subExpression":{"expression":{"baseExpression":{"id":534,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6288:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":536,"indexExpression":{"id":535,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6302:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6310:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"6288:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6323:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""},"value":"OmegaAlreadyCompleted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6279:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"6279:68:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6357:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6357:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"6357:12:2"},{"expression":{"arguments":[{"expression":{"id":546,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"6390:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6397:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"6390:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":545,"name":"equalStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6379:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"6379:27:2"},{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"_numOfParticipants","nameLocation":"6424:18:2","nodeType":"VariableDeclaration","scope":672,"src":"6416:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6416:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":556,"initialValue":{"expression":{"baseExpression":{"id":552,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6445:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":554,"indexExpression":{"id":553,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6459:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6445:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6467:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"6445:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6416:68:2"},{"assignments":[558],"declarations":[{"constant":false,"id":558,"mutability":"mutable","name":"_omega","nameLocation":"6502:6:2","nodeType":"VariableDeclaration","scope":672,"src":"6494:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":560,"initialValue":{"hexValue":"31","id":559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6511:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6494:18:2"},{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"_bStar","nameLocation":"6530:6:2","nodeType":"VariableDeclaration","scope":672,"src":"6522:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":567,"initialValue":{"expression":{"baseExpression":{"id":563,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6539:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":565,"indexExpression":{"id":564,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"6553:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6539:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6561:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"6539:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6522:44:2"},{"assignments":[569],"declarations":[{"constant":false,"id":569,"mutability":"mutable","name":"_h","nameLocation":"6584:2:2","nodeType":"VariableDeclaration","scope":672,"src":"6576:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":574,"initialValue":{"expression":{"baseExpression":{"id":570,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6589:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":572,"indexExpression":{"id":571,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6589:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6610:1:2","memberName":"h","nodeType":"MemberAccess","referencedDeclaration":155,"src":"6589:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6576:35:2"},{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"_n","nameLocation":"6629:2:2","nodeType":"VariableDeclaration","scope":672,"src":"6621:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":581,"initialValue":{"expression":{"baseExpression":{"id":577,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"6634:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":579,"indexExpression":{"id":578,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"6648:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6634:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6655:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"6634:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6621:35:2"},{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"_isCompleted","nameLocation":"6671:12:2","nodeType":"VariableDeclaration","scope":672,"src":"6666:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":582,"name":"bool","nodeType":"ElementaryTypeName","src":"6666:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":585,"initialValue":{"hexValue":"74727565","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6686:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"6666:24:2"},{"body":{"id":641,"nodeType":"Block","src":"6749:731:2","statements":[{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6763:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":598,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6796:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":603,"name":"_h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"6912:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"baseExpression":{"baseExpression":{"id":611,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7096:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":613,"indexExpression":{"id":612,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7115:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7096:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":615,"indexExpression":{"id":614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7123:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7096:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7126:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"7096:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":609,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"7074:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7087:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"7074:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":620,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7188:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":618,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"7166:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7179:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"7166:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7166:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":607,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7020:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7024:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"7020:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:209:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":606,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6977:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6977:282:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6940:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6940:345:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":625,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"7288:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6940:350:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"7316:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":601,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6864:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6877:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"6864:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:476:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"baseExpression":{"id":629,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7362:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":631,"indexExpression":{"id":630,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7381:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7362:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":633,"indexExpression":{"id":632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7389:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7362:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7392:1:2","memberName":"a","nodeType":"MemberAccess","referencedDeclaration":168,"src":"7362:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":635,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"7415:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":599,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6820:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6833:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"6820:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6820:615:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":637,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"7453:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":597,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6772:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6772:697:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6763:706:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"6763:706:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6720:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":591,"name":"_numOfParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6724:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6720:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":642,"initializationExpression":{"assignments":[587],"declarations":[{"constant":false,"id":587,"mutability":"mutable","name":"i","nameLocation":"6713:1:2","nodeType":"VariableDeclaration","scope":642,"src":"6705:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"6705:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":589,"initialValue":{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6717:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6705:13:2"},"loopExpression":{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6744:3:2","subExpression":{"id":593,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6744:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"6744:3:2"},"nodeType":"ForStatement","src":"6700:780:2"},{"expression":{"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":643,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"7489:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":645,"indexExpression":{"id":644,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7503:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7489:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7511:5:2","memberName":"omega","nodeType":"MemberAccess","referencedDeclaration":147,"src":"7489:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":647,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7519:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7489:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":649,"nodeType":"ExpressionStatement","src":"7489:36:2"},{"expression":{"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":650,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"7535:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":652,"indexExpression":{"id":651,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7549:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7535:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7557:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"7535:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":654,"name":"_isCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7571:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7535:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"ExpressionStatement","src":"7535:48:2"},{"expression":{"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":657,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7641:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":658,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"7649:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7656:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"7649:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"7641:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":661,"nodeType":"ExpressionStatement","src":"7641:23:2"},{"eventCall":{"arguments":[{"id":663,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"7695:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":664,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7703:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":665,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7711:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7717:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"7711:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":667,"name":"_isCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"7728:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":662,"name":"CalculatedOmega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"7679:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint256,bool)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"EmitStatement","src":"7674:67:2"},{"expression":{"id":670,"name":"_omega","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7758:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":520,"id":671,"nodeType":"Return","src":"7751:13:2"}]},"functionSelector":"12ce9906","id":673,"implemented":true,"kind":"function","modifiers":[],"name":"calculateOmega","nameLocation":"6123:14:2","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"6137:2:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":673,"src":"6156:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6155:9:2"},"scope":1125,"src":"6114:1657:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":845,"nodeType":"Block","src":"8238:1234:2","statements":[{"assignments":[690],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"recov","nameLocation":"8256:5:2","nodeType":"VariableDeclaration","scope":845,"src":"8248:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"8248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":692,"initialValue":{"hexValue":"31","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8264:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"8248:17:2"},{"assignments":[694],"declarations":[{"constant":false,"id":694,"mutability":"mutable","name":"_n","nameLocation":"8283:2:2","nodeType":"VariableDeclaration","scope":845,"src":"8275:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8275:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":699,"initialValue":{"expression":{"baseExpression":{"id":695,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8288:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":697,"indexExpression":{"id":696,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8302:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8288:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8310:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"8288:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8275:36:2"},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"_bStar","nameLocation":"8329:6:2","nodeType":"VariableDeclaration","scope":845,"src":"8321:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"expression":{"baseExpression":{"id":702,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8338:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":704,"indexExpression":{"id":703,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8352:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8338:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8360:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"8338:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8321:44:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"checkStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"8448:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8448:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"8448:12:2"},{"expression":{"arguments":[{"expression":{"id":711,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"8480:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8487:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"8480:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":710,"name":"overStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"8470:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_Stages_$145_$returns$__$","typeString":"function (enum CommitRecover.Stages) view"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"ExpressionStatement","src":"8470:24:2"},{"expression":{"arguments":[{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8512:34:2","subExpression":{"expression":{"baseExpression":{"id":716,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8513:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":718,"indexExpression":{"id":717,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8527:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8513:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8535:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"8513:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8548:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""},"value":"OmegaAlreadyCompleted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","typeString":"literal_string \"OmegaAlreadyCompleted\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8504:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8504:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"8504:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":725,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8590:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":727,"indexExpression":{"id":726,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8604:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8590:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8612:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":159,"src":"8590:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":729,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8617:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":731,"indexExpression":{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8624:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8617:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8627:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"8617:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8590:38:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"544e6f744d617463686564","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8630:13:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","typeString":"literal_string \"TNotMatched\""},"value":"TNotMatched"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","typeString":"literal_string \"TNotMatched\""}],"id":724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8582:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8582:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"8582:62:2"},{"expression":{"arguments":[{"id":740,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8695:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}],"expression":{"id":737,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8654:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8667:27:2","memberName":"verifyRecursiveHalvingProof","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"8654:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory[] memory) pure returns (bool)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8654:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":742,"nodeType":"ExpressionStatement","src":"8654:48:2"},{"body":{"id":799,"nodeType":"Block","src":"8782:420:2","statements":[{"assignments":[757],"declarations":[{"constant":false,"id":757,"mutability":"mutable","name":"_c","nameLocation":"8804:2:2","nodeType":"VariableDeclaration","scope":799,"src":"8796:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"8796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":764,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":758,"name":"commitRevealValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"8809:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref))"}},"id":760,"indexExpression":{"id":759,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8828:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8809:26:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CommitRevealValue_$171_storage_$","typeString":"mapping(uint256 => struct CommitRecover.CommitRevealValue storage ref)"}},"id":762,"indexExpression":{"id":761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"8836:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8809:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_CommitRevealValue_$171_storage","typeString":"struct CommitRecover.CommitRevealValue storage ref"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8839:1:2","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":166,"src":"8809:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8796:44:2"},{"assignments":[766],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"temp","nameLocation":"8862:4:2","nodeType":"VariableDeclaration","scope":799,"src":"8854:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"8854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":790,"initialValue":{"arguments":[{"id":769,"name":"_c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8909:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":777,"name":"_c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"9032:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":775,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"9010:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9023:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"9010:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":781,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"9059:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":779,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"9037:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9050:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1546,"src":"9037:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9037:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":773,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8993:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8997:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"8993:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":772,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8958:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:131:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8929:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"8929:7:2","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:178:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":786,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9110:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8929:183:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":788,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9130:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":767,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8869:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8882:9:2","memberName":"powerModN","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"8869:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:277:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8854:292:2"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":791,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"9160:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":793,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"9175:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":794,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"9182:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":795,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9188:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":792,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9168:6:2","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9168:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9160:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":798,"nodeType":"ExpressionStatement","src":"9160:31:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"8732:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":748,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"8736:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":750,"indexExpression":{"id":749,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8750:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8736:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8758:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"8736:39:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8732:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":800,"initializationExpression":{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"i","nameLocation":"8725:1:2","nodeType":"VariableDeclaration","scope":800,"src":"8717:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"8717:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":746,"initialValue":{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8729:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8717:13:2"},"loopExpression":{"expression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8777:3:2","subExpression":{"id":753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"8777:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":755,"nodeType":"ExpressionStatement","src":"8777:3:2"},"nodeType":"ForStatement","src":"8712:490:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"9219:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":803,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9228:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":805,"indexExpression":{"hexValue":"30","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9235:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9228:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9238:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"9228:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9219:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265636f764e6f744d6174636858","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9241:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","typeString":"literal_string \"RecovNotMatchX\""},"value":"RecovNotMatchX"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","typeString":"literal_string \"RecovNotMatchX\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9211:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9211:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"9211:47:2"},{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":811,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9268:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":813,"indexExpression":{"id":812,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"9282:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9268:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9290:11:2","memberName":"isCompleted","nodeType":"MemberAccess","referencedDeclaration":161,"src":"9268:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9304:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9268:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":817,"nodeType":"ExpressionStatement","src":"9268:40:2"},{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":818,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"9318:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":820,"indexExpression":{"id":819,"name":"_round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"9332:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9318:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9340:5:2","memberName":"omega","nodeType":"MemberAccess","referencedDeclaration":147,"src":"9318:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":822,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9348:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":824,"indexExpression":{"hexValue":"30","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9355:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9348:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9358:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"9348:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9318:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":827,"nodeType":"ExpressionStatement","src":"9318:41:2"},{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":828,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"9369:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":829,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"9377:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9384:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"9377:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"9369:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":832,"nodeType":"ExpressionStatement","src":"9369:23:2"},{"eventCall":{"arguments":[{"expression":{"id":834,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9417:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9421:6:2","memberName":"sender","nodeType":"MemberAccess","src":"9417:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"recov","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"9429:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":837,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"9436:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":839,"indexExpression":{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9443:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9436:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9446:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"9436:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":841,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9449:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9455:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"9449:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"Recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"9407:9:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9407:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"EmitStatement","src":"9402:63:2"}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"7777:322:2","text":" @param proofs the proof of the recovered value\n @notice Recover function\n @notice The recovered value must be less than the modulor\n @notice revert if currently at commit stage\n @notice revert if count == 0 meaning no one has committed\n @notice calculate and finalize omega"},"functionSelector":"50d30cbf","id":846,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"baseExpression":{"id":683,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8225:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata[] calldata"}},"id":685,"indexExpression":{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8225:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim calldata"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8235:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"8225:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":687,"kind":"modifierInvocation","modifierName":{"id":682,"name":"shouldBeLessThanN","nameLocations":["8207:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":290,"src":"8207:17:2"},"nodeType":"ModifierInvocation","src":"8207:30:2"}],"name":"recover","nameLocation":"8113:7:2","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"_round","nameLocation":"8138:6:2","nodeType":"VariableDeclaration","scope":846,"src":"8130:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"8130:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"proofs","nameLocation":"8187:6:2","nodeType":"VariableDeclaration","scope":846,"src":"8154:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["8154:12:2","8167:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"8154:21:2"},"referencedDeclaration":1185,"src":"8154:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":679,"nodeType":"ArrayTypeName","src":"8154:23:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"8120:79:2"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"8238:0:2"},"scope":1125,"src":"8104:1368:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":981,"nodeType":"Block","src":"10049:996:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":861,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10067:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":863,"indexExpression":{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10067:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10078:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"10067:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":865,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10082:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10067:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"477265617465724f72457175616c5468616e4e","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10086:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""},"value":"GreaterOrEqualThanN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","typeString":"literal_string \"GreaterOrEqualThanN\""}],"id":860,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10059:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10059:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"ExpressionStatement","src":"10059:49:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10140:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":872,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10158:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10140:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d6d697452657665616c4475726174696f6e4c6573735468616e436f6d6d69744475726174696f6e","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10193:44:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","typeString":"literal_string \"CommitRevealDurationLessThanCommitDuration\""},"value":"CommitRevealDurationLessThanCommitDuration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","typeString":"literal_string \"CommitRevealDurationLessThanCommitDuration\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10119:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10119:128:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"10119:128:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"10265:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":879,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"10274:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10281:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"10274:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"10265:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746167654e6f7446696e6973686564","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10291:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","typeString":"literal_string \"StageNotFinished\""},"value":"StageNotFinished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","typeString":"literal_string \"StageNotFinished\""}],"id":877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10257:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"10257:53:2"},{"expression":{"arguments":[{"id":888,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10361:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}],"expression":{"id":885,"name":"Pietrzak_VDF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"10320:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Pietrzak_VDF_$1676_$","typeString":"type(library Pietrzak_VDF)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10333:27:2","memberName":"verifyRecursiveHalvingProof","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"10320:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory[] memory) pure returns (bool)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10320:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"nodeType":"ExpressionStatement","src":"10320:49:2"},{"expression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":891,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10379:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10379:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":894,"nodeType":"ExpressionStatement","src":"10379:10:2"},{"expression":{"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"10399:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":896,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"10407:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10414:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"10407:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"10399:21:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":899,"nodeType":"ExpressionStatement","src":"10399:21:2"},{"expression":{"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":900,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"10430:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":901,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10442:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"10442:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10430:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":904,"nodeType":"ExpressionStatement","src":"10430:27:2"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":905,"name":"commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"10467:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10484:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10467:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ExpressionStatement","src":"10467:32:2"},{"expression":{"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":909,"name":"commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"10509:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":910,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10532:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10509:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"nodeType":"ExpressionStatement","src":"10509:44:2"},{"expression":{"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":913,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10563:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":915,"indexExpression":{"id":914,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10577:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10563:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10584:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":159,"src":"10563:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":917,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10588:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":919,"indexExpression":{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10596:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10588:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10599:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"10588:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10563:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":922,"nodeType":"ExpressionStatement","src":"10563:37:2"},{"expression":{"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":923,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10610:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":925,"indexExpression":{"id":924,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10624:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10610:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10631:1:2","memberName":"g","nodeType":"MemberAccess","referencedDeclaration":153,"src":"10610:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":927,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10635:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":929,"indexExpression":{"hexValue":"30","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10643:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10635:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10646:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"10635:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10610:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ExpressionStatement","src":"10610:37:2"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":933,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10657:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":935,"indexExpression":{"id":934,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10671:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10657:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10678:1:2","memberName":"h","nodeType":"MemberAccess","referencedDeclaration":155,"src":"10657:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":937,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10682:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":939,"indexExpression":{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10690:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10682:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10693:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"10682:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10657:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"10657:37:2"},{"expression":{"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":943,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"10704:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":945,"indexExpression":{"id":944,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10718:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10704:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10725:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"10704:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":947,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10729:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10704:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":949,"nodeType":"ExpressionStatement","src":"10704:27:2"},{"expression":{"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":950,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"10741:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10749:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10741:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":953,"nodeType":"ExpressionStatement","src":"10741:9:2"},{"expression":{"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":954,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"10760:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10776:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"10760:18:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":957,"nodeType":"ExpressionStatement","src":"10760:18:2"},{"eventCall":{"arguments":[{"expression":{"id":959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10812:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10816:6:2","memberName":"sender","nodeType":"MemberAccess","src":"10812:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":961,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10836:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10842:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"10836:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":963,"name":"_commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10865:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":964,"name":"_commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10894:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":965,"name":"_n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"10929:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":966,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10945:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":968,"indexExpression":{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10953:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10945:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10956:1:2","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"10945:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":970,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10971:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":972,"indexExpression":{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10979:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10971:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10982:1:2","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"10971:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":974,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10997:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":976,"indexExpression":{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11005:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10997:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11008:1:2","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"10997:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":978,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11023:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"name":"Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"10793:5:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:245:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"EmitStatement","src":"10788:250:2"}]},"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"9478:398:2","text":" @notice Start function\n @notice The contract must be in the Finished stage\n @notice The commit period must be less than the commit + reveal period\n @notice The g value must be less than the modulor\n @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\n @notice increase round"},"functionSelector":"a58be661","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"start","nameLocation":"9890:5:2","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"_commitDuration","nameLocation":"9913:15:2","nodeType":"VariableDeclaration","scope":982,"src":"9905:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"9905:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"_commitRevealDuration","nameLocation":"9946:21:2","nodeType":"VariableDeclaration","scope":982,"src":"9938:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"9938:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"_n","nameLocation":"9985:2:2","nodeType":"VariableDeclaration","scope":982,"src":"9977:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9977:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"_proofs","nameLocation":"10028:7:2","nodeType":"VariableDeclaration","scope":982,"src":"9997:38:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":855,"nodeType":"UserDefinedTypeName","pathNode":{"id":854,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["9997:12:2","10010:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"9997:21:2"},"referencedDeclaration":1185,"src":"9997:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":856,"nodeType":"ArrayTypeName","src":"9997:23:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"9895:146:2"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"10049:0:2"},"scope":1125,"src":"9881:1164:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1069,"nodeType":"Block","src":"11351:707:2","statements":[{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"_startTime","nameLocation":"11369:10:2","nodeType":"VariableDeclaration","scope":1069,"src":"11361:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"id":988,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"11382:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11361:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11405:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":991,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"11414:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11421:6:2","memberName":"Commit","nodeType":"MemberAccess","referencedDeclaration":142,"src":"11414:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"11405:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":994,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11431:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11437:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"11431:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11450:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":997,"name":"commitDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"11463:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11450:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11431:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11405:72:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1047,"nodeType":"IfStatement","src":"11401:472:2","trueBody":{"id":1046,"nodeType":"Block","src":"11479:394:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"11497:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11497:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1044,"nodeType":"Block","src":"11807:56:2","statements":[{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1039,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11825:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1040,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"11833:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11840:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"11833:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"11825:23:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":1043,"nodeType":"ExpressionStatement","src":"11825:23:2"}]},"id":1045,"nodeType":"IfStatement","src":"11493:370:2","trueBody":{"id":1038,"nodeType":"Block","src":"11509:292:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1004,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"11527:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11527:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"11527:11:2"},{"expression":{"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1007,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11556:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1009,"indexExpression":{"id":1008,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11570:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11556:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11577:17:2","memberName":"numOfParticipants","nodeType":"MemberAccess","referencedDeclaration":151,"src":"11556:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1011,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"11597:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11556:46:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1013,"nodeType":"ExpressionStatement","src":"11556:46:2"},{"assignments":[1015],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"_bStar","nameLocation":"11628:6:2","nodeType":"VariableDeclaration","scope":1038,"src":"11620:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11620:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1021,"name":"commitsString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"11672:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":1019,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11655:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11659:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"11655:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11645:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11645:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11637:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"11637:7:2","typeDescriptions":{}}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11637:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"baseExpression":{"id":1025,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11711:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1027,"indexExpression":{"id":1026,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11725:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11711:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11732:1:2","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":157,"src":"11711:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11637:96:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11620:113:2"},{"expression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1031,"name":"valuesAtRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"11751:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ValueAtRound_$164_storage_$","typeString":"mapping(uint256 => struct CommitRecover.ValueAtRound storage ref)"}},"id":1033,"indexExpression":{"id":1032,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"11765:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11751:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_ValueAtRound_$164_storage","typeString":"struct CommitRecover.ValueAtRound storage ref"}},"id":1034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11772:5:2","memberName":"bStar","nodeType":"MemberAccess","referencedDeclaration":149,"src":"11751:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1035,"name":"_bStar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"11780:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11751:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1037,"nodeType":"ExpressionStatement","src":"11751:35:2"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11899:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1049,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"11908:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11915:6:2","memberName":"Reveal","nodeType":"MemberAccess","referencedDeclaration":143,"src":"11908:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"11899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1052,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11938:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11944:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"11938:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11957:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1055,"name":"commitRevealDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"11970:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11938:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"11994:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11938:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11937:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11899:106:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"11882:170:2","trueBody":{"id":1067,"nodeType":"Block","src":"12016:36:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1064,"name":"nextStage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"12030:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12030:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"12030:11:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11051:266:2","text":" @notice checkStage function\n @notice revert if the current stage is not the given stage\n @notice this function is used to check if the current stage is the given stage\n @notice it will update the stage to the next stage if needed"},"functionSelector":"7f93c751","id":1070,"implemented":true,"kind":"function","modifiers":[],"name":"checkStage","nameLocation":"11331:10:2","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"11341:2:2"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"11351:0:2"},"scope":1125,"src":"11322:736:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1083,"nodeType":"Block","src":"12113:71:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12131:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1078,"name":"_stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"12140:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12131:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12148:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""},"value":"FunctionInvalidAtThisStage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""}],"id":1076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12123:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12123:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"12123:54:2"}]},"id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"equalStage","nameLocation":"12073:10:2","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"_stage","nameLocation":"12091:6:2","nodeType":"VariableDeclaration","scope":1084,"src":"12084:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":1072,"nodeType":"UserDefinedTypeName","pathNode":{"id":1071,"name":"Stages","nameLocations":["12084:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"12084:6:2"},"referencedDeclaration":145,"src":"12084:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"internal"}],"src":"12083:15:2"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[],"src":"12113:0:2"},"scope":1125,"src":"12064:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"12238:70:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12256:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1092,"name":"_stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12264:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12256:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12272:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""},"value":"FunctionInvalidAtThisStage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","typeString":"literal_string \"FunctionInvalidAtThisStage\""}],"id":1090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"12248:53:2"}]},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"overStage","nameLocation":"12199:9:2","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"_stage","nameLocation":"12216:6:2","nodeType":"VariableDeclaration","scope":1098,"src":"12209:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"typeName":{"id":1086,"nodeType":"UserDefinedTypeName","pathNode":{"id":1085,"name":"Stages","nameLocations":["12209:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":145,"src":"12209:6:2"},"referencedDeclaration":145,"src":"12209:6:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"visibility":"internal"}],"src":"12208:15:2"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"12238:0:2"},"scope":1125,"src":"12190:118:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"12495:119:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1103,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12513:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1104,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12522:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12529:8:2","memberName":"Finished","nodeType":"MemberAccess","referencedDeclaration":144,"src":"12522:15:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12513:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c46696e6973686564","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12539:13:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","typeString":"literal_string \"AllFinished\""},"value":"AllFinished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","typeString":"literal_string \"AllFinished\""}],"id":1102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12505:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12505:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"12505:48:2"},{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1110,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12563:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1115,"name":"stage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"12593:5:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12585:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"12585:7:2","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12585:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"33","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12604:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1112,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"12578:6:2","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12578:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"Stages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12571:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Stages_$145_$","typeString":"type(enum CommitRecover.Stages)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12571:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"src":"12563:44:2","typeDescriptions":{"typeIdentifier":"t_enum$_Stages_$145","typeString":"enum CommitRecover.Stages"}},"id":1122,"nodeType":"ExpressionStatement","src":"12563:44:2"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"12314:146:2","text":" @notice NextStage function\n @notice update stage to the next stage\n @notice revert if the current stage is Finished"},"id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"nextStage","nameLocation":"12474:9:2","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"12483:2:2"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"12495:0:2"},"scope":1125,"src":"12465:149:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1126,"src":"469:12147:2","usedErrors":[]}],"src":"33:12584:2"},"id":2},"contracts/interfaces/ICommitRecover.sol":{"ast":{"absolutePath":"contracts/interfaces/ICommitRecover.sol","exportedSymbols":{"ICommitRecover":[1169],"Pietrzak_VDF":[1676]},"id":1170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","file":"../libraries/Pietrzak_VDF.sol","id":1127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1170,"sourceUnit":1677,"src":"32:39:3","symbolAliases":[],"unitAlias":""},{"id":1128,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"72:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ICommitRecover","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1169,"linearizedBaseContracts":[1169],"name":"ICommitRecover","nameLocation":"108:14:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f4f98ad5","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"commit","nameLocation":"138:6:3","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"_commit","nameLocation":"153:7:3","nodeType":"VariableDeclaration","scope":1133,"src":"145:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"145:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"144:17:3"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"170:0:3"},"scope":1169,"src":"129:42:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c2ca0ac5","id":1138,"implemented":false,"kind":"function","modifiers":[],"name":"reveal","nameLocation":"186:6:3","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"_a","nameLocation":"201:2:3","nodeType":"VariableDeclaration","scope":1138,"src":"193:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"193:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:12:3"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"213:0:3"},"scope":1169,"src":"177:37:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"12ce9906","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"calculateOmega","nameLocation":"229:14:3","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"243:2:3"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"264:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"263:9:3"},"scope":1169,"src":"220:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"50d30cbf","id":1152,"implemented":false,"kind":"function","modifiers":[],"name":"recover","nameLocation":"288:7:3","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"_round","nameLocation":"304:6:3","nodeType":"VariableDeclaration","scope":1152,"src":"296:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"proofs","nameLocation":"345:6:3","nodeType":"VariableDeclaration","scope":1152,"src":"312:39:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1147,"nodeType":"UserDefinedTypeName","pathNode":{"id":1146,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["312:12:3","325:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"312:21:3"},"referencedDeclaration":1185,"src":"312:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1148,"nodeType":"ArrayTypeName","src":"312:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"295:57:3"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"361:0:3"},"scope":1169,"src":"279:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a58be661","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"start","nameLocation":"377:5:3","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"_commitDuration","nameLocation":"400:15:3","nodeType":"VariableDeclaration","scope":1165,"src":"392:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"392:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"_commitRevealDuration","nameLocation":"433:21:3","nodeType":"VariableDeclaration","scope":1165,"src":"425:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"_n","nameLocation":"472:2:3","nodeType":"VariableDeclaration","scope":1165,"src":"464:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"464:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"_proofs","nameLocation":"515:7:3","nodeType":"VariableDeclaration","scope":1165,"src":"484:38:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1160,"nodeType":"UserDefinedTypeName","pathNode":{"id":1159,"name":"Pietrzak_VDF.VDFClaim","nameLocations":["484:12:3","497:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"484:21:3"},"referencedDeclaration":1185,"src":"484:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1161,"nodeType":"ArrayTypeName","src":"484:23:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"382:146:3"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"537:0:3"},"scope":1169,"src":"368:170:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7f93c751","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"checkStage","nameLocation":"553:10:3","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[],"src":"563:2:3"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"574:0:3"},"scope":1169,"src":"544:31:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1170,"src":"98:479:3","usedErrors":[]}],"src":"32:546:3"},"id":3},"contracts/libraries/Pietrzak_VDF.sol":{"ast":{"absolutePath":"contracts/libraries/Pietrzak_VDF.sol","exportedSymbols":{"Pietrzak_VDF":[1676]},"id":1677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1171,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Pietrzak_VDF","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1676,"linearizedBaseContracts":[1676],"name":"Pietrzak_VDF","nameLocation":"67:12:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1174,"mutability":"constant","name":"_SYMBOLS","nameLocation":"111:8:4","nodeType":"VariableDeclaration","scope":1676,"src":"86:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1172,"name":"bytes16","nodeType":"ElementaryTypeName","src":"86:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"122:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"canonicalName":"Pietrzak_VDF.VDFClaim","id":1185,"members":[{"constant":false,"id":1176,"mutability":"mutable","name":"n","nameLocation":"181:1:4","nodeType":"VariableDeclaration","scope":1185,"src":"173:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"x","nameLocation":"200:1:4","nodeType":"VariableDeclaration","scope":1185,"src":"192:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"y","nameLocation":"219:1:4","nodeType":"VariableDeclaration","scope":1185,"src":"211:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"T","nameLocation":"238:1:4","nodeType":"VariableDeclaration","scope":1185,"src":"230:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"v","nameLocation":"257:1:4","nodeType":"VariableDeclaration","scope":1185,"src":"249:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VDFClaim","nameLocation":"154:8:4","nodeType":"StructDefinition","scope":1676,"src":"147:118:4","visibility":"public"},{"canonicalName":"Pietrzak_VDF.SingHalvProofOutput","id":1196,"members":[{"constant":false,"id":1187,"mutability":"mutable","name":"verified","nameLocation":"313:8:4","nodeType":"VariableDeclaration","scope":1196,"src":"308:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1186,"name":"bool","nodeType":"ElementaryTypeName","src":"308:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"calculated","nameLocation":"336:10:4","nodeType":"VariableDeclaration","scope":1196,"src":"331:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1188,"name":"bool","nodeType":"ElementaryTypeName","src":"331:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"x_prime","nameLocation":"364:7:4","nodeType":"VariableDeclaration","scope":1196,"src":"356:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"y_prime","nameLocation":"389:7:4","nodeType":"VariableDeclaration","scope":1196,"src":"381:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"T_half","nameLocation":"414:6:4","nodeType":"VariableDeclaration","scope":1196,"src":"406:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SingHalvProofOutput","nameLocation":"278:19:4","nodeType":"StructDefinition","scope":1676,"src":"271:156:4","visibility":"public"},{"body":{"id":1217,"nodeType":"Block","src":"516:73:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1210,"name":"strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"568:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1208,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"551:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"555:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"551:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1207,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"541:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"541:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"533:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:4","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"533:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1214,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"581:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"533:49:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1204,"id":1216,"nodeType":"Return","src":"526:56:4"}]},"id":1218,"implemented":true,"kind":"function","modifiers":[],"name":"modHash","nameLocation":"442:7:4","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"n","nameLocation":"458:1:4","nodeType":"VariableDeclaration","scope":1218,"src":"450:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"strings","nameLocation":"475:7:4","nodeType":"VariableDeclaration","scope":1218,"src":"461:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1199,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"449:34:4"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1218,"src":"507:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"506:9:4"},"scope":1676,"src":"433:156:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"721:1049:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1227,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"735:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"744:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"749:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"735:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1355,"nodeType":"Block","src":"1007:757:4","statements":[{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"tHalf","nameLocation":"1029:5:4","nodeType":"VariableDeclaration","scope":1355,"src":"1021:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1263,"nodeType":"VariableDeclarationStatement","src":"1021:13:4"},{"assignments":[1265],"declarations":[{"constant":false,"id":1265,"mutability":"mutable","name":"y","nameLocation":"1056:1:4","nodeType":"VariableDeclaration","scope":1355,"src":"1048:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1268,"initialValue":{"expression":{"id":1266,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1060:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1069:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1060:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1048:22:4"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"r","nameLocation":"1092:1:4","nodeType":"VariableDeclaration","scope":1355,"src":"1084:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1287,"initialValue":{"arguments":[{"expression":{"id":1272,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1121:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1130:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1121:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":1278,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1172:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1279,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1181:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"1172:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1163:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"expression":{"id":1282,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1194:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1203:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"1194:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1281,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"1185:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1185:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1149:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1274,"name":"string","nodeType":"ElementaryTypeName","src":"1149:6:4","typeDescriptions":{}}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1156:6:4","memberName":"concat","nodeType":"MemberAccess","src":"1149:13:4","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1271,"name":"modHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"1096:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,string memory) pure returns (uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:124:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1084:136:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1288,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1239:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1248:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1239:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1252:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1239:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1257:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1239:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1322,"nodeType":"Block","src":"1321:103:4","statements":[{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1339:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1303,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1348:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1357:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1348:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1361:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1348:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1347:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1347:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1339:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"1339:28:4"},{"expression":{"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1312,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1385:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1390:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1314,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1394:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1390:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1389:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":1317,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1399:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1408:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1399:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1389:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1385:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1321,"nodeType":"ExpressionStatement","src":"1385:24:4"}]},"id":1323,"nodeType":"IfStatement","src":"1235:189:4","trueBody":{"id":1301,"nodeType":"Block","src":"1260:55:4","statements":[{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1278:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1295,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1286:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1295:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"1286:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1286:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1278:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1300,"nodeType":"ExpressionStatement","src":"1278:22:4"}]}},{"expression":{"arguments":[{"hexValue":"74727565","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1501:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"74727565","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1527:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"arguments":[{"expression":{"id":1329,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1573:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1582:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"1573:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1331,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1585:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1332,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1588:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1588:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1328,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1563:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1335,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1601:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1610:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"1601:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1337,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1613:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1622:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1613:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1327,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1553:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":1342,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1666:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1675:1:4","memberName":"v","nodeType":"MemberAccess","referencedDeclaration":1184,"src":"1666:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1344,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1678:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1345,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1681:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1690:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1681:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1656:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1348,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"1694:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1349,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"1697:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1706:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"1697:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1340,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1646:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1646:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1352,"name":"tHalf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"1730:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1324,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1460:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1196_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1460:293:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1226,"id":1354,"nodeType":"Return","src":"1437:316:4"}]},"id":1356,"nodeType":"IfStatement","src":"731:1033:4","trueBody":{"id":1260,"nodeType":"Block","src":"752:249:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1231,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"770:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"779:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"770:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":1234,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"794:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"803:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"794:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"32","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"806:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"expression":{"id":1237,"name":"vdfClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"809:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"818:1:4","memberName":"n","nodeType":"MemberAccess","referencedDeclaration":1176,"src":"809:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1233,"name":"powerModN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"784:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"770:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1258,"nodeType":"Block","src":"909:82:4","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"954:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"961:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"968:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"974:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1250,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"934:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1196_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1226,"id":1257,"nodeType":"Return","src":"927:49:4"}]},"id":1259,"nodeType":"IfStatement","src":"766:225:4","trueBody":{"id":1249,"nodeType":"Block","src":"822:81:4","statements":[{"expression":{"arguments":[{"hexValue":"74727565","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"867:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"873:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"880:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"883:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"886:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1241,"name":"SingHalvProofOutput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"847:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SingHalvProofOutput_$1196_storage_ptr_$","typeString":"type(struct Pietrzak_VDF.SingHalvProofOutput storage pointer)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"functionReturnParameters":1226,"id":1248,"nodeType":"Return","src":"840:48:4"}]}}]}}]},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"processSingleHalvingProof","nameLocation":"604:25:4","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"vdfClaim","nameLocation":"655:8:4","nodeType":"VariableDeclaration","scope":1358,"src":"639:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"},"typeName":{"id":1220,"nodeType":"UserDefinedTypeName","pathNode":{"id":1219,"name":"VDFClaim","nameLocations":["639:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"639:8:4"},"referencedDeclaration":1185,"src":"639:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"visibility":"internal"}],"src":"629:40:4"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"693:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"SingHalvProofOutput","nameLocations":["693:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1196,"src":"693:19:4"},"referencedDeclaration":1196,"src":"693:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_storage_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"}},"visibility":"internal"}],"src":"692:28:4"},"scope":1676,"src":"595:1175:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"1871:608:4","statements":[{"assignments":[1368],"declarations":[{"constant":false,"id":1368,"mutability":"mutable","name":"proofSize","nameLocation":"1889:9:4","nodeType":"VariableDeclaration","scope":1445,"src":"1881:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1371,"initialValue":{"expression":{"id":1369,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"1901:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:6:4","memberName":"length","nodeType":"MemberAccess","src":"1901:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1881:36:4"},{"body":{"id":1441,"nodeType":"Block","src":"1968:484:4","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"output","nameLocation":"2009:6:4","nodeType":"VariableDeclaration","scope":1441,"src":"1982:33:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"},"typeName":{"id":1383,"nodeType":"UserDefinedTypeName","pathNode":{"id":1382,"name":"SingHalvProofOutput","nameLocations":["1982:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1196,"src":"1982:19:4"},"referencedDeclaration":1196,"src":"1982:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_storage_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput"}},"visibility":"internal"}],"id":1390,"initialValue":{"arguments":[{"baseExpression":{"id":1386,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2044:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1388,"indexExpression":{"id":1387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2054:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2044:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}],"id":1385,"name":"processSingleHalvingProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"2018:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VDFClaim_$1185_memory_ptr_$returns$_t_struct$_SingHalvProofOutput_$1196_memory_ptr_$","typeString":"function (struct Pietrzak_VDF.VDFClaim memory) pure returns (struct Pietrzak_VDF.SingHalvProofOutput memory)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"nodeType":"VariableDeclarationStatement","src":"1982:75:4"},{"condition":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2075:16:4","subExpression":{"expression":{"id":1391,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2076:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:8:4","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":1187,"src":"2076:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1439,"nodeType":"Block","src":"2144:298:4","statements":[{"condition":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2166:18:4","subExpression":{"expression":{"id":1397,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2167:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2174:10:4","memberName":"calculated","nodeType":"MemberAccess","referencedDeclaration":1189,"src":"2167:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1402,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2224:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:7:4","memberName":"x_prime","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"2224:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1404,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2242:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1408,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2252:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2252:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2242:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:1:4","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":1178,"src":"2242:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1413,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2301:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2308:7:4","memberName":"y_prime","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"2301:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1415,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2319:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1419,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2329:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2333:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2329:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2336:1:4","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":1180,"src":"2319:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2301:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1424,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2378:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_SingHalvProofOutput_$1196_memory_ptr","typeString":"struct Pietrzak_VDF.SingHalvProofOutput memory"}},"id":1425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2385:6:4","memberName":"T_half","nodeType":"MemberAccess","referencedDeclaration":1195,"src":"2378:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"baseExpression":{"id":1426,"name":"proofList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"2395:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory[] memory"}},"id":1430,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"2405:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2409:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2405:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2395:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim memory"}},"id":1431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2412:1:4","memberName":"T","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"2395:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2378:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"2374:53:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2422:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1366,"id":1434,"nodeType":"Return","src":"2415:12:4"}},"id":1436,"nodeType":"IfStatement","src":"2297:130:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2346:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1366,"id":1423,"nodeType":"Return","src":"2339:12:4"}},"id":1437,"nodeType":"IfStatement","src":"2220:207:4","trueBody":{"expression":{"hexValue":"66616c7365","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2269:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1366,"id":1412,"nodeType":"Return","src":"2262:12:4"}},"id":1438,"nodeType":"IfStatement","src":"2162:265:4","trueBody":{"expression":{"hexValue":"74727565","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2193:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1366,"id":1401,"nodeType":"Return","src":"2186:11:4"}}]},"id":1440,"nodeType":"IfStatement","src":"2071:371:4","trueBody":{"id":1396,"nodeType":"Block","src":"2093:45:4","statements":[{"expression":{"hexValue":"66616c7365","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2118:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1366,"id":1395,"nodeType":"Return","src":"2111:12:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1948:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1377,"name":"proofSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1952:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"initializationExpression":{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"i","nameLocation":"1941:1:4","nodeType":"VariableDeclaration","scope":1442,"src":"1933:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1375,"initialValue":{"hexValue":"30","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1945:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1933:13:4"},"loopExpression":{"expression":{"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1963:3:4","subExpression":{"id":1379,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"1963:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1381,"nodeType":"ExpressionStatement","src":"1963:3:4"},"nodeType":"ForStatement","src":"1928:524:4"},{"expression":{"hexValue":"74727565","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2468:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1366,"id":1444,"nodeType":"Return","src":"2461:11:4"}]},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"verifyRecursiveHalvingProof","nameLocation":"1785:27:4","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"proofList","nameLocation":"1831:9:4","nodeType":"VariableDeclaration","scope":1446,"src":"1813:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"},"typeName":{"baseType":{"id":1360,"nodeType":"UserDefinedTypeName","pathNode":{"id":1359,"name":"VDFClaim","nameLocations":["1813:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1185,"src":"1813:8:4"},"referencedDeclaration":1185,"src":"1813:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_VDFClaim_$1185_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim"}},"id":1361,"nodeType":"ArrayTypeName","src":"1813:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_VDFClaim_$1185_storage_$dyn_storage_ptr","typeString":"struct Pietrzak_VDF.VDFClaim[]"}},"visibility":"internal"}],"src":"1812:29:4"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"1865:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1364,"name":"bool","nodeType":"ElementaryTypeName","src":"1865:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1864:6:4"},"scope":1676,"src":"1776:703:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"2789:239:4","statements":[{"assignments":[1459],"declarations":[{"constant":false,"id":1459,"mutability":"mutable","name":"result","nameLocation":"2807:6:4","nodeType":"VariableDeclaration","scope":1498,"src":"2799:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1461,"initialValue":{"hexValue":"31","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2816:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2799:18:4"},{"body":{"id":1494,"nodeType":"Block","src":"2841:158:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2859:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2859:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2859:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"2855:78:4","trueBody":{"id":1478,"nodeType":"Block","src":"2871:62:4","statements":[{"expression":{"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2889:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2905:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2913:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1474,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2916:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2898:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2889:29:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1477,"nodeType":"ExpressionStatement","src":"2889:29:4"}]}},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2946:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2957:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"2960:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1484,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2963:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"2950:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2950:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2946:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"2946:19:4"},{"expression":{"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2979:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2983:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2987:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2983:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2979:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"nodeType":"ExpressionStatement","src":"2979:9:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"2834:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2834:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"WhileStatement","src":"2827:172:4"},{"expression":{"id":1496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"3015:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1457,"id":1497,"nodeType":"Return","src":"3008:13:4"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"2485:215:4","text":" @param a base value\n @param b exponent value\n @return result of a^b mod N\n @notice powerModN function\n @notice calculate a^b mod N\n @notice O(log b) complexity"},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"powerModN","nameLocation":"2714:9:4","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"a","nameLocation":"2732:1:4","nodeType":"VariableDeclaration","scope":1499,"src":"2724:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2724:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"b","nameLocation":"2743:1:4","nodeType":"VariableDeclaration","scope":1499,"src":"2735:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"n","nameLocation":"2754:1:4","nodeType":"VariableDeclaration","scope":1499,"src":"2746:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2723:33:4"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2780:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2780:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2779:9:4"},"scope":1676,"src":"2705:323:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"3272:620:4","statements":[{"id":1544,"nodeType":"UncheckedBlock","src":"3282:604:4","statements":[{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"length","nameLocation":"3314:6:4","nodeType":"VariableDeclaration","scope":1544,"src":"3306:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3329:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3323:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3323:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3338:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3323:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3306:33:4"},{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"buffer","nameLocation":"3367:6:4","nodeType":"VariableDeclaration","scope":1544,"src":"3353:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1515,"name":"string","nodeType":"ElementaryTypeName","src":"3353:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"id":1519,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"3387:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3376:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1517,"name":"string","nodeType":"ElementaryTypeName","src":"3380:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3376:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3353:41:4"},{"assignments":[1523],"declarations":[{"constant":false,"id":1523,"mutability":"mutable","name":"ptr","nameLocation":"3416:3:4","nodeType":"VariableDeclaration","scope":1544,"src":"3408:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3408:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1524,"nodeType":"VariableDeclarationStatement","src":"3408:11:4"},{"AST":{"nodeType":"YulBlock","src":"3489:67:4","statements":[{"nodeType":"YulAssignment","src":"3507:35:4","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3518:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:2:4","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"3534:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:4"},"nodeType":"YulFunctionCall","src":"3526:15:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:4"},"nodeType":"YulFunctionCall","src":"3514:28:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"3507:3:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1516,"isOffset":false,"isSlot":false,"src":"3518:6:4","valueSize":1},{"declaration":1508,"isOffset":false,"isSlot":false,"src":"3534:6:4","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"3507:3:4","valueSize":1}],"id":1525,"nodeType":"InlineAssembly","src":"3480:76:4"},{"body":{"id":1540,"nodeType":"Block","src":"3582:267:4","statements":[{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"3600:5:4","subExpression":{"id":1527,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"3600:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"3600:5:4"},{"AST":{"nodeType":"YulBlock","src":"3683:84:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3713:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3727:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3734:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3723:3:4"},"nodeType":"YulFunctionCall","src":"3723:14:4"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"3739:8:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"3718:4:4"},"nodeType":"YulFunctionCall","src":"3718:30:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3705:7:4"},"nodeType":"YulFunctionCall","src":"3705:44:4"},"nodeType":"YulExpressionStatement","src":"3705:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1174,"isOffset":false,"isSlot":false,"src":"3739:8:4","valueSize":1},{"declaration":1523,"isOffset":false,"isSlot":false,"src":"3713:3:4","valueSize":1},{"declaration":1502,"isOffset":false,"isSlot":false,"src":"3727:5:4","valueSize":1}],"id":1530,"nodeType":"InlineAssembly","src":"3674:93:4"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3784:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3793:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3784:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"3784:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3817:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3826:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3817:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1539,"nodeType":"IfStatement","src":"3813:21:4","trueBody":{"id":1538,"nodeType":"Break","src":"3829:5:4"}}]},"condition":{"hexValue":"74727565","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3576:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1541,"nodeType":"WhileStatement","src":"3569:280:4"},{"expression":{"id":1542,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3869:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1506,"id":1543,"nodeType":"Return","src":"3862:13:4"}]}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"3034:162:4","text":" OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"3210:8:4","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"3227:5:4","nodeType":"VariableDeclaration","scope":1546,"src":"3219:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"3219:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3218:15:4"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"3257:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1504,"name":"string","nodeType":"ElementaryTypeName","src":"3257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3256:15:4"},"scope":1676,"src":"3201:691:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1674,"nodeType":"Block","src":"4139:854:4","statements":[{"assignments":[1555],"declarations":[{"constant":false,"id":1555,"mutability":"mutable","name":"result","nameLocation":"4157:6:4","nodeType":"VariableDeclaration","scope":1674,"src":"4149:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4149:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1557,"initialValue":{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4166:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4149:18:4"},{"id":1671,"nodeType":"UncheckedBlock","src":"4177:787:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4205:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4214:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4220:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4214:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"4205:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1574,"nodeType":"IfStatement","src":"4201:103:4","trueBody":{"id":1573,"nodeType":"Block","src":"4224:80:4","statements":[{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4242:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4257:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4251:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"4242:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"nodeType":"ExpressionStatement","src":"4242:17:4"},{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4277:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4287:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4277:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ExpressionStatement","src":"4277:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4321:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4330:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4336:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4330:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"4321:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1591,"nodeType":"IfStatement","src":"4317:103:4","trueBody":{"id":1590,"nodeType":"Block","src":"4340:80:4","statements":[{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4358:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4367:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4373:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4367:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"4358:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1585,"nodeType":"ExpressionStatement","src":"4358:17:4"},{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4393:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4403:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4393:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"4393:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4437:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4446:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4452:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4446:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"4437:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"4433:103:4","trueBody":{"id":1607,"nodeType":"Block","src":"4456:80:4","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4474:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4483:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4489:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4483:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"4474:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"4474:17:4"},{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4509:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4519:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4509:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"4509:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4553:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4562:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4568:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4562:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"4553:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1625,"nodeType":"IfStatement","src":"4549:100:4","trueBody":{"id":1624,"nodeType":"Block","src":"4571:78:4","statements":[{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4589:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4598:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"4589:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1619,"nodeType":"ExpressionStatement","src":"4589:16:4"},{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4623:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4633:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"4623:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1623,"nodeType":"ExpressionStatement","src":"4623:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4666:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4675:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4681:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4675:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"4666:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1642,"nodeType":"IfStatement","src":"4662:100:4","trueBody":{"id":1641,"nodeType":"Block","src":"4684:78:4","statements":[{"expression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4702:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4711:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4717:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4711:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"4702:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1636,"nodeType":"ExpressionStatement","src":"4702:16:4"},{"expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4736:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4736:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1640,"nodeType":"ExpressionStatement","src":"4736:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4779:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4788:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4794:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4788:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"4779:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1659,"nodeType":"IfStatement","src":"4775:100:4","trueBody":{"id":1658,"nodeType":"Block","src":"4797:78:4","statements":[{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4815:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4824:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4824:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"4815:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"4815:16:4"},{"expression":{"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4849:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4859:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4849:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1657,"nodeType":"ExpressionStatement","src":"4849:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4892:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4907:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4901:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"4892:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"4888:66:4","trueBody":{"id":1669,"nodeType":"Block","src":"4910:44:4","statements":[{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4928:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4938:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4928:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"4928:11:4"}]}}]},{"expression":{"id":1672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4980:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1553,"id":1673,"nodeType":"Return","src":"4973:13:4"}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"3898:174:4","text":" openzeppelin-contracts/contracts/utils/math/Math.sol\n @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"4086:5:4","nodeType":"FunctionDefinition","parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"4100:5:4","nodeType":"VariableDeclaration","scope":1675,"src":"4092:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4091:15:4"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"4130:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"4130:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4129:9:4"},"scope":1676,"src":"4077:916:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1677,"src":"59:4936:4","usedErrors":[]}],"src":"33:4963:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CommitRecover.sol":{"CommitRecover":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"omega","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"calculatedTimestamp","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isCompleted","type":"bool"}],"name":"CalculatedOmega","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"uint256","name":"commit","type":"uint256"},{"indexed":false,"internalType":"string","name":"commitsString","type":"string"},{"indexed":false,"internalType":"uint256","name":"commitCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitTimestamp","type":"uint256"}],"name":"CommitC","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"msgSender","type":"address"},{"indexed":false,"internalType":"uint256","name":"recov","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"omegaRecov","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"recoveredTimestamp","type":"uint256"}],"name":"Recovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"uint256","name":"a","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revealLeftCount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"revealTimestamp","type":"uint256"}],"name":"RevealA","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"msgSender","type":"address"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"commitRevealDuration","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"n","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"g","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"h","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"T","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"round","type":"uint256"}],"name":"Start","type":"event"},{"inputs":[],"name":"calculateOmega","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkStage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commit","type":"uint256"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commitDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commitRevealDuration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"round","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"commitRevealValues","outputs":[{"internalType":"uint256","name":"c","type":"uint256"},{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"address","name":"participantAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commitsString","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_round","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"proofs","type":"tuple[]"}],"name":"recover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"round","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stage","outputs":[{"internalType":"enum CommitRecover.Stages","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitDuration","type":"uint256"},{"internalType":"uint256","name":"_commitRevealDuration","type":"uint256"},{"internalType":"uint256","name":"_n","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"_proofs","type":"tuple[]"}],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"round","type":"uint256"}],"name":"userInfosAtRound","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bool","name":"committed","type":"bool"},{"internalType":"bool","name":"revealed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"round","type":"uint256"}],"name":"valuesAtRound","outputs":[{"internalType":"uint256","name":"omega","type":"uint256"},{"internalType":"uint256","name":"bStar","type":"uint256"},{"internalType":"uint256","name":"numOfParticipants","type":"uint256"},{"internalType":"uint256","name":"g","type":"uint256"},{"internalType":"uint256","name":"h","type":"uint256"},{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isAllRevealed","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Justin g","kind":"dev","methods":{"commit(uint256)":{"params":{"_commit":"participant's commit value"}},"owner()":{"details":"Returns the address of the current owner."},"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":{"params":{"proofs":"the proof of the recovered value"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"reveal(uint256)":{"params":{"_a":"participant's reveal value"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"Bicorn-RX Commit-Reveal-Recover","version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_299":{"entryPoint":null,"id":299,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":102,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":110,"id":111,"parameterSlots":1,"returnSlots":0},"panic_error_0x21":{"entryPoint":306,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:190:5","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:5"},"nodeType":"YulFunctionCall","src":"45:88:5"},"nodeType":"YulExpressionStatement","src":"45:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:5"},"nodeType":"YulFunctionCall","src":"142:15:5"},"nodeType":"YulExpressionStatement","src":"142:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:5"},"nodeType":"YulFunctionCall","src":"166:15:5"},"nodeType":"YulExpressionStatement","src":"166:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7:180:5"}]},"contents":"{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5062000032620000266200006660201b60201c565b6200006e60201b60201c565b6002600760006101000a81548160ff021916908360028111156200005b576200005a62000132565b5b021790555062000161565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6137d680620001716000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806378e97925116100ad578063c040e6b811610071578063c040e6b8146102e0578063c2ca0ac5146102fe578063dca669e41461031a578063f2fde38b14610338578063f4f98ad51461035457610121565b806378e979251461024c5780637f93c7511461026a5780638da5cb5b14610274578063a58be66114610292578063b0e9eb3f146102ae57610121565b806350d30cbf116100f457806350d30cbf146101b25780636f833811146101ce578063715018a6146101ec57806373fa4f46146101f657806377f0ade91461021457610121565b806306661abd1461012657806312ce990614610144578063146ca5311461016257806322fadc2814610180575b600080fd5b61012e610370565b60405161013b919061226f565b60405180910390f35b61014c610376565b604051610159919061226f565b60405180910390f35b61016a61066c565b604051610177919061226f565b60405180910390f35b61019a600480360381019061019591906122ca565b610672565b6040516101a99392919061234b565b60405180910390f35b6101cc60048036038101906101c791906123e7565b6106c9565b005b6101d6610ae8565b6040516101e3919061226f565b60405180910390f35b6101f4610aee565b005b6101fe610b02565b60405161020b919061226f565b60405180910390f35b61022e60048036038101906102299190612447565b610b08565b6040516102439998979695949392919061248f565b60405180910390f35b610254610b70565b604051610261919061226f565b60405180910390f35b610272610b76565b005b61027c610d13565b604051610289919061251c565b60405180910390f35b6102ac60048036038101906102a79190612717565b610d3c565b005b6102c860048036038101906102c391906127c6565b61105c565b6040516102d793929190612806565b60405180910390f35b6102e86110ad565b6040516102f591906128b4565b60405180910390f35b61031860048036038101906103139190612447565b6110c0565b005b61032261145b565b60405161032f919061294e565b60405180910390f35b610352600480360381019061034d9190612970565b6114e9565b005b61036e60048036038101906103699190612447565b61156c565b005b60045481565b60008060055490506009600082815260200190815260200160002060070160019054906101000a900460ff166103e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d8906129e9565b60405180910390fd5b6009600082815260200190815260200160002060070160009054906101000a900460ff1615610445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043c90612a55565b60405180910390fd5b61044d610b76565b6104576002611924565b6000600960008381526020019081526020016000206002015490506000600190506000600960008581526020019081526020016000206001015490506000600960006005548152602001908152602001600020600401549050600060096000600554815260200190815260200160002060050154905060006001905060005b868110156105ad5782806104ed576104ec612a75565b5b6105966105688686610525600860008f815260200190815260200160002060008881526020019081526020016000206000015461199c565b61052e8b61199c565b60405160200161053f929190612ae0565b6040516020818303038152906040528051906020012060001c6105629190612b04565b87611a6a565b600860008c815260200190815260200160002060008581526020019081526020016000206001015486611a6a565b8709955080806105a590612b64565b9150506104d6565b50846009600089815260200190815260200160002060000181905550806009600089815260200190815260200160002060070160006101000a81548160ff0219169083151502179055506002600760006101000a81548160ff0219169083600281111561061d5761061c61283d565b5b02179055507f31d4d513959d79380d7f8af557ac2408b4d6c2cf59af943dd997a11100520f66878642846040516106579493929190612bac565b60405180910390a18497505050505050505090565b60055481565b6008602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b818160008181106106dd576106dc612bf1565b5b905060a0020160400135600960006005548152602001908152602001600020600501548110610741576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073890612c6c565b60405180910390fd5b600060019050600060096000878152602001908152602001600020600501549050600060096000888152602001908152602001600020600101549050610785610b76565b61078f6000611acd565b6009600088815260200190815260200160002060070160009054906101000a900460ff16156107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea90612a55565b60405180910390fd5b8585600081811061080757610806612bf1565b5b905060a0020160600135600960008981526020019081526020016000206006015414610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90612cd8565b60405180910390fd5b6108c78686808060200260200160405190810160405280939291908181526020016000905b828210156108bd57848483905060a002018036038101906108ae9190612cf8565b8152602001906001019061088d565b5050505050611b45565b5060005b6009600089815260200190815260200160002060020154811015610993576000600860008a81526020019081526020016000206000838152602001908152602001600020600001549050600061096882866109258561199c565b61092e8861199c565b60405160200161093f929190612ae0565b6040516020818303038152906040528051906020012060001c6109629190612b04565b87611a6a565b9050848061097957610978612a75565b5b81870995505050808061098b90612b64565b9150506108cb565b50858560008181106109a8576109a7612bf1565b5b905060a002016020013583146109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90612d71565b60405180910390fd5b60016009600089815260200190815260200160002060070160006101000a81548160ff02191690831515021790555085856000818110610a3657610a35612bf1565b5b905060a002016040013560096000898152602001908152602001600020600001819055506002600760006101000a81548160ff02191690836002811115610a8057610a7f61283d565b5b02179055507f03fc2d4f2e2e4e84069307a4d3a9b7ad25d93e2026627031a87b54a1c61907ce338488886000818110610abc57610abb612bf1565b5b905060a002016040013542604051610ad79493929190612d91565b60405180910390a150505050505050565b60025481565b610af6611c8b565b610b006000611d09565b565b60035481565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16908060070160019054906101000a900460ff16905089565b60015481565b6000600154905060006002811115610b9157610b9061283d565b5b600760009054906101000a900460ff166002811115610bb357610bb261283d565b5b148015610bcd575060025481610bc99190612dd6565b4210155b15610ca557600060045414610c7857610be4611dcd565b600454600960006005548152602001908152602001600020600201819055506000600960006005548152602001908152602001600020600501546006604051602001610c309190612f02565b6040516020818303038152906040528051906020012060001c610c539190612b04565b9050806009600060055481526020019081526020016000206001018190555050610ca4565b6002600760006101000a81548160ff02191690836002811115610c9e57610c9d61283d565b5b02179055505b5b60016002811115610cb957610cb861283d565b5b600760009054906101000a900460ff166002811115610cdb57610cda61283d565b5b148015610d02575060035481610cf19190612dd6565b42101580610d0157506000600454145b5b15610d1057610d0f611dcd565b5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8181600081518110610d5157610d50612bf1565b5b60200260200101516020015110610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490612c6c565b60405180910390fd5b828410610ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd690612f8b565b60405180910390fd5b600280811115610df257610df161283d565b5b600760009054906101000a900460ff166002811115610e1457610e1361283d565b5b14610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b90612ff7565b60405180910390fd5b610e5d81611b45565b50600160056000828254610e719190612dd6565b925050819055506000600760006101000a81548160ff02191690836002811115610e9e57610e9d61283d565b5b021790555042600181905550836002819055508260038190555080600081518110610ecc57610ecb612bf1565b5b6020026020010151606001516009600060055481526020019081526020016000206006018190555080600081518110610f0857610f07612bf1565b5b6020026020010151602001516009600060055481526020019081526020016000206003018190555080600081518110610f4457610f43612bf1565b5b60200260200101516040015160096000600554815260200190815260200160002060040181905550816009600060055481526020019081526020016000206005018190555060006004819055506040518060200160405280600081525060069081610faf91906131ae565b507f1a5e4fa05b9601af979a44c50ef7e103b9b51cd105eb42040b5817eb3e58449c334286868686600081518110610fea57610fe9612bf1565b5b6020026020010151602001518760008151811061100a57611009612bf1565b5b6020026020010151604001518860008151811061102a57611029612bf1565b5b60200260200101516060015160055460405161104e99989796959493929190613280565b60405180910390a150505050565b600a602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b600760009054906101000a900460ff1681565b8060096000600554815260200190815260200160002060050154811061111b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111290612c6c565b60405180910390fd5b600060055490506000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff16151515158152505090508060200151611205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fc90613359565b60405180910390fd5b80604001511561124a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611241906133c5565b60405180910390fd5b60086000838152602001908152602001600020600082600001518152602001908152602001600020600001546112ad6009600085815260200190815260200160002060030154866009600087815260200190815260200160002060050154611a6a565b146112ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e490613431565b60405180910390fd5b6112f5610b76565b6112ff6001611924565b600060046000815461131090613451565b9190508190559050846008600085815260200190815260200160002060008460000151815260200190815260200160002060010181905550600081036113ab576002600760006101000a81548160ff021916908360028111156113765761137561283d565b5b021790555060016009600085815260200190815260200160002060070160016101000a81548160ff0219169083151502179055505b6001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060010160016101000a81548160ff0219169083151502179055507f0167147e5476fb37532a0aab79dea3eb6b8fe0fbd723ac6025b0de29237b04963386834260405161144c9493929190612d91565b60405180910390a15050505050565b6006805461146890612e39565b80601f016020809104026020016040519081016040528092919081815260200182805461149490612e39565b80156114e15780601f106114b6576101008083540402835291602001916114e1565b820191906000526020600020905b8154815290600101906020018083116114c457829003601f168201915b505050505081565b6114f1611c8b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611560576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611557906134ec565b60405180910390fd5b61156981611d09565b50565b806009600060055481526020019081526020016000206005015481106115c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115be90612c6c565b60405180910390fd5b6115cf611c8b565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600554815260200190815260200160002060010160009054906101000a900460ff1615611672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166990613558565b60405180910390fd5b61167a610b76565b6116846000611924565b6000600454905060006006805461169a90612e39565b80601f01602080910402602001604051908101604052809291908181526020018280546116c690612e39565b80156117135780601f106116e857610100808354040283529160200191611713565b820191906000526020600020905b8154815290600101906020018083116116f657829003601f168201915b50505050509050806117248561199c565b604051602001611735929190612ae0565b6040516020818303038152906040529050604051806060016040528083815260200160011515815260200160001515815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060055481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055509050506040518060600160405280858152602001600081526020013373ffffffffffffffffffffffffffffffffffffffff168152506008600060055481526020019081526020016000206000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505080600690816118cb91906131ae565b50816118d690612b64565b9150816004819055507fbd41a700367cdf3254812a81baad606f9d6102e946f1bb28aab0a4afe25ef0c93385838542604051611916959493929190613578565b60405180910390a150505050565b8060028111156119375761193661283d565b5b600760009054906101000a900460ff1660028111156119595761195861283d565b5b14611999576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119909061361e565b60405180910390fd5b50565b6060600060016119ab84611eb4565b01905060008167ffffffffffffffff8111156119ca576119c9612548565b5b6040519080825280601f01601f1916602001820160405280156119fc5781602001600182028036833780820191505090505b509050600082602001820190505b600115611a5f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a5357611a52612a75565b5b04945060008503611a0a575b819350505050919050565b600080600190505b6000841115611ac257600180851603611a9a578280611a9457611a93612a75565b5b85820990505b8280611aa957611aa8612a75565b5b8586099450600284611abb919061363e565b9350611a72565b809150509392505050565b806002811115611ae057611adf61283d565b5b600760009054906101000a900460ff166002811115611b0257611b0161283d565b5b11611b42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b399061361e565b60405180910390fd5b50565b6000808251905060005b81811015611c7f576000611b7c858381518110611b6f57611b6e612bf1565b5b6020026020010151612007565b90508060000151611b935760009350505050611c86565b8060200151611ba85760019350505050611c86565b84600183611bb69190612dd6565b81518110611bc757611bc6612bf1565b5b602002602001015160200151816040015114611be95760009350505050611c86565b84600183611bf79190612dd6565b81518110611c0857611c07612bf1565b5b602002602001015160400151816060015114611c2a5760009350505050611c86565b84600183611c389190612dd6565b81518110611c4957611c48612bf1565b5b602002602001015160600151816080015114611c6b5760009350505050611c86565b508080611c7790612b64565b915050611b4f565b5060019150505b919050565b611c936121dc565b73ffffffffffffffffffffffffffffffffffffffff16611cb1610d13565b73ffffffffffffffffffffffffffffffffffffffff1614611d07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cfe906136bb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600280811115611de057611ddf61283d565b5b600760009054906101000a900460ff166002811115611e0257611e0161283d565b5b03611e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3990613727565b60405180910390fd5b600380611e5257611e51612a75565b5b6001600760009054906101000a900460ff166002811115611e7657611e7561283d565b5b086002811115611e8957611e8861283d565b5b600760006101000a81548160ff02191690836002811115611ead57611eac61283d565b5b0217905550565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611f12577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611f0857611f07612a75565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611f4f576d04ee2d6d415b85acef81000000008381611f4557611f44612a75565b5b0492506020810190505b662386f26fc100008310611f7e57662386f26fc100008381611f7457611f73612a75565b5b0492506010810190505b6305f5e1008310611fa7576305f5e1008381611f9d57611f9c612a75565b5b0492506008810190505b6127108310611fcc576127108381611fc257611fc1612a75565b5b0492506004810190505b60648310611fef5760648381611fe557611fe4612a75565b5b0492506002810190505b600a8310611ffe576001810190505b80915050919050565b61200f612223565b60018260600151036120a75761202f826020015160028460000151611a6a565b826040015103612070576040518060a001604052806001151581526020016000151581526020016000815260200160008152602001600081525090506121d7565b6040518060a001604052806000151581526020016000151581526020016000815260200160008152602001600081525090506121d7565b6000808360400151905060006120fa85602001516120c8876040015161199c565b6120d5886080015161199c565b6040516020016120e6929190612ae0565b6040516020818303038152906040526121e4565b90506000600186606001511603612123576002856060015161211c919061363e565b9250612160565b6002600186606001516121369190612dd6565b612140919061363e565b9250846000015182836121539190613747565b61215d9190612b04565b91505b6040518060a001604052806001151581526020016001151581526020016121a26121938860200151858a60000151611a6a565b88608001518960000151611a6a565b81526020016121c86121bd8860800151858a60000151611a6a565b858960000151611a6a565b81526020018481525093505050505b919050565b600033905090565b600082826040516020016121f89190613789565b6040516020818303038152906040528051906020012060001c61221b9190612b04565b905092915050565b6040518060a001604052806000151581526020016000151581526020016000815260200160008152602001600081525090565b6000819050919050565b61226981612256565b82525050565b60006020820190506122846000830184612260565b92915050565b6000604051905090565b600080fd5b600080fd5b6122a781612256565b81146122b257600080fd5b50565b6000813590506122c48161229e565b92915050565b600080604083850312156122e1576122e0612294565b5b60006122ef858286016122b5565b9250506020612300858286016122b5565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006123358261230a565b9050919050565b6123458161232a565b82525050565b60006060820190506123606000830186612260565b61236d6020830185612260565b61237a604083018461233c565b949350505050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123a7576123a6612382565b5b8235905067ffffffffffffffff8111156123c4576123c3612387565b5b6020830191508360a08202830111156123e0576123df61238c565b5b9250929050565b600080600060408486031215612400576123ff612294565b5b600061240e868287016122b5565b935050602084013567ffffffffffffffff81111561242f5761242e612299565b5b61243b86828701612391565b92509250509250925092565b60006020828403121561245d5761245c612294565b5b600061246b848285016122b5565b91505092915050565b60008115159050919050565b61248981612474565b82525050565b6000610120820190506124a5600083018c612260565b6124b2602083018b612260565b6124bf604083018a612260565b6124cc6060830189612260565b6124d96080830188612260565b6124e660a0830187612260565b6124f360c0830186612260565b61250060e0830185612480565b61250e610100830184612480565b9a9950505050505050505050565b6000602082019050612531600083018461233c565b92915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61258082612537565b810181811067ffffffffffffffff8211171561259f5761259e612548565b5b80604052505050565b60006125b261228a565b90506125be8282612577565b919050565b600067ffffffffffffffff8211156125de576125dd612548565b5b602082029050602081019050919050565b600080fd5b600060a0828403121561260a576126096125ef565b5b61261460a06125a8565b90506000612624848285016122b5565b6000830152506020612638848285016122b5565b602083015250604061264c848285016122b5565b6040830152506060612660848285016122b5565b6060830152506080612674848285016122b5565b60808301525092915050565b600061269361268e846125c3565b6125a8565b90508083825260208201905060a084028301858111156126b6576126b561238c565b5b835b818110156126df57806126cb88826125f4565b84526020840193505060a0810190506126b8565b5050509392505050565b600082601f8301126126fe576126fd612382565b5b813561270e848260208601612680565b91505092915050565b6000806000806080858703121561273157612730612294565b5b600061273f878288016122b5565b9450506020612750878288016122b5565b9350506040612761878288016122b5565b925050606085013567ffffffffffffffff81111561278257612781612299565b5b61278e878288016126e9565b91505092959194509250565b6127a38161232a565b81146127ae57600080fd5b50565b6000813590506127c08161279a565b92915050565b600080604083850312156127dd576127dc612294565b5b60006127eb858286016127b1565b92505060206127fc858286016122b5565b9150509250929050565b600060608201905061281b6000830186612260565b6128286020830185612480565b6128356040830184612480565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061287d5761287c61283d565b5b50565b600081905061288e8261286c565b919050565b600061289e82612880565b9050919050565b6128ae81612893565b82525050565b60006020820190506128c960008301846128a5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156129095780820151818401526020810190506128ee565b60008484015250505050565b6000612920826128cf565b61292a81856128da565b935061293a8185602086016128eb565b61294381612537565b840191505092915050565b600060208201905081810360008301526129688184612915565b905092915050565b60006020828403121561298657612985612294565b5b6000612994848285016127b1565b91505092915050565b7f4e6f74416c6c52657665616c6564000000000000000000000000000000000000600082015250565b60006129d3600e836128da565b91506129de8261299d565b602082019050919050565b60006020820190508181036000830152612a02816129c6565b9050919050565b7f4f6d656761416c7265616479436f6d706c657465640000000000000000000000600082015250565b6000612a3f6015836128da565b9150612a4a82612a09565b602082019050919050565b60006020820190508181036000830152612a6e81612a32565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081905092915050565b6000612aba826128cf565b612ac48185612aa4565b9350612ad48185602086016128eb565b80840191505092915050565b6000612aec8285612aaf565b9150612af88284612aaf565b91508190509392505050565b6000612b0f82612256565b9150612b1a83612256565b925082612b2a57612b29612a75565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612b6f82612256565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ba157612ba0612b35565b5b600182019050919050565b6000608082019050612bc16000830187612260565b612bce6020830186612260565b612bdb6040830185612260565b612be86060830184612480565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f477265617465724f72457175616c5468616e4e00000000000000000000000000600082015250565b6000612c566013836128da565b9150612c6182612c20565b602082019050919050565b60006020820190508181036000830152612c8581612c49565b9050919050565b7f544e6f744d617463686564000000000000000000000000000000000000000000600082015250565b6000612cc2600b836128da565b9150612ccd82612c8c565b602082019050919050565b60006020820190508181036000830152612cf181612cb5565b9050919050565b600060a08284031215612d0e57612d0d612294565b5b6000612d1c848285016125f4565b91505092915050565b7f5265636f764e6f744d6174636858000000000000000000000000000000000000600082015250565b6000612d5b600e836128da565b9150612d6682612d25565b602082019050919050565b60006020820190508181036000830152612d8a81612d4e565b9050919050565b6000608082019050612da6600083018761233c565b612db36020830186612260565b612dc06040830185612260565b612dcd6060830184612260565b95945050505050565b6000612de182612256565b9150612dec83612256565b9250828201905080821115612e0457612e03612b35565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e5157607f821691505b602082108103612e6457612e63612e0a565b5b50919050565b60008190508160005260206000209050919050565b60008154612e8c81612e39565b612e968186612aa4565b94506001821660008114612eb15760018114612ec657612ef9565b60ff1983168652811515820286019350612ef9565b612ecf85612e6a565b60005b83811015612ef157815481890152600182019150602081019050612ed2565b838801955050505b50505092915050565b6000612f0e8284612e7f565b915081905092915050565b7f436f6d6d697452657665616c4475726174696f6e4c6573735468616e436f6d6d60008201527f69744475726174696f6e00000000000000000000000000000000000000000000602082015250565b6000612f75602a836128da565b9150612f8082612f19565b604082019050919050565b60006020820190508181036000830152612fa481612f68565b9050919050565b7f53746167654e6f7446696e697368656400000000000000000000000000000000600082015250565b6000612fe16010836128da565b9150612fec82612fab565b602082019050919050565b6000602082019050818103600083015261301081612fd4565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026130647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613027565b61306e8683613027565b95508019841693508086168417925050509392505050565b6000819050919050565b60006130ab6130a66130a184612256565b613086565b612256565b9050919050565b6000819050919050565b6130c583613090565b6130d96130d1826130b2565b848454613034565b825550505050565b600090565b6130ee6130e1565b6130f98184846130bc565b505050565b5b8181101561311d576131126000826130e6565b6001810190506130ff565b5050565b601f8211156131625761313381612e6a565b61313c84613017565b8101602085101561314b578190505b61315f61315785613017565b8301826130fe565b50505b505050565b600082821c905092915050565b600061318560001984600802613167565b1980831691505092915050565b600061319e8383613174565b9150826002028217905092915050565b6131b7826128cf565b67ffffffffffffffff8111156131d0576131cf612548565b5b6131da8254612e39565b6131e5828285613121565b600060209050601f8311600181146132185760008415613206578287015190505b6132108582613192565b865550613278565b601f19841661322686612e6a565b60005b8281101561324e57848901518255600182019150602085019450602081019050613229565b8683101561326b5784890151613267601f891682613174565b8355505b6001600288020188555050505b505050505050565b600061012082019050613296600083018c61233c565b6132a3602083018b612260565b6132b0604083018a612260565b6132bd6060830189612260565b6132ca6080830188612260565b6132d760a0830187612260565b6132e460c0830186612260565b6132f160e0830185612260565b6132ff610100830184612260565b9a9950505050505050505050565b7f4e6f74436f6d6d69747465645061727469636970616e74000000000000000000600082015250565b60006133436017836128da565b915061334e8261330d565b602082019050919050565b6000602082019050818103600083015261337281613336565b9050919050565b7f416c726561647952657665616c65640000000000000000000000000000000000600082015250565b60006133af600f836128da565b91506133ba82613379565b602082019050919050565b600060208201905081810360008301526133de816133a2565b9050919050565b7f414e6f744d61746368436f6d6d69740000000000000000000000000000000000600082015250565b600061341b600f836128da565b9150613426826133e5565b602082019050919050565b6000602082019050818103600083015261344a8161340e565b9050919050565b600061345c82612256565b91506000820361346f5761346e612b35565b5b600182039050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006134d66026836128da565b91506134e18261347a565b604082019050919050565b60006020820190508181036000830152613505816134c9565b9050919050565b7f416c7265616479436f6d6d697474656400000000000000000000000000000000600082015250565b60006135426010836128da565b915061354d8261350c565b602082019050919050565b6000602082019050818103600083015261357181613535565b9050919050565b600060a08201905061358d600083018861233c565b61359a6020830187612260565b81810360408301526135ac8186612915565b90506135bb6060830185612260565b6135c86080830184612260565b9695505050505050565b7f46756e6374696f6e496e76616c69644174546869735374616765000000000000600082015250565b6000613608601a836128da565b9150613613826135d2565b602082019050919050565b60006020820190508181036000830152613637816135fb565b9050919050565b600061364982612256565b915061365483612256565b92508261366457613663612a75565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006136a56020836128da565b91506136b08261366f565b602082019050919050565b600060208201905081810360008301526136d481613698565b9050919050565b7f416c6c46696e6973686564000000000000000000000000000000000000000000600082015250565b6000613711600b836128da565b915061371c826136db565b602082019050919050565b6000602082019050818103600083015261374081613704565b9050919050565b600061375282612256565b915061375d83612256565b925082820261376b81612256565b9150828204841483151761378257613781612b35565b5b5092915050565b60006137958284612aaf565b91508190509291505056fea2646970667358221220fd313f07d78b47a9663c8f84dd0dad201eb01f842464054464cf9c9a0e3ebca864736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x66 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x6E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x5B JUMPI PUSH3 0x5A PUSH3 0x132 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x161 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x37D6 DUP1 PUSH3 0x171 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC2CA0AC5 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDCA669E4 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF4F98AD5 EQ PUSH2 0x354 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x78E97925 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x7F93C751 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA58BE661 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xB0E9EB3F EQ PUSH2 0x2AE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x50D30CBF GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x50D30CBF EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x73FA4F46 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x77F0ADE9 EQ PUSH2 0x214 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x12CE9906 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x22FADC28 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x2970 JUMP JUMPDEST PUSH2 0x14E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44D PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x457 PUSH1 0x2 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x5AD JUMPI DUP3 DUP1 PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST PUSH2 0x596 PUSH2 0x568 DUP7 DUP7 PUSH2 0x525 PUSH1 0x8 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x199C JUMP JUMPDEST PUSH2 0x52E DUP12 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST DUP8 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1A6A JUMP JUMPDEST DUP8 MULMOD SWAP6 POP DUP1 DUP1 PUSH2 0x5A5 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D6 JUMP JUMPDEST POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x31D4D513959D79380D7F8AF557AC2408B4D6C2CF59AF943DD997A11100520F66 DUP8 DUP7 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0x657 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x785 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x78F PUSH1 0x0 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP1 PUSH2 0x2CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8BD JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x88D JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1B45 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x968 DUP3 DUP7 PUSH2 0x925 DUP6 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x92E DUP9 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93F SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST DUP8 PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH2 0x979 JUMPI PUSH2 0x978 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP2 DUP8 MULMOD SWAP6 POP POP POP DUP1 DUP1 PUSH2 0x98B SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CB JUMP JUMPDEST POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP4 EQ PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3FC2D4F2E2E4E84069307A4D3A9B7AD25D93E2026627031A87B54A1C61907CE CALLER DUP5 DUP9 DUP9 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xAD7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x0 PUSH2 0x1D09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB91 JUMPI PUSH2 0xB90 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xBCD JUMPI POP PUSH1 0x2 SLOAD DUP2 PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0xC78 JUMPI PUSH2 0xBE4 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x2F02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD02 JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0xD01 JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD EQ JUMPDEST JUMPDEST ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x1DCD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD51 JUMPI PUSH2 0xD50 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD LT PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD94 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 LT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE14 JUMPI PUSH2 0xE13 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5D DUP2 PUSH2 0x1B45 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE9E JUMPI PUSH2 0xE9D PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF44 JUMPI PUSH2 0xF43 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP PUSH32 0x1A5E4FA05B9601AF979A44C50EF7E103B9B51CD105EB42040B5817EB3E58449C CALLER TIMESTAMP DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x1009 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x102A JUMPI PUSH2 0x1029 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x104E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1112 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x3359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x12AD PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1A6A JUMP JUMPDEST EQ PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP1 PUSH2 0x3431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F5 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x1310 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP5 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SUB PUSH2 0x13AB JUMPI PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x167147E5476FB37532A0AAB79DEA3EB6B8FE0FBD723AC6025B0DE29237B0496 CALLER DUP7 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x144C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x1468 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1494 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x14F1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1557 SWAP1 PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 DUP2 PUSH2 0x1D09 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CF PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP1 PUSH2 0x3558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x167A PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x1684 PUSH1 0x0 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD PUSH2 0x169A SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C6 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1713 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1713 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 PUSH2 0x1724 DUP6 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1735 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP DUP2 PUSH2 0x18D6 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xBD41A700367CDF3254812A81BAAD606F9D6102E946F1BB28AAB0A4AFE25EF0C9 CALLER DUP6 DUP4 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1916 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1990 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x19AB DUP5 PUSH2 0x1EB4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A5F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1A0A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH1 0x1 DUP1 DUP6 AND SUB PUSH2 0x1A9A JUMPI DUP3 DUP1 PUSH2 0x1A94 JUMPI PUSH2 0x1A93 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP6 DUP3 MULMOD SWAP1 POP JUMPDEST DUP3 DUP1 PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP5 POP PUSH1 0x2 DUP5 PUSH2 0x1ABB SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B01 PUSH2 0x283D JUMP JUMPDEST JUMPDEST GT PUSH2 0x1B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B39 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 PUSH2 0x1B7C DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2007 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1B93 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1BA8 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1BC7 JUMPI PUSH2 0x1BC6 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1BE9 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BF7 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x1C2A JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C38 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ PUSH2 0x1C6B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1C77 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C93 PUSH2 0x21DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB1 PUSH2 0xD13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CFE SWAP1 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x283D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E39 SWAP1 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH2 0x1E52 JUMPI PUSH2 0x1E51 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E76 JUMPI PUSH2 0x1E75 PUSH2 0x283D JUMP JUMPDEST JUMPDEST ADDMOD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1F12 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1F4F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1F7E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1FA7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1FCC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1FEF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1FFE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200F PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x20A7 JUMPI PUSH2 0x202F DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x2070 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x20FA DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x20C8 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x199C JUMP JUMPDEST PUSH2 0x20D5 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x21E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD AND SUB PUSH2 0x2123 JUMPI PUSH1 0x2 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP3 POP PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x2136 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x2140 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP4 PUSH2 0x2153 SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x215D SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21A2 PUSH2 0x2193 DUP9 PUSH1 0x20 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C8 PUSH2 0x21BD DUP9 PUSH1 0x80 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP6 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x3789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x221B SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2269 DUP2 PUSH2 0x2256 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A7 DUP2 PUSH2 0x2256 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C4 DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EF DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x236D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x237A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23A7 JUMPI PUSH2 0x23A6 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x2387 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xA0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23E0 JUMPI PUSH2 0x23DF PUSH2 0x238C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP7 DUP3 DUP8 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242F JUMPI PUSH2 0x242E PUSH2 0x2299 JUMP JUMPDEST JUMPDEST PUSH2 0x243B DUP7 DUP3 DUP8 ADD PUSH2 0x2391 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x245D JUMPI PUSH2 0x245C PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x246B DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2489 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x24A5 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24B2 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24D9 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24E6 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24F3 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2500 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x250E PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2580 DUP3 PUSH2 0x2537 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x259F JUMPI PUSH2 0x259E PUSH2 0x2548 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B2 PUSH2 0x228A JUMP JUMPDEST SWAP1 POP PUSH2 0x25BE DUP3 DUP3 PUSH2 0x2577 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25DE JUMPI PUSH2 0x25DD PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST PUSH2 0x2614 PUSH1 0xA0 PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2624 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2638 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x264C DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2660 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2674 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2693 PUSH2 0x268E DUP5 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x26B6 JUMPI PUSH2 0x26B5 PUSH2 0x238C JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26DF JUMPI DUP1 PUSH2 0x26CB DUP9 DUP3 PUSH2 0x25F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x26B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26FE JUMPI PUSH2 0x26FD PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x270E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2680 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2731 JUMPI PUSH2 0x2730 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2750 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2761 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2299 JUMP JUMPDEST JUMPDEST PUSH2 0x278E DUP8 DUP3 DUP9 ADD PUSH2 0x26E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x27A3 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP2 EQ PUSH2 0x27AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C0 DUP2 PUSH2 0x279A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DD JUMPI PUSH2 0x27DC PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EB DUP6 DUP3 DUP7 ADD PUSH2 0x27B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27FC DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x281B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2828 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x2835 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x287D JUMPI PUSH2 0x287C PUSH2 0x283D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x288E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289E DUP3 PUSH2 0x2880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AE DUP2 PUSH2 0x2893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2909 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2920 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x292A DUP2 DUP6 PUSH2 0x28DA JUMP JUMPDEST SWAP4 POP PUSH2 0x293A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH2 0x2943 DUP2 PUSH2 0x2537 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2968 DUP2 DUP5 PUSH2 0x2915 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2986 JUMPI PUSH2 0x2985 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2994 DUP5 DUP3 DUP6 ADD PUSH2 0x27B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74416C6C52657665616C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D3 PUSH1 0xE DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x29DE DUP3 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A02 DUP2 PUSH2 0x29C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6D656761416C7265616479436F6D706C657465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH1 0x15 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4A DUP3 PUSH2 0x2A09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A6E DUP2 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABA DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x2AC4 DUP2 DUP6 PUSH2 0x2AA4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28EB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEC DUP3 DUP6 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF8 DUP3 DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1A DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B2A JUMPI PUSH2 0x2B29 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B6F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2BA1 JUMPI PUSH2 0x2BA0 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2BC1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BDB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BE8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x477265617465724F72457175616C5468616E4E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C56 PUSH1 0x13 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C61 DUP3 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C85 DUP2 PUSH2 0x2C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x544E6F744D617463686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC2 PUSH1 0xB DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCD DUP3 PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF1 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP5 DUP3 DUP6 ADD PUSH2 0x25F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265636F764E6F744D6174636858000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5B PUSH1 0xE DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D66 DUP3 PUSH2 0x2D25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8A DUP2 PUSH2 0x2D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2DA6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2DC0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2DCD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE1 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEC DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E04 JUMPI PUSH2 0x2E03 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E64 JUMPI PUSH2 0x2E63 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2E8C DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x2E96 DUP2 DUP7 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2EB1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2EC6 JUMPI PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2EF9 JUMP JUMPDEST PUSH2 0x2ECF DUP6 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EF1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2ED2 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP3 DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697452657665616C4475726174696F6E4C6573735468616E436F6D6D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x69744475726174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH1 0x2A DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746167654E6F7446696E697368656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE1 PUSH1 0x10 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEC DUP3 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3010 DUP2 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3064 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x306E DUP7 DUP4 PUSH2 0x3027 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30AB PUSH2 0x30A6 PUSH2 0x30A1 DUP5 PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30C5 DUP4 PUSH2 0x3090 JUMP JUMPDEST PUSH2 0x30D9 PUSH2 0x30D1 DUP3 PUSH2 0x30B2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3034 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x30EE PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x30F9 DUP2 DUP5 DUP5 PUSH2 0x30BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x311D JUMPI PUSH2 0x3112 PUSH1 0x0 DUP3 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x30FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3162 JUMPI PUSH2 0x3133 DUP2 PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x313C DUP5 PUSH2 0x3017 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x314B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x315F PUSH2 0x3157 DUP6 PUSH2 0x3017 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x30FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3167 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319E DUP4 DUP4 PUSH2 0x3174 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31B7 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31CF PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH2 0x31DA DUP3 SLOAD PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x31E5 DUP3 DUP3 DUP6 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3218 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3206 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3210 DUP6 DUP3 PUSH2 0x3192 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3278 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3226 DUP7 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x324E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3229 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x326B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3267 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3174 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x3296 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x32A3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32B0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32BD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32CA PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32D7 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32E4 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32F1 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32FF PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74436F6D6D69747465645061727469636970616E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3343 PUSH1 0x17 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x334E DUP3 PUSH2 0x330D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3372 DUP2 PUSH2 0x3336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647952657665616C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AF PUSH1 0xF DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x33BA DUP3 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33DE DUP2 PUSH2 0x33A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414E6F744D61746368436F6D6D69740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341B PUSH1 0xF DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3426 DUP3 PUSH2 0x33E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x344A DUP2 PUSH2 0x340E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345C DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x346F JUMPI PUSH2 0x346E PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D6 PUSH1 0x26 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x34E1 DUP3 PUSH2 0x347A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3505 DUP2 PUSH2 0x34C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479436F6D6D697474656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3542 PUSH1 0x10 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x354D DUP3 PUSH2 0x350C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3571 DUP2 PUSH2 0x3535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x358D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x359A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 DUP7 PUSH2 0x2915 JUMP JUMPDEST SWAP1 POP PUSH2 0x35BB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x35C8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E496E76616C69644174546869735374616765000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3608 PUSH1 0x1A DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3613 DUP3 PUSH2 0x35D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3637 DUP2 PUSH2 0x35FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3649 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x3654 DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3664 JUMPI PUSH2 0x3663 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A5 PUSH1 0x20 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x36B0 DUP3 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D4 DUP2 PUSH2 0x3698 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C46696E6973686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3711 PUSH1 0xB DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x371C DUP3 PUSH2 0x36DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3740 DUP2 PUSH2 0x3704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3752 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x375D DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x376B DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3782 JUMPI PUSH2 0x3781 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3795 DUP3 DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT BALANCE EXTCODEHASH SMOD 0xD7 DUP12 SELFBALANCE 0xA9 PUSH7 0x3C8F84DD0DAD20 0x1E 0xB0 0x1F DUP5 0x24 PUSH5 0x54464CF9C SWAP11 0xE RETURNDATACOPY 0xBC 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"469:12147:2:-:0;;;3472:54;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3504:15:2;3496:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;469:12147;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;7:180:5:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;469:12147:2;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":7307,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":8668,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":7433,"id":111,"parameterSlots":1,"returnSlots":0},"@calculateOmega_673":{"entryPoint":886,"id":673,"parameterSlots":0,"returnSlots":1},"@checkStage_1070":{"entryPoint":2934,"id":1070,"parameterSlots":0,"returnSlots":0},"@commitDuration_182":{"entryPoint":2792,"id":182,"parameterSlots":0,"returnSlots":0},"@commitRevealDuration_184":{"entryPoint":2818,"id":184,"parameterSlots":0,"returnSlots":0},"@commitRevealValues_200":{"entryPoint":1650,"id":200,"parameterSlots":0,"returnSlots":0},"@commit_396":{"entryPoint":5484,"id":396,"parameterSlots":1,"returnSlots":0},"@commitsString_190":{"entryPoint":5211,"id":190,"parameterSlots":0,"returnSlots":0},"@count_186":{"entryPoint":880,"id":186,"parameterSlots":0,"returnSlots":0},"@equalStage_1084":{"entryPoint":6436,"id":1084,"parameterSlots":1,"returnSlots":0},"@log10_1675":{"entryPoint":7860,"id":1675,"parameterSlots":1,"returnSlots":1},"@modHash_1218":{"entryPoint":8676,"id":1218,"parameterSlots":2,"returnSlots":1},"@nextStage_1124":{"entryPoint":7629,"id":1124,"parameterSlots":0,"returnSlots":0},"@overStage_1098":{"entryPoint":6861,"id":1098,"parameterSlots":1,"returnSlots":0},"@owner_40":{"entryPoint":3347,"id":40,"parameterSlots":0,"returnSlots":1},"@powerModN_1499":{"entryPoint":6762,"id":1499,"parameterSlots":3,"returnSlots":1},"@processSingleHalvingProof_1358":{"entryPoint":8199,"id":1358,"parameterSlots":1,"returnSlots":1},"@recover_846":{"entryPoint":1737,"id":846,"parameterSlots":3,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2798,"id":68,"parameterSlots":0,"returnSlots":0},"@reveal_516":{"entryPoint":4288,"id":516,"parameterSlots":1,"returnSlots":0},"@round_188":{"entryPoint":1644,"id":188,"parameterSlots":0,"returnSlots":0},"@stage_193":{"entryPoint":4269,"id":193,"parameterSlots":0,"returnSlots":0},"@startTime_180":{"entryPoint":2928,"id":180,"parameterSlots":0,"returnSlots":0},"@start_982":{"entryPoint":3388,"id":982,"parameterSlots":4,"returnSlots":0},"@toString_1546":{"entryPoint":6556,"id":1546,"parameterSlots":1,"returnSlots":1},"@transferOwnership_91":{"entryPoint":5353,"id":91,"parameterSlots":1,"returnSlots":0},"@userInfosAtRound_212":{"entryPoint":4188,"id":212,"parameterSlots":0,"returnSlots":0},"@valuesAtRound_205":{"entryPoint":2824,"id":205,"parameterSlots":0,"returnSlots":0},"@verifyRecursiveHalvingProof_1446":{"entryPoint":6981,"id":1446,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr":{"entryPoint":9856,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":9105,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr":{"entryPoint":9961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_VDFClaim_$1185_memory_ptr":{"entryPoint":9716,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10608,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10182,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_VDFClaim_$1185_memory_ptr":{"entryPoint":11512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":9191,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":8906,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr":{"entryPoint":10007,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9020,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9344,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack":{"entryPoint":10405,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack":{"entryPoint":11598,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack":{"entryPoint":10694,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack":{"entryPoint":10802,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack":{"entryPoint":11445,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack":{"entryPoint":13326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack":{"entryPoint":13110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13513,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack":{"entryPoint":13819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack":{"entryPoint":13621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack":{"entryPoint":11337,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack":{"entryPoint":14084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack":{"entryPoint":12136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack":{"entryPoint":13218,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack":{"entryPoint":12244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8800,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10976,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13688,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11665,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12928,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed":{"entryPoint":10420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11633,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10729,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10837,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13145,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13548,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13854,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13656,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12171,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14011,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13253,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12279,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":10246,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":9035,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":11180,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":9359,"id":null,"parameterSlots":10,"returnSlots":1},"allocate_memory":{"entryPoint":9640,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8842,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr":{"entryPoint":9667,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":11882,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10447,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10458,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10916,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11734,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":13886,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14151,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":12577,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9002,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9332,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Stages_$145":{"entryPoint":10368,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8970,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8790,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":12542,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Stages_$145_to_t_uint8":{"entryPoint":10387,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":12432,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":12718,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10475,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":13393,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":12311,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11833,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":12690,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9591,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12422,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11108,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":12660,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":11012,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11061,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10869,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10301,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11786,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11249,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9544,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":12466,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":9095,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9090,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":9711,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9100,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8857,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8852,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9527,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":12327,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":12647,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":12518,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5":{"entryPoint":11557,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042":{"entryPoint":10653,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6":{"entryPoint":10761,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c":{"entryPoint":11404,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba":{"entryPoint":13285,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f":{"entryPoint":13069,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13434,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc":{"entryPoint":13778,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532":{"entryPoint":13580,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162":{"entryPoint":11296,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa":{"entryPoint":14043,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68":{"entryPoint":12057,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8":{"entryPoint":13177,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874":{"entryPoint":12203,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":12340,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":12476,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Stages_$145":{"entryPoint":10348,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10138,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":12513,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:41725:5","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:5","statements":[{"nodeType":"YulAssignment","src":"62:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:5","type":""}],"src":"7:77:5"},{"body":{"nodeType":"YulBlock","src":"155:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:5"},"nodeType":"YulFunctionCall","src":"177:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:5"},"nodeType":"YulFunctionCall","src":"165:37:5"},"nodeType":"YulExpressionStatement","src":"165:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:5","type":""}],"src":"90:118:5"},{"body":{"nodeType":"YulBlock","src":"312:124:5","statements":[{"nodeType":"YulAssignment","src":"322:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:5"},"nodeType":"YulFunctionCall","src":"330:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:5"},"nodeType":"YulFunctionCall","src":"411:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:5"},"nodeType":"YulFunctionCall","src":"358:71:5"},"nodeType":"YulExpressionStatement","src":"358:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:5","type":""}],"src":"214:222:5"},{"body":{"nodeType":"YulBlock","src":"482:35:5","statements":[{"nodeType":"YulAssignment","src":"492:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:5"},"nodeType":"YulFunctionCall","src":"502:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:5","type":""}],"src":"442:75:5"},{"body":{"nodeType":"YulBlock","src":"612:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:5"},"nodeType":"YulFunctionCall","src":"622:12:5"},"nodeType":"YulExpressionStatement","src":"622:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:5"},{"body":{"nodeType":"YulBlock","src":"735:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:5"},"nodeType":"YulFunctionCall","src":"745:12:5"},"nodeType":"YulExpressionStatement","src":"745:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:5"},{"body":{"nodeType":"YulBlock","src":"812:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:5"},"nodeType":"YulFunctionCall","src":"871:12:5"},"nodeType":"YulExpressionStatement","src":"871:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:5"},"nodeType":"YulFunctionCall","src":"842:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:5"},"nodeType":"YulFunctionCall","src":"832:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:5"},"nodeType":"YulFunctionCall","src":"825:43:5"},"nodeType":"YulIf","src":"822:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:5","type":""}],"src":"769:122:5"},{"body":{"nodeType":"YulBlock","src":"949:87:5","statements":[{"nodeType":"YulAssignment","src":"959:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:5"},"nodeType":"YulFunctionCall","src":"968:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:5"},"nodeType":"YulFunctionCall","src":"997:33:5"},"nodeType":"YulExpressionStatement","src":"997:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:5","type":""}],"src":"897:139:5"},{"body":{"nodeType":"YulBlock","src":"1125:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"1171:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1173:77:5"},"nodeType":"YulFunctionCall","src":"1173:79:5"},"nodeType":"YulExpressionStatement","src":"1173:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1146:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"1155:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1142:3:5"},"nodeType":"YulFunctionCall","src":"1142:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"1167:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1138:3:5"},"nodeType":"YulFunctionCall","src":"1138:32:5"},"nodeType":"YulIf","src":"1135:119:5"},{"nodeType":"YulBlock","src":"1264:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1279:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1293:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1283:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1308:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1343:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1339:3:5"},"nodeType":"YulFunctionCall","src":"1339:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1363:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1318:20:5"},"nodeType":"YulFunctionCall","src":"1318:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1308:6:5"}]}]},{"nodeType":"YulBlock","src":"1391:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1406:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1420:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1410:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1436:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1471:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1482:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1467:3:5"},"nodeType":"YulFunctionCall","src":"1467:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1491:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1446:20:5"},"nodeType":"YulFunctionCall","src":"1446:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1436:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1087:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1098:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1110:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1118:6:5","type":""}],"src":"1042:474:5"},{"body":{"nodeType":"YulBlock","src":"1567:81:5","statements":[{"nodeType":"YulAssignment","src":"1577:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1592:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1599:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1588:3:5"},"nodeType":"YulFunctionCall","src":"1588:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1577:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1549:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1559:7:5","type":""}],"src":"1522:126:5"},{"body":{"nodeType":"YulBlock","src":"1699:51:5","statements":[{"nodeType":"YulAssignment","src":"1709:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1738:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1720:17:5"},"nodeType":"YulFunctionCall","src":"1720:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1709:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1681:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1691:7:5","type":""}],"src":"1654:96:5"},{"body":{"nodeType":"YulBlock","src":"1821:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1838:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1861:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1843:17:5"},"nodeType":"YulFunctionCall","src":"1843:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1831:6:5"},"nodeType":"YulFunctionCall","src":"1831:37:5"},"nodeType":"YulExpressionStatement","src":"1831:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1809:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1816:3:5","type":""}],"src":"1756:118:5"},{"body":{"nodeType":"YulBlock","src":"2034:288:5","statements":[{"nodeType":"YulAssignment","src":"2044:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2056:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2067:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2052:3:5"},"nodeType":"YulFunctionCall","src":"2052:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2044:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2124:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2137:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2148:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2133:3:5"},"nodeType":"YulFunctionCall","src":"2133:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2080:43:5"},"nodeType":"YulFunctionCall","src":"2080:71:5"},"nodeType":"YulExpressionStatement","src":"2080:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2205:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2218:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2229:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2214:3:5"},"nodeType":"YulFunctionCall","src":"2214:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2161:43:5"},"nodeType":"YulFunctionCall","src":"2161:72:5"},"nodeType":"YulExpressionStatement","src":"2161:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2287:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2300:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2311:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2296:3:5"},"nodeType":"YulFunctionCall","src":"2296:18:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2243:43:5"},"nodeType":"YulFunctionCall","src":"2243:72:5"},"nodeType":"YulExpressionStatement","src":"2243:72:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1990:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2002:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2010:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2018:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2029:4:5","type":""}],"src":"1880:442:5"},{"body":{"nodeType":"YulBlock","src":"2417:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2434:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2437:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2427:6:5"},"nodeType":"YulFunctionCall","src":"2427:12:5"},"nodeType":"YulExpressionStatement","src":"2427:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2328:117:5"},{"body":{"nodeType":"YulBlock","src":"2540:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2557:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2550:6:5"},"nodeType":"YulFunctionCall","src":"2550:12:5"},"nodeType":"YulExpressionStatement","src":"2550:12:5"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"2451:117:5"},{"body":{"nodeType":"YulBlock","src":"2663:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2680:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2683:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2673:6:5"},"nodeType":"YulFunctionCall","src":"2673:12:5"},"nodeType":"YulExpressionStatement","src":"2673:12:5"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2574:117:5"},{"body":{"nodeType":"YulBlock","src":"2853:478:5","statements":[{"body":{"nodeType":"YulBlock","src":"2902:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2904:77:5"},"nodeType":"YulFunctionCall","src":"2904:79:5"},"nodeType":"YulExpressionStatement","src":"2904:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2881:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2889:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2877:3:5"},"nodeType":"YulFunctionCall","src":"2877:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2896:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2873:3:5"},"nodeType":"YulFunctionCall","src":"2873:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2866:6:5"},"nodeType":"YulFunctionCall","src":"2866:35:5"},"nodeType":"YulIf","src":"2863:122:5"},{"nodeType":"YulAssignment","src":"2994:30:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3017:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3004:12:5"},"nodeType":"YulFunctionCall","src":"3004:20:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2994:6:5"}]},{"body":{"nodeType":"YulBlock","src":"3067:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3069:77:5"},"nodeType":"YulFunctionCall","src":"3069:79:5"},"nodeType":"YulExpressionStatement","src":"3069:79:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3039:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3047:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3036:2:5"},"nodeType":"YulFunctionCall","src":"3036:30:5"},"nodeType":"YulIf","src":"3033:117:5"},{"nodeType":"YulAssignment","src":"3159:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3175:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3183:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3171:3:5"},"nodeType":"YulFunctionCall","src":"3171:17:5"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3159:8:5"}]},{"body":{"nodeType":"YulBlock","src":"3242:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"3244:77:5"},"nodeType":"YulFunctionCall","src":"3244:79:5"},"nodeType":"YulExpressionStatement","src":"3244:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3207:8:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3221:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3229:4:5","type":"","value":"0xa0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3217:3:5"},"nodeType":"YulFunctionCall","src":"3217:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:5"},"nodeType":"YulFunctionCall","src":"3203:32:5"},{"name":"end","nodeType":"YulIdentifier","src":"3237:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3200:2:5"},"nodeType":"YulFunctionCall","src":"3200:41:5"},"nodeType":"YulIf","src":"3197:128:5"}]},"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2820:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2828:3:5","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2836:8:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"2846:6:5","type":""}],"src":"2735:596:5"},{"body":{"nodeType":"YulBlock","src":"3483:614:5","statements":[{"body":{"nodeType":"YulBlock","src":"3529:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3531:77:5"},"nodeType":"YulFunctionCall","src":"3531:79:5"},"nodeType":"YulExpressionStatement","src":"3531:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3504:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"3513:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3500:3:5"},"nodeType":"YulFunctionCall","src":"3500:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"3525:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3496:3:5"},"nodeType":"YulFunctionCall","src":"3496:32:5"},"nodeType":"YulIf","src":"3493:119:5"},{"nodeType":"YulBlock","src":"3622:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3637:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"3651:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3641:6:5","type":""}]},{"nodeType":"YulAssignment","src":"3666:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3701:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3712:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3697:3:5"},"nodeType":"YulFunctionCall","src":"3697:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3721:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3676:20:5"},"nodeType":"YulFunctionCall","src":"3676:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3666:6:5"}]}]},{"nodeType":"YulBlock","src":"3749:341:5","statements":[{"nodeType":"YulVariableDeclaration","src":"3764:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3806:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3791:3:5"},"nodeType":"YulFunctionCall","src":"3791:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3778:12:5"},"nodeType":"YulFunctionCall","src":"3778:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3768:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"3857:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3859:77:5"},"nodeType":"YulFunctionCall","src":"3859:79:5"},"nodeType":"YulExpressionStatement","src":"3859:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3829:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3837:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3826:2:5"},"nodeType":"YulFunctionCall","src":"3826:30:5"},"nodeType":"YulIf","src":"3823:117:5"},{"nodeType":"YulAssignment","src":"3954:126:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4052:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4063:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:5"},"nodeType":"YulFunctionCall","src":"4048:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4072:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"3972:75:5"},"nodeType":"YulFunctionCall","src":"3972:108:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3954:6:5"},{"name":"value2","nodeType":"YulIdentifier","src":"3962:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3437:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3448:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3460:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3468:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3476:6:5","type":""}],"src":"3337:760:5"},{"body":{"nodeType":"YulBlock","src":"4169:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"4215:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4217:77:5"},"nodeType":"YulFunctionCall","src":"4217:79:5"},"nodeType":"YulExpressionStatement","src":"4217:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4190:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4199:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4186:3:5"},"nodeType":"YulFunctionCall","src":"4186:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4211:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4182:3:5"},"nodeType":"YulFunctionCall","src":"4182:32:5"},"nodeType":"YulIf","src":"4179:119:5"},{"nodeType":"YulBlock","src":"4308:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:5","type":""}]},{"nodeType":"YulAssignment","src":"4352:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4387:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"4398:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4383:3:5"},"nodeType":"YulFunctionCall","src":"4383:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4407:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4362:20:5"},"nodeType":"YulFunctionCall","src":"4362:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4352:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4139:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4150:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4162:6:5","type":""}],"src":"4103:329:5"},{"body":{"nodeType":"YulBlock","src":"4480:48:5","statements":[{"nodeType":"YulAssignment","src":"4490:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4515:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4508:6:5"},"nodeType":"YulFunctionCall","src":"4508:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4501:6:5"},"nodeType":"YulFunctionCall","src":"4501:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4490:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4462:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4472:7:5","type":""}],"src":"4438:90:5"},{"body":{"nodeType":"YulBlock","src":"4593:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4610:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4630:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4615:14:5"},"nodeType":"YulFunctionCall","src":"4615:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4603:6:5"},"nodeType":"YulFunctionCall","src":"4603:34:5"},"nodeType":"YulExpressionStatement","src":"4603:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4581:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4588:3:5","type":""}],"src":"4534:109:5"},{"body":{"nodeType":"YulBlock","src":"4959:774:5","statements":[{"nodeType":"YulAssignment","src":"4969:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4981:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4992:3:5","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4977:3:5"},"nodeType":"YulFunctionCall","src":"4977:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4969:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5050:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5063:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5074:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5059:3:5"},"nodeType":"YulFunctionCall","src":"5059:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5006:43:5"},"nodeType":"YulFunctionCall","src":"5006:71:5"},"nodeType":"YulExpressionStatement","src":"5006:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5131:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5144:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5155:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:5"},"nodeType":"YulFunctionCall","src":"5140:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5087:43:5"},"nodeType":"YulFunctionCall","src":"5087:72:5"},"nodeType":"YulExpressionStatement","src":"5087:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5213:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5226:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5237:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5222:3:5"},"nodeType":"YulFunctionCall","src":"5222:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5169:43:5"},"nodeType":"YulFunctionCall","src":"5169:72:5"},"nodeType":"YulExpressionStatement","src":"5169:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5295:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5308:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5319:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5304:3:5"},"nodeType":"YulFunctionCall","src":"5304:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5251:43:5"},"nodeType":"YulFunctionCall","src":"5251:72:5"},"nodeType":"YulExpressionStatement","src":"5251:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5377:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5390:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5401:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5386:3:5"},"nodeType":"YulFunctionCall","src":"5386:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5333:43:5"},"nodeType":"YulFunctionCall","src":"5333:73:5"},"nodeType":"YulExpressionStatement","src":"5333:73:5"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"5460:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5473:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5484:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5469:3:5"},"nodeType":"YulFunctionCall","src":"5469:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5416:43:5"},"nodeType":"YulFunctionCall","src":"5416:73:5"},"nodeType":"YulExpressionStatement","src":"5416:73:5"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"5543:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5556:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5567:3:5","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:5"},"nodeType":"YulFunctionCall","src":"5552:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5499:43:5"},"nodeType":"YulFunctionCall","src":"5499:73:5"},"nodeType":"YulExpressionStatement","src":"5499:73:5"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"5620:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5633:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5644:3:5","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5629:3:5"},"nodeType":"YulFunctionCall","src":"5629:19:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5582:37:5"},"nodeType":"YulFunctionCall","src":"5582:67:5"},"nodeType":"YulExpressionStatement","src":"5582:67:5"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"5697:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5710:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5721:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5706:3:5"},"nodeType":"YulFunctionCall","src":"5706:19:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5659:37:5"},"nodeType":"YulFunctionCall","src":"5659:67:5"},"nodeType":"YulExpressionStatement","src":"5659:67:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4867:9:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"4879:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"4887:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4895:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4903:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4911:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4919:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4927:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4935:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4943:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4954:4:5","type":""}],"src":"4649:1084:5"},{"body":{"nodeType":"YulBlock","src":"5837:124:5","statements":[{"nodeType":"YulAssignment","src":"5847:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5859:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5870:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5855:3:5"},"nodeType":"YulFunctionCall","src":"5855:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5847:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5927:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5951:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:5"},"nodeType":"YulFunctionCall","src":"5936:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5883:43:5"},"nodeType":"YulFunctionCall","src":"5883:71:5"},"nodeType":"YulExpressionStatement","src":"5883:71:5"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5809:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5821:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5832:4:5","type":""}],"src":"5739:222:5"},{"body":{"nodeType":"YulBlock","src":"6015:54:5","statements":[{"nodeType":"YulAssignment","src":"6025:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6043:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"6050:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6039:3:5"},"nodeType":"YulFunctionCall","src":"6039:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6059:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6055:3:5"},"nodeType":"YulFunctionCall","src":"6055:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6035:3:5"},"nodeType":"YulFunctionCall","src":"6035:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6025:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5998:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6008:6:5","type":""}],"src":"5967:102:5"},{"body":{"nodeType":"YulBlock","src":"6103:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6120:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6123:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6113:6:5"},"nodeType":"YulFunctionCall","src":"6113:88:5"},"nodeType":"YulExpressionStatement","src":"6113:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6217:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6220:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6210:6:5"},"nodeType":"YulFunctionCall","src":"6210:15:5"},"nodeType":"YulExpressionStatement","src":"6210:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6241:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6244:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6234:6:5"},"nodeType":"YulFunctionCall","src":"6234:15:5"},"nodeType":"YulExpressionStatement","src":"6234:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6075:180:5"},{"body":{"nodeType":"YulBlock","src":"6304:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6314:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6336:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6366:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6344:21:5"},"nodeType":"YulFunctionCall","src":"6344:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6332:3:5"},"nodeType":"YulFunctionCall","src":"6332:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6318:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"6483:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6485:16:5"},"nodeType":"YulFunctionCall","src":"6485:18:5"},"nodeType":"YulExpressionStatement","src":"6485:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6426:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"6438:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6423:2:5"},"nodeType":"YulFunctionCall","src":"6423:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6462:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6474:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6459:2:5"},"nodeType":"YulFunctionCall","src":"6459:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6420:2:5"},"nodeType":"YulFunctionCall","src":"6420:62:5"},"nodeType":"YulIf","src":"6417:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6521:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6525:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6514:6:5"},"nodeType":"YulFunctionCall","src":"6514:22:5"},"nodeType":"YulExpressionStatement","src":"6514:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6290:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"6298:4:5","type":""}],"src":"6261:281:5"},{"body":{"nodeType":"YulBlock","src":"6589:88:5","statements":[{"nodeType":"YulAssignment","src":"6599:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6609:18:5"},"nodeType":"YulFunctionCall","src":"6609:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6599:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6658:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"6666:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6638:19:5"},"nodeType":"YulFunctionCall","src":"6638:33:5"},"nodeType":"YulExpressionStatement","src":"6638:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6573:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6582:6:5","type":""}],"src":"6548:129:5"},{"body":{"nodeType":"YulBlock","src":"6791:229:5","statements":[{"body":{"nodeType":"YulBlock","src":"6896:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6898:16:5"},"nodeType":"YulFunctionCall","src":"6898:18:5"},"nodeType":"YulExpressionStatement","src":"6898:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6868:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6876:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6865:2:5"},"nodeType":"YulFunctionCall","src":"6865:30:5"},"nodeType":"YulIf","src":"6862:56:5"},{"nodeType":"YulAssignment","src":"6928:25:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6940:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"6948:4:5","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6936:3:5"},"nodeType":"YulFunctionCall","src":"6936:17:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6928:4:5"}]},{"nodeType":"YulAssignment","src":"6990:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7002:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"7008:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6998:3:5"},"nodeType":"YulFunctionCall","src":"6998:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6990:4:5"}]}]},"name":"array_allocation_size_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6775:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6786:4:5","type":""}],"src":"6683:337:5"},{"body":{"nodeType":"YulBlock","src":"7115:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7132:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7135:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7125:6:5"},"nodeType":"YulFunctionCall","src":"7125:12:5"},"nodeType":"YulExpressionStatement","src":"7125:12:5"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"7026:117:5"},{"body":{"nodeType":"YulBlock","src":"7238:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7255:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7258:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7248:6:5"},"nodeType":"YulFunctionCall","src":"7248:12:5"},"nodeType":"YulExpressionStatement","src":"7248:12:5"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"7149:117:5"},{"body":{"nodeType":"YulBlock","src":"7389:963:5","statements":[{"body":{"nodeType":"YulBlock","src":"7433:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"7435:77:5"},"nodeType":"YulFunctionCall","src":"7435:79:5"},"nodeType":"YulExpressionStatement","src":"7435:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"7410:3:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"7415:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7406:3:5"},"nodeType":"YulFunctionCall","src":"7406:19:5"},{"kind":"number","nodeType":"YulLiteral","src":"7427:4:5","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7402:3:5"},"nodeType":"YulFunctionCall","src":"7402:30:5"},"nodeType":"YulIf","src":"7399:117:5"},{"nodeType":"YulAssignment","src":"7525:30:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7550:4:5","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7534:15:5"},"nodeType":"YulFunctionCall","src":"7534:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7525:5:5"}]},{"nodeType":"YulBlock","src":"7565:147:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7597:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7611:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7601:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7637:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7644:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7633:3:5"},"nodeType":"YulFunctionCall","src":"7633:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7676:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7687:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:5"},"nodeType":"YulFunctionCall","src":"7672:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"7696:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7651:20:5"},"nodeType":"YulFunctionCall","src":"7651:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7626:6:5"},"nodeType":"YulFunctionCall","src":"7626:75:5"},"nodeType":"YulExpressionStatement","src":"7626:75:5"}]},{"nodeType":"YulBlock","src":"7722:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7754:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7768:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7758:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7795:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7802:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:5"},"nodeType":"YulFunctionCall","src":"7791:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7834:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"7845:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7830:3:5"},"nodeType":"YulFunctionCall","src":"7830:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"7854:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7809:20:5"},"nodeType":"YulFunctionCall","src":"7809:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7784:6:5"},"nodeType":"YulFunctionCall","src":"7784:75:5"},"nodeType":"YulExpressionStatement","src":"7784:75:5"}]},{"nodeType":"YulBlock","src":"7880:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7912:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7926:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7916:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7953:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"7960:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7949:3:5"},"nodeType":"YulFunctionCall","src":"7949:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8003:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:5"},"nodeType":"YulFunctionCall","src":"7988:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"8012:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7967:20:5"},"nodeType":"YulFunctionCall","src":"7967:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7942:6:5"},"nodeType":"YulFunctionCall","src":"7942:75:5"},"nodeType":"YulExpressionStatement","src":"7942:75:5"}]},{"nodeType":"YulBlock","src":"8038:148:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8070:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8084:2:5","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8074:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8111:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8118:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8107:3:5"},"nodeType":"YulFunctionCall","src":"8107:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8150:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8161:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8146:3:5"},"nodeType":"YulFunctionCall","src":"8146:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"8170:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8125:20:5"},"nodeType":"YulFunctionCall","src":"8125:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8100:6:5"},"nodeType":"YulFunctionCall","src":"8100:75:5"},"nodeType":"YulExpressionStatement","src":"8100:75:5"}]},{"nodeType":"YulBlock","src":"8196:149:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8228:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8242:3:5","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8232:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8270:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8277:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8266:3:5"},"nodeType":"YulFunctionCall","src":"8266:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8309:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"8320:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8305:3:5"},"nodeType":"YulFunctionCall","src":"8305:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"8329:3:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8284:20:5"},"nodeType":"YulFunctionCall","src":"8284:49:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8259:6:5"},"nodeType":"YulFunctionCall","src":"8259:75:5"},"nodeType":"YulExpressionStatement","src":"8259:75:5"}]}]},"name":"abi_decode_t_struct$_VDFClaim_$1185_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7364:9:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"7375:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7383:5:5","type":""}],"src":"7308:1044:5"},{"body":{"nodeType":"YulBlock","src":"8524:660:5","statements":[{"nodeType":"YulAssignment","src":"8534:116:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8642:6:5"}],"functionName":{"name":"array_allocation_size_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8559:82:5"},"nodeType":"YulFunctionCall","src":"8559:90:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8543:15:5"},"nodeType":"YulFunctionCall","src":"8543:107:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8534:5:5"}]},{"nodeType":"YulVariableDeclaration","src":"8659:16:5","value":{"name":"array","nodeType":"YulIdentifier","src":"8670:5:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8663:3:5","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8692:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"8699:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8685:6:5"},"nodeType":"YulFunctionCall","src":"8685:21:5"},"nodeType":"YulExpressionStatement","src":"8685:21:5"},{"nodeType":"YulAssignment","src":"8715:23:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8726:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8733:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8722:3:5"},"nodeType":"YulFunctionCall","src":"8722:16:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8715:3:5"}]},{"nodeType":"YulVariableDeclaration","src":"8748:44:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8766:6:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8778:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8786:4:5","type":"","value":"0xa0"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8774:3:5"},"nodeType":"YulFunctionCall","src":"8774:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8762:3:5"},"nodeType":"YulFunctionCall","src":"8762:30:5"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8752:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8820:103:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8834:77:5"},"nodeType":"YulFunctionCall","src":"8834:79:5"},"nodeType":"YulExpressionStatement","src":"8834:79:5"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8807:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"8815:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8804:2:5"},"nodeType":"YulFunctionCall","src":"8804:15:5"},"nodeType":"YulIf","src":"8801:122:5"},{"body":{"nodeType":"YulBlock","src":"9008:170:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9023:21:5","value":{"name":"src","nodeType":"YulIdentifier","src":"9041:3:5"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9027:10:5","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9065:3:5"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9117:10:5"},{"name":"end","nodeType":"YulIdentifier","src":"9129:3:5"}],"functionName":{"name":"abi_decode_t_struct$_VDFClaim_$1185_memory_ptr","nodeType":"YulIdentifier","src":"9070:46:5"},"nodeType":"YulFunctionCall","src":"9070:63:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9058:6:5"},"nodeType":"YulFunctionCall","src":"9058:76:5"},"nodeType":"YulExpressionStatement","src":"9058:76:5"},{"nodeType":"YulAssignment","src":"9147:21:5","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9158:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"9163:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9154:3:5"},"nodeType":"YulFunctionCall","src":"9154:14:5"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9147:3:5"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8961:3:5"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8966:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8958:2:5"},"nodeType":"YulFunctionCall","src":"8958:15:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8974:25:5","statements":[{"nodeType":"YulAssignment","src":"8976:21:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8987:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8992:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:5"},"nodeType":"YulFunctionCall","src":"8983:14:5"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8976:3:5"}]}]},"pre":{"nodeType":"YulBlock","src":"8936:21:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8938:17:5","value":{"name":"offset","nodeType":"YulIdentifier","src":"8949:6:5"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8942:3:5","type":""}]}]},"src":"8932:246:5"}]},"name":"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8494:6:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"8502:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"8510:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8518:5:5","type":""}],"src":"8396:788:5"},{"body":{"nodeType":"YulBlock","src":"9331:319:5","statements":[{"body":{"nodeType":"YulBlock","src":"9380:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9382:77:5"},"nodeType":"YulFunctionCall","src":"9382:79:5"},"nodeType":"YulExpressionStatement","src":"9382:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9359:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"9367:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9355:3:5"},"nodeType":"YulFunctionCall","src":"9355:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"9374:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9351:3:5"},"nodeType":"YulFunctionCall","src":"9351:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9344:6:5"},"nodeType":"YulFunctionCall","src":"9344:35:5"},"nodeType":"YulIf","src":"9341:122:5"},{"nodeType":"YulVariableDeclaration","src":"9472:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9499:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9486:12:5"},"nodeType":"YulFunctionCall","src":"9486:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9476:6:5","type":""}]},{"nodeType":"YulAssignment","src":"9515:129:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9617:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"9625:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9613:3:5"},"nodeType":"YulFunctionCall","src":"9613:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"9632:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"9640:3:5"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9524:88:5"},"nodeType":"YulFunctionCall","src":"9524:120:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9515:5:5"}]}]},"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9309:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"9317:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9325:5:5","type":""}],"src":"9228:422:5"},{"body":{"nodeType":"YulBlock","src":"9824:859:5","statements":[{"body":{"nodeType":"YulBlock","src":"9871:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9873:77:5"},"nodeType":"YulFunctionCall","src":"9873:79:5"},"nodeType":"YulExpressionStatement","src":"9873:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9845:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"9854:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9841:3:5"},"nodeType":"YulFunctionCall","src":"9841:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"9866:3:5","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9837:3:5"},"nodeType":"YulFunctionCall","src":"9837:33:5"},"nodeType":"YulIf","src":"9834:120:5"},{"nodeType":"YulBlock","src":"9964:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9979:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9993:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9983:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10008:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10043:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10054:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10039:3:5"},"nodeType":"YulFunctionCall","src":"10039:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10063:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10018:20:5"},"nodeType":"YulFunctionCall","src":"10018:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10008:6:5"}]}]},{"nodeType":"YulBlock","src":"10091:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10106:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10120:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10110:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10136:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10171:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10182:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10167:3:5"},"nodeType":"YulFunctionCall","src":"10167:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10191:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10146:20:5"},"nodeType":"YulFunctionCall","src":"10146:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10136:6:5"}]}]},{"nodeType":"YulBlock","src":"10219:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10234:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10248:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10238:6:5","type":""}]},{"nodeType":"YulAssignment","src":"10264:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10299:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10310:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10295:3:5"},"nodeType":"YulFunctionCall","src":"10295:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10319:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10274:20:5"},"nodeType":"YulFunctionCall","src":"10274:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10264:6:5"}]}]},{"nodeType":"YulBlock","src":"10347:329:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10362:46:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10393:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10404:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10389:3:5"},"nodeType":"YulFunctionCall","src":"10389:18:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10376:12:5"},"nodeType":"YulFunctionCall","src":"10376:32:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10366:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"10455:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10457:77:5"},"nodeType":"YulFunctionCall","src":"10457:79:5"},"nodeType":"YulExpressionStatement","src":"10457:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10427:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"10435:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10424:2:5"},"nodeType":"YulFunctionCall","src":"10424:30:5"},"nodeType":"YulIf","src":"10421:117:5"},{"nodeType":"YulAssignment","src":"10552:114:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10638:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10649:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10634:3:5"},"nodeType":"YulFunctionCall","src":"10634:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10658:7:5"}],"functionName":{"name":"abi_decode_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10562:71:5"},"nodeType":"YulFunctionCall","src":"10562:104:5"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10552:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9770:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9781:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9793:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9801:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9809:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9817:6:5","type":""}],"src":"9656:1027:5"},{"body":{"nodeType":"YulBlock","src":"10732:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"10789:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10798:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10801:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10791:6:5"},"nodeType":"YulFunctionCall","src":"10791:12:5"},"nodeType":"YulExpressionStatement","src":"10791:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10755:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10780:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10762:17:5"},"nodeType":"YulFunctionCall","src":"10762:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10752:2:5"},"nodeType":"YulFunctionCall","src":"10752:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10745:6:5"},"nodeType":"YulFunctionCall","src":"10745:43:5"},"nodeType":"YulIf","src":"10742:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10725:5:5","type":""}],"src":"10689:122:5"},{"body":{"nodeType":"YulBlock","src":"10869:87:5","statements":[{"nodeType":"YulAssignment","src":"10879:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10901:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10888:12:5"},"nodeType":"YulFunctionCall","src":"10888:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10879:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10944:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"10917:26:5"},"nodeType":"YulFunctionCall","src":"10917:33:5"},"nodeType":"YulExpressionStatement","src":"10917:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10847:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"10855:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10863:5:5","type":""}],"src":"10817:139:5"},{"body":{"nodeType":"YulBlock","src":"11045:391:5","statements":[{"body":{"nodeType":"YulBlock","src":"11091:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11093:77:5"},"nodeType":"YulFunctionCall","src":"11093:79:5"},"nodeType":"YulExpressionStatement","src":"11093:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11066:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"11075:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11062:3:5"},"nodeType":"YulFunctionCall","src":"11062:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"11087:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11058:3:5"},"nodeType":"YulFunctionCall","src":"11058:32:5"},"nodeType":"YulIf","src":"11055:119:5"},{"nodeType":"YulBlock","src":"11184:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11199:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"11213:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11203:6:5","type":""}]},{"nodeType":"YulAssignment","src":"11228:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11263:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"11274:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11259:3:5"},"nodeType":"YulFunctionCall","src":"11259:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11283:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11238:20:5"},"nodeType":"YulFunctionCall","src":"11238:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11228:6:5"}]}]},{"nodeType":"YulBlock","src":"11311:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11326:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"11340:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11330:6:5","type":""}]},{"nodeType":"YulAssignment","src":"11356:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11391:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"11402:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11387:3:5"},"nodeType":"YulFunctionCall","src":"11387:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11411:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11366:20:5"},"nodeType":"YulFunctionCall","src":"11366:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11356:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11007:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11018:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11030:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11038:6:5","type":""}],"src":"10962:474:5"},{"body":{"nodeType":"YulBlock","src":"11584:276:5","statements":[{"nodeType":"YulAssignment","src":"11594:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11606:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11617:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11602:3:5"},"nodeType":"YulFunctionCall","src":"11602:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11594:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11674:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11687:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11698:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11683:3:5"},"nodeType":"YulFunctionCall","src":"11683:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11630:43:5"},"nodeType":"YulFunctionCall","src":"11630:71:5"},"nodeType":"YulExpressionStatement","src":"11630:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11749:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11762:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11773:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11758:3:5"},"nodeType":"YulFunctionCall","src":"11758:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11711:37:5"},"nodeType":"YulFunctionCall","src":"11711:66:5"},"nodeType":"YulExpressionStatement","src":"11711:66:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11825:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11838:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11849:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11834:3:5"},"nodeType":"YulFunctionCall","src":"11834:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11787:37:5"},"nodeType":"YulFunctionCall","src":"11787:66:5"},"nodeType":"YulExpressionStatement","src":"11787:66:5"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11540:9:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11552:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11560:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11568:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11579:4:5","type":""}],"src":"11442:418:5"},{"body":{"nodeType":"YulBlock","src":"11894:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11911:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11914:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11904:6:5"},"nodeType":"YulFunctionCall","src":"11904:88:5"},"nodeType":"YulExpressionStatement","src":"11904:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12008:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12011:4:5","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12001:6:5"},"nodeType":"YulFunctionCall","src":"12001:15:5"},"nodeType":"YulExpressionStatement","src":"12001:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12032:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12035:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12025:6:5"},"nodeType":"YulFunctionCall","src":"12025:15:5"},"nodeType":"YulExpressionStatement","src":"12025:15:5"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11866:180:5"},{"body":{"nodeType":"YulBlock","src":"12105:62:5","statements":[{"body":{"nodeType":"YulBlock","src":"12139:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12141:16:5"},"nodeType":"YulFunctionCall","src":"12141:18:5"},"nodeType":"YulExpressionStatement","src":"12141:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12128:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"12135:1:5","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12125:2:5"},"nodeType":"YulFunctionCall","src":"12125:12:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12118:6:5"},"nodeType":"YulFunctionCall","src":"12118:20:5"},"nodeType":"YulIf","src":"12115:46:5"}]},"name":"validator_assert_t_enum$_Stages_$145","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12098:5:5","type":""}],"src":"12052:115:5"},{"body":{"nodeType":"YulBlock","src":"12228:76:5","statements":[{"nodeType":"YulAssignment","src":"12238:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"12249:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12238:7:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12292:5:5"}],"functionName":{"name":"validator_assert_t_enum$_Stages_$145","nodeType":"YulIdentifier","src":"12255:36:5"},"nodeType":"YulFunctionCall","src":"12255:43:5"},"nodeType":"YulExpressionStatement","src":"12255:43:5"}]},"name":"cleanup_t_enum$_Stages_$145","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12210:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12220:7:5","type":""}],"src":"12173:131:5"},{"body":{"nodeType":"YulBlock","src":"12378:63:5","statements":[{"nodeType":"YulAssignment","src":"12388:47:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12429:5:5"}],"functionName":{"name":"cleanup_t_enum$_Stages_$145","nodeType":"YulIdentifier","src":"12401:27:5"},"nodeType":"YulFunctionCall","src":"12401:34:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12388:9:5"}]}]},"name":"convert_t_enum$_Stages_$145_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12358:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12368:9:5","type":""}],"src":"12310:131:5"},{"body":{"nodeType":"YulBlock","src":"12520:74:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12537:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12581:5:5"}],"functionName":{"name":"convert_t_enum$_Stages_$145_to_t_uint8","nodeType":"YulIdentifier","src":"12542:38:5"},"nodeType":"YulFunctionCall","src":"12542:45:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12530:6:5"},"nodeType":"YulFunctionCall","src":"12530:58:5"},"nodeType":"YulExpressionStatement","src":"12530:58:5"}]},"name":"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12508:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12515:3:5","type":""}],"src":"12447:147:5"},{"body":{"nodeType":"YulBlock","src":"12706:132:5","statements":[{"nodeType":"YulAssignment","src":"12716:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12728:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12739:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12724:3:5"},"nodeType":"YulFunctionCall","src":"12724:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12716:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12804:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12817:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"12828:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12813:3:5"},"nodeType":"YulFunctionCall","src":"12813:17:5"}],"functionName":{"name":"abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12752:51:5"},"nodeType":"YulFunctionCall","src":"12752:79:5"},"nodeType":"YulExpressionStatement","src":"12752:79:5"}]},"name":"abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12678:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12690:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12701:4:5","type":""}],"src":"12600:238:5"},{"body":{"nodeType":"YulBlock","src":"12903:40:5","statements":[{"nodeType":"YulAssignment","src":"12914:22:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12930:5:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12924:5:5"},"nodeType":"YulFunctionCall","src":"12924:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12914:6:5"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12886:5:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12896:6:5","type":""}],"src":"12844:99:5"},{"body":{"nodeType":"YulBlock","src":"13045:73:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13062:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13067:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13055:6:5"},"nodeType":"YulFunctionCall","src":"13055:19:5"},"nodeType":"YulExpressionStatement","src":"13055:19:5"},{"nodeType":"YulAssignment","src":"13083:29:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13102:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"13107:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13098:3:5"},"nodeType":"YulFunctionCall","src":"13098:14:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13083:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13017:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"13022:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13033:11:5","type":""}],"src":"12949:169:5"},{"body":{"nodeType":"YulBlock","src":"13186:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13196:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"13205:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13200:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"13265:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13290:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"13295:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13286:3:5"},"nodeType":"YulFunctionCall","src":"13286:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13309:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"13314:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13305:3:5"},"nodeType":"YulFunctionCall","src":"13305:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13299:5:5"},"nodeType":"YulFunctionCall","src":"13299:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13279:6:5"},"nodeType":"YulFunctionCall","src":"13279:39:5"},"nodeType":"YulExpressionStatement","src":"13279:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13226:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"13229:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13223:2:5"},"nodeType":"YulFunctionCall","src":"13223:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13237:19:5","statements":[{"nodeType":"YulAssignment","src":"13239:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13248:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"13251:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13244:3:5"},"nodeType":"YulFunctionCall","src":"13244:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13239:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"13219:3:5","statements":[]},"src":"13215:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13348:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13353:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13344:3:5"},"nodeType":"YulFunctionCall","src":"13344:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"13362:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13337:6:5"},"nodeType":"YulFunctionCall","src":"13337:27:5"},"nodeType":"YulExpressionStatement","src":"13337:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13168:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13173:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"13178:6:5","type":""}],"src":"13124:246:5"},{"body":{"nodeType":"YulBlock","src":"13468:285:5","statements":[{"nodeType":"YulVariableDeclaration","src":"13478:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13525:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13492:32:5"},"nodeType":"YulFunctionCall","src":"13492:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13482:6:5","type":""}]},{"nodeType":"YulAssignment","src":"13540:78:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13606:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13611:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13547:58:5"},"nodeType":"YulFunctionCall","src":"13547:71:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13540:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13666:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"13673:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13662:3:5"},"nodeType":"YulFunctionCall","src":"13662:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"13680:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"13685:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13627:34:5"},"nodeType":"YulFunctionCall","src":"13627:65:5"},"nodeType":"YulExpressionStatement","src":"13627:65:5"},{"nodeType":"YulAssignment","src":"13701:46:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13712:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13739:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13717:21:5"},"nodeType":"YulFunctionCall","src":"13717:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13708:3:5"},"nodeType":"YulFunctionCall","src":"13708:39:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13701:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13449:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13456:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13464:3:5","type":""}],"src":"13376:377:5"},{"body":{"nodeType":"YulBlock","src":"13877:195:5","statements":[{"nodeType":"YulAssignment","src":"13887:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13899:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"13910:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13895:3:5"},"nodeType":"YulFunctionCall","src":"13895:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13887:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13934:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"13945:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13930:3:5"},"nodeType":"YulFunctionCall","src":"13930:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13953:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"13959:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13949:3:5"},"nodeType":"YulFunctionCall","src":"13949:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13923:6:5"},"nodeType":"YulFunctionCall","src":"13923:47:5"},"nodeType":"YulExpressionStatement","src":"13923:47:5"},{"nodeType":"YulAssignment","src":"13979:86:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14051:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"14060:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13987:63:5"},"nodeType":"YulFunctionCall","src":"13987:78:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13979:4:5"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13849:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13861:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13872:4:5","type":""}],"src":"13759:313:5"},{"body":{"nodeType":"YulBlock","src":"14144:263:5","statements":[{"body":{"nodeType":"YulBlock","src":"14190:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14192:77:5"},"nodeType":"YulFunctionCall","src":"14192:79:5"},"nodeType":"YulExpressionStatement","src":"14192:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14165:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"14174:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14161:3:5"},"nodeType":"YulFunctionCall","src":"14161:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"14186:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14157:3:5"},"nodeType":"YulFunctionCall","src":"14157:32:5"},"nodeType":"YulIf","src":"14154:119:5"},{"nodeType":"YulBlock","src":"14283:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"14298:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"14312:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14302:6:5","type":""}]},{"nodeType":"YulAssignment","src":"14327:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14362:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"14373:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14358:3:5"},"nodeType":"YulFunctionCall","src":"14358:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14382:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14337:20:5"},"nodeType":"YulFunctionCall","src":"14337:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14327:6:5"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14114:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14125:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14137:6:5","type":""}],"src":"14078:329:5"},{"body":{"nodeType":"YulBlock","src":"14519:58:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14541:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14549:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14537:3:5"},"nodeType":"YulFunctionCall","src":"14537:14:5"},{"hexValue":"4e6f74416c6c52657665616c6564","kind":"string","nodeType":"YulLiteral","src":"14553:16:5","type":"","value":"NotAllRevealed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14530:6:5"},"nodeType":"YulFunctionCall","src":"14530:40:5"},"nodeType":"YulExpressionStatement","src":"14530:40:5"}]},"name":"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14511:6:5","type":""}],"src":"14413:164:5"},{"body":{"nodeType":"YulBlock","src":"14729:220:5","statements":[{"nodeType":"YulAssignment","src":"14739:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14805:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"14810:2:5","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14746:58:5"},"nodeType":"YulFunctionCall","src":"14746:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14739:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14911:3:5"}],"functionName":{"name":"store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042","nodeType":"YulIdentifier","src":"14822:88:5"},"nodeType":"YulFunctionCall","src":"14822:93:5"},"nodeType":"YulExpressionStatement","src":"14822:93:5"},{"nodeType":"YulAssignment","src":"14924:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14935:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"14940:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14931:3:5"},"nodeType":"YulFunctionCall","src":"14931:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14924:3:5"}]}]},"name":"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14717:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14725:3:5","type":""}],"src":"14583:366:5"},{"body":{"nodeType":"YulBlock","src":"15126:248:5","statements":[{"nodeType":"YulAssignment","src":"15136:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15148:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15159:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15144:3:5"},"nodeType":"YulFunctionCall","src":"15144:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15136:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15183:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"15194:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15179:3:5"},"nodeType":"YulFunctionCall","src":"15179:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15202:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"15208:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15198:3:5"},"nodeType":"YulFunctionCall","src":"15198:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15172:6:5"},"nodeType":"YulFunctionCall","src":"15172:47:5"},"nodeType":"YulExpressionStatement","src":"15172:47:5"},{"nodeType":"YulAssignment","src":"15228:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15362:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15236:124:5"},"nodeType":"YulFunctionCall","src":"15236:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15228:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15106:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15121:4:5","type":""}],"src":"14955:419:5"},{"body":{"nodeType":"YulBlock","src":"15486:65:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15508:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"15516:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15504:3:5"},"nodeType":"YulFunctionCall","src":"15504:14:5"},{"hexValue":"4f6d656761416c7265616479436f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"15520:23:5","type":"","value":"OmegaAlreadyCompleted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15497:6:5"},"nodeType":"YulFunctionCall","src":"15497:47:5"},"nodeType":"YulExpressionStatement","src":"15497:47:5"}]},"name":"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15478:6:5","type":""}],"src":"15380:171:5"},{"body":{"nodeType":"YulBlock","src":"15703:220:5","statements":[{"nodeType":"YulAssignment","src":"15713:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15779:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"15784:2:5","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15720:58:5"},"nodeType":"YulFunctionCall","src":"15720:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15713:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15885:3:5"}],"functionName":{"name":"store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6","nodeType":"YulIdentifier","src":"15796:88:5"},"nodeType":"YulFunctionCall","src":"15796:93:5"},"nodeType":"YulExpressionStatement","src":"15796:93:5"},{"nodeType":"YulAssignment","src":"15898:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15909:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"15914:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15905:3:5"},"nodeType":"YulFunctionCall","src":"15905:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15898:3:5"}]}]},"name":"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15691:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15699:3:5","type":""}],"src":"15557:366:5"},{"body":{"nodeType":"YulBlock","src":"16100:248:5","statements":[{"nodeType":"YulAssignment","src":"16110:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16122:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16133:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16118:3:5"},"nodeType":"YulFunctionCall","src":"16118:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16110:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16157:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"16168:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16153:3:5"},"nodeType":"YulFunctionCall","src":"16153:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16176:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"16182:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16172:3:5"},"nodeType":"YulFunctionCall","src":"16172:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16146:6:5"},"nodeType":"YulFunctionCall","src":"16146:47:5"},"nodeType":"YulExpressionStatement","src":"16146:47:5"},{"nodeType":"YulAssignment","src":"16202:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16336:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16210:124:5"},"nodeType":"YulFunctionCall","src":"16210:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16202:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16080:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16095:4:5","type":""}],"src":"15929:419:5"},{"body":{"nodeType":"YulBlock","src":"16382:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16399:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16402:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16392:6:5"},"nodeType":"YulFunctionCall","src":"16392:88:5"},"nodeType":"YulExpressionStatement","src":"16392:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16496:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16499:4:5","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16489:6:5"},"nodeType":"YulFunctionCall","src":"16489:15:5"},"nodeType":"YulExpressionStatement","src":"16489:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16520:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16523:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16513:6:5"},"nodeType":"YulFunctionCall","src":"16513:15:5"},"nodeType":"YulExpressionStatement","src":"16513:15:5"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"16354:180:5"},{"body":{"nodeType":"YulBlock","src":"16654:34:5","statements":[{"nodeType":"YulAssignment","src":"16664:18:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"16679:3:5"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16664:11:5"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16626:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"16631:6:5","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16642:11:5","type":""}],"src":"16540:148:5"},{"body":{"nodeType":"YulBlock","src":"16804:280:5","statements":[{"nodeType":"YulVariableDeclaration","src":"16814:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16861:5:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16828:32:5"},"nodeType":"YulFunctionCall","src":"16828:39:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16818:6:5","type":""}]},{"nodeType":"YulAssignment","src":"16876:96:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16960:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"16965:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16883:76:5"},"nodeType":"YulFunctionCall","src":"16883:89:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16876:3:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17020:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"17027:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17016:3:5"},"nodeType":"YulFunctionCall","src":"17016:16:5"},{"name":"pos","nodeType":"YulIdentifier","src":"17034:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17039:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16981:34:5"},"nodeType":"YulFunctionCall","src":"16981:65:5"},"nodeType":"YulExpressionStatement","src":"16981:65:5"},{"nodeType":"YulAssignment","src":"17055:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17066:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"17071:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17062:3:5"},"nodeType":"YulFunctionCall","src":"17062:16:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17055:3:5"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16785:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16792:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16800:3:5","type":""}],"src":"16694:390:5"},{"body":{"nodeType":"YulBlock","src":"17274:251:5","statements":[{"nodeType":"YulAssignment","src":"17285:102:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17374:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"17383:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17292:81:5"},"nodeType":"YulFunctionCall","src":"17292:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17285:3:5"}]},{"nodeType":"YulAssignment","src":"17397:102:5","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17486:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"17495:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17404:81:5"},"nodeType":"YulFunctionCall","src":"17404:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17397:3:5"}]},{"nodeType":"YulAssignment","src":"17509:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"17516:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17509:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17245:3:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17251:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17259:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17270:3:5","type":""}],"src":"17090:435:5"},{"body":{"nodeType":"YulBlock","src":"17565:142:5","statements":[{"nodeType":"YulAssignment","src":"17575:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17598:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17580:17:5"},"nodeType":"YulFunctionCall","src":"17580:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17575:1:5"}]},{"nodeType":"YulAssignment","src":"17609:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17632:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17614:17:5"},"nodeType":"YulFunctionCall","src":"17614:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17609:1:5"}]},{"body":{"nodeType":"YulBlock","src":"17656:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"17658:16:5"},"nodeType":"YulFunctionCall","src":"17658:18:5"},"nodeType":"YulExpressionStatement","src":"17658:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17653:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17646:6:5"},"nodeType":"YulFunctionCall","src":"17646:9:5"},"nodeType":"YulIf","src":"17643:35:5"},{"nodeType":"YulAssignment","src":"17687:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17696:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"17699:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"17692:3:5"},"nodeType":"YulFunctionCall","src":"17692:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"17687:1:5"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17554:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"17557:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17563:1:5","type":""}],"src":"17531:176:5"},{"body":{"nodeType":"YulBlock","src":"17741:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17758:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17761:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17751:6:5"},"nodeType":"YulFunctionCall","src":"17751:88:5"},"nodeType":"YulExpressionStatement","src":"17751:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17855:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17858:4:5","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17848:6:5"},"nodeType":"YulFunctionCall","src":"17848:15:5"},"nodeType":"YulExpressionStatement","src":"17848:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17879:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17882:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17872:6:5"},"nodeType":"YulFunctionCall","src":"17872:15:5"},"nodeType":"YulExpressionStatement","src":"17872:15:5"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17713:180:5"},{"body":{"nodeType":"YulBlock","src":"17942:190:5","statements":[{"nodeType":"YulAssignment","src":"17952:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17979:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17961:17:5"},"nodeType":"YulFunctionCall","src":"17961:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17952:5:5"}]},{"body":{"nodeType":"YulBlock","src":"18075:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18077:16:5"},"nodeType":"YulFunctionCall","src":"18077:18:5"},"nodeType":"YulExpressionStatement","src":"18077:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18000:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"18007:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17997:2:5"},"nodeType":"YulFunctionCall","src":"17997:77:5"},"nodeType":"YulIf","src":"17994:103:5"},{"nodeType":"YulAssignment","src":"18106:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18117:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"18124:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18113:3:5"},"nodeType":"YulFunctionCall","src":"18113:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18106:3:5"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17928:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17938:3:5","type":""}],"src":"17899:233:5"},{"body":{"nodeType":"YulBlock","src":"18314:365:5","statements":[{"nodeType":"YulAssignment","src":"18324:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18336:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18347:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18332:3:5"},"nodeType":"YulFunctionCall","src":"18332:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18324:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18405:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18418:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18429:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18414:3:5"},"nodeType":"YulFunctionCall","src":"18414:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18361:43:5"},"nodeType":"YulFunctionCall","src":"18361:71:5"},"nodeType":"YulExpressionStatement","src":"18361:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18486:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18499:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18510:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18495:3:5"},"nodeType":"YulFunctionCall","src":"18495:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18442:43:5"},"nodeType":"YulFunctionCall","src":"18442:72:5"},"nodeType":"YulExpressionStatement","src":"18442:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18568:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18581:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18592:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18577:3:5"},"nodeType":"YulFunctionCall","src":"18577:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18524:43:5"},"nodeType":"YulFunctionCall","src":"18524:72:5"},"nodeType":"YulExpressionStatement","src":"18524:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18644:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18657:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"18668:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18653:3:5"},"nodeType":"YulFunctionCall","src":"18653:18:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"18606:37:5"},"nodeType":"YulFunctionCall","src":"18606:66:5"},"nodeType":"YulExpressionStatement","src":"18606:66:5"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18262:9:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18274:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18282:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18290:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18298:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18309:4:5","type":""}],"src":"18138:541:5"},{"body":{"nodeType":"YulBlock","src":"18713:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18730:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18733:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18723:6:5"},"nodeType":"YulFunctionCall","src":"18723:88:5"},"nodeType":"YulExpressionStatement","src":"18723:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18827:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18830:4:5","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18820:6:5"},"nodeType":"YulFunctionCall","src":"18820:15:5"},"nodeType":"YulExpressionStatement","src":"18820:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18851:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18854:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18844:6:5"},"nodeType":"YulFunctionCall","src":"18844:15:5"},"nodeType":"YulExpressionStatement","src":"18844:15:5"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18685:180:5"},{"body":{"nodeType":"YulBlock","src":"18977:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18999:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"19007:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18995:3:5"},"nodeType":"YulFunctionCall","src":"18995:14:5"},{"hexValue":"477265617465724f72457175616c5468616e4e","kind":"string","nodeType":"YulLiteral","src":"19011:21:5","type":"","value":"GreaterOrEqualThanN"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18988:6:5"},"nodeType":"YulFunctionCall","src":"18988:45:5"},"nodeType":"YulExpressionStatement","src":"18988:45:5"}]},"name":"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18969:6:5","type":""}],"src":"18871:169:5"},{"body":{"nodeType":"YulBlock","src":"19192:220:5","statements":[{"nodeType":"YulAssignment","src":"19202:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19268:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"19273:2:5","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19209:58:5"},"nodeType":"YulFunctionCall","src":"19209:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19202:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19374:3:5"}],"functionName":{"name":"store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162","nodeType":"YulIdentifier","src":"19285:88:5"},"nodeType":"YulFunctionCall","src":"19285:93:5"},"nodeType":"YulExpressionStatement","src":"19285:93:5"},{"nodeType":"YulAssignment","src":"19387:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19398:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"19403:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19394:3:5"},"nodeType":"YulFunctionCall","src":"19394:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19387:3:5"}]}]},"name":"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19180:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19188:3:5","type":""}],"src":"19046:366:5"},{"body":{"nodeType":"YulBlock","src":"19589:248:5","statements":[{"nodeType":"YulAssignment","src":"19599:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19611:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"19622:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19607:3:5"},"nodeType":"YulFunctionCall","src":"19607:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19599:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19646:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"19657:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19642:3:5"},"nodeType":"YulFunctionCall","src":"19642:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19665:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"19671:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19661:3:5"},"nodeType":"YulFunctionCall","src":"19661:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19635:6:5"},"nodeType":"YulFunctionCall","src":"19635:47:5"},"nodeType":"YulExpressionStatement","src":"19635:47:5"},{"nodeType":"YulAssignment","src":"19691:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19825:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19699:124:5"},"nodeType":"YulFunctionCall","src":"19699:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19691:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19569:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19584:4:5","type":""}],"src":"19418:419:5"},{"body":{"nodeType":"YulBlock","src":"19949:55:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19971:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"19979:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19967:3:5"},"nodeType":"YulFunctionCall","src":"19967:14:5"},{"hexValue":"544e6f744d617463686564","kind":"string","nodeType":"YulLiteral","src":"19983:13:5","type":"","value":"TNotMatched"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19960:6:5"},"nodeType":"YulFunctionCall","src":"19960:37:5"},"nodeType":"YulExpressionStatement","src":"19960:37:5"}]},"name":"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19941:6:5","type":""}],"src":"19843:161:5"},{"body":{"nodeType":"YulBlock","src":"20156:220:5","statements":[{"nodeType":"YulAssignment","src":"20166:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20232:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"20237:2:5","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20173:58:5"},"nodeType":"YulFunctionCall","src":"20173:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20166:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20338:3:5"}],"functionName":{"name":"store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c","nodeType":"YulIdentifier","src":"20249:88:5"},"nodeType":"YulFunctionCall","src":"20249:93:5"},"nodeType":"YulExpressionStatement","src":"20249:93:5"},{"nodeType":"YulAssignment","src":"20351:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20362:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"20367:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20358:3:5"},"nodeType":"YulFunctionCall","src":"20358:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20351:3:5"}]}]},"name":"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20144:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20152:3:5","type":""}],"src":"20010:366:5"},{"body":{"nodeType":"YulBlock","src":"20553:248:5","statements":[{"nodeType":"YulAssignment","src":"20563:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20575:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20586:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20571:3:5"},"nodeType":"YulFunctionCall","src":"20571:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20563:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20610:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"20621:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20606:3:5"},"nodeType":"YulFunctionCall","src":"20606:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20629:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"20635:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20625:3:5"},"nodeType":"YulFunctionCall","src":"20625:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20599:6:5"},"nodeType":"YulFunctionCall","src":"20599:47:5"},"nodeType":"YulExpressionStatement","src":"20599:47:5"},{"nodeType":"YulAssignment","src":"20655:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20789:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20663:124:5"},"nodeType":"YulFunctionCall","src":"20663:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20655:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20533:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20548:4:5","type":""}],"src":"20382:419:5"},{"body":{"nodeType":"YulBlock","src":"20899:290:5","statements":[{"body":{"nodeType":"YulBlock","src":"20946:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20948:77:5"},"nodeType":"YulFunctionCall","src":"20948:79:5"},"nodeType":"YulExpressionStatement","src":"20948:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20920:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"20929:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20916:3:5"},"nodeType":"YulFunctionCall","src":"20916:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"20941:3:5","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20912:3:5"},"nodeType":"YulFunctionCall","src":"20912:33:5"},"nodeType":"YulIf","src":"20909:120:5"},{"nodeType":"YulBlock","src":"21039:143:5","statements":[{"nodeType":"YulVariableDeclaration","src":"21054:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"21068:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21058:6:5","type":""}]},{"nodeType":"YulAssignment","src":"21083:89:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21144:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"21155:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21140:3:5"},"nodeType":"YulFunctionCall","src":"21140:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21164:7:5"}],"functionName":{"name":"abi_decode_t_struct$_VDFClaim_$1185_memory_ptr","nodeType":"YulIdentifier","src":"21093:46:5"},"nodeType":"YulFunctionCall","src":"21093:79:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21083:6:5"}]}]}]},"name":"abi_decode_tuple_t_struct$_VDFClaim_$1185_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20869:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20880:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20892:6:5","type":""}],"src":"20807:382:5"},{"body":{"nodeType":"YulBlock","src":"21301:58:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21323:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"21331:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21319:3:5"},"nodeType":"YulFunctionCall","src":"21319:14:5"},{"hexValue":"5265636f764e6f744d6174636858","kind":"string","nodeType":"YulLiteral","src":"21335:16:5","type":"","value":"RecovNotMatchX"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21312:6:5"},"nodeType":"YulFunctionCall","src":"21312:40:5"},"nodeType":"YulExpressionStatement","src":"21312:40:5"}]},"name":"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21293:6:5","type":""}],"src":"21195:164:5"},{"body":{"nodeType":"YulBlock","src":"21511:220:5","statements":[{"nodeType":"YulAssignment","src":"21521:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21587:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"21592:2:5","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21528:58:5"},"nodeType":"YulFunctionCall","src":"21528:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21521:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21693:3:5"}],"functionName":{"name":"store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5","nodeType":"YulIdentifier","src":"21604:88:5"},"nodeType":"YulFunctionCall","src":"21604:93:5"},"nodeType":"YulExpressionStatement","src":"21604:93:5"},{"nodeType":"YulAssignment","src":"21706:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21717:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"21722:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21713:3:5"},"nodeType":"YulFunctionCall","src":"21713:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21706:3:5"}]}]},"name":"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21499:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21507:3:5","type":""}],"src":"21365:366:5"},{"body":{"nodeType":"YulBlock","src":"21908:248:5","statements":[{"nodeType":"YulAssignment","src":"21918:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21930:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"21941:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21926:3:5"},"nodeType":"YulFunctionCall","src":"21926:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21918:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21965:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"21976:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21961:3:5"},"nodeType":"YulFunctionCall","src":"21961:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21984:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"21990:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21980:3:5"},"nodeType":"YulFunctionCall","src":"21980:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21954:6:5"},"nodeType":"YulFunctionCall","src":"21954:47:5"},"nodeType":"YulExpressionStatement","src":"21954:47:5"},{"nodeType":"YulAssignment","src":"22010:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22144:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22018:124:5"},"nodeType":"YulFunctionCall","src":"22018:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22010:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21888:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21903:4:5","type":""}],"src":"21737:419:5"},{"body":{"nodeType":"YulBlock","src":"22344:371:5","statements":[{"nodeType":"YulAssignment","src":"22354:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22366:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22377:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22362:3:5"},"nodeType":"YulFunctionCall","src":"22362:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22354:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22435:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22448:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22459:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22444:3:5"},"nodeType":"YulFunctionCall","src":"22444:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22391:43:5"},"nodeType":"YulFunctionCall","src":"22391:71:5"},"nodeType":"YulExpressionStatement","src":"22391:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22516:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22529:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22540:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22525:3:5"},"nodeType":"YulFunctionCall","src":"22525:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22472:43:5"},"nodeType":"YulFunctionCall","src":"22472:72:5"},"nodeType":"YulExpressionStatement","src":"22472:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22598:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22611:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22622:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22607:3:5"},"nodeType":"YulFunctionCall","src":"22607:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22554:43:5"},"nodeType":"YulFunctionCall","src":"22554:72:5"},"nodeType":"YulExpressionStatement","src":"22554:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22680:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22693:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"22704:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22689:3:5"},"nodeType":"YulFunctionCall","src":"22689:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22636:43:5"},"nodeType":"YulFunctionCall","src":"22636:72:5"},"nodeType":"YulExpressionStatement","src":"22636:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22292:9:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22304:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22312:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22320:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22328:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22339:4:5","type":""}],"src":"22162:553:5"},{"body":{"nodeType":"YulBlock","src":"22765:147:5","statements":[{"nodeType":"YulAssignment","src":"22775:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22798:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22780:17:5"},"nodeType":"YulFunctionCall","src":"22780:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22775:1:5"}]},{"nodeType":"YulAssignment","src":"22809:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22832:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22814:17:5"},"nodeType":"YulFunctionCall","src":"22814:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22809:1:5"}]},{"nodeType":"YulAssignment","src":"22843:16:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22854:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"22857:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22850:3:5"},"nodeType":"YulFunctionCall","src":"22850:9:5"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22843:3:5"}]},{"body":{"nodeType":"YulBlock","src":"22883:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22885:16:5"},"nodeType":"YulFunctionCall","src":"22885:18:5"},"nodeType":"YulExpressionStatement","src":"22885:18:5"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22875:1:5"},{"name":"sum","nodeType":"YulIdentifier","src":"22878:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22872:2:5"},"nodeType":"YulFunctionCall","src":"22872:10:5"},"nodeType":"YulIf","src":"22869:36:5"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22752:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"22755:1:5","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"22761:3:5","type":""}],"src":"22721:191:5"},{"body":{"nodeType":"YulBlock","src":"22946:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22963:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22966:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22956:6:5"},"nodeType":"YulFunctionCall","src":"22956:88:5"},"nodeType":"YulExpressionStatement","src":"22956:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23060:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23063:4:5","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23053:6:5"},"nodeType":"YulFunctionCall","src":"23053:15:5"},"nodeType":"YulExpressionStatement","src":"23053:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23084:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23087:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23077:6:5"},"nodeType":"YulFunctionCall","src":"23077:15:5"},"nodeType":"YulExpressionStatement","src":"23077:15:5"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"22918:180:5"},{"body":{"nodeType":"YulBlock","src":"23155:269:5","statements":[{"nodeType":"YulAssignment","src":"23165:22:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23179:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"23185:1:5","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23175:3:5"},"nodeType":"YulFunctionCall","src":"23175:12:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23165:6:5"}]},{"nodeType":"YulVariableDeclaration","src":"23196:38:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23226:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"23232:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23222:3:5"},"nodeType":"YulFunctionCall","src":"23222:12:5"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"23200:18:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"23273:51:5","statements":[{"nodeType":"YulAssignment","src":"23287:27:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23301:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"23309:4:5","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23297:3:5"},"nodeType":"YulFunctionCall","src":"23297:17:5"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23287:6:5"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23253:18:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23246:6:5"},"nodeType":"YulFunctionCall","src":"23246:26:5"},"nodeType":"YulIf","src":"23243:81:5"},{"body":{"nodeType":"YulBlock","src":"23376:42:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"23390:16:5"},"nodeType":"YulFunctionCall","src":"23390:18:5"},"nodeType":"YulExpressionStatement","src":"23390:18:5"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23340:18:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23363:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"23371:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23360:2:5"},"nodeType":"YulFunctionCall","src":"23360:14:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23337:2:5"},"nodeType":"YulFunctionCall","src":"23337:38:5"},"nodeType":"YulIf","src":"23334:84:5"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23139:4:5","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23148:6:5","type":""}],"src":"23104:320:5"},{"body":{"nodeType":"YulBlock","src":"23484:87:5","statements":[{"nodeType":"YulAssignment","src":"23494:11:5","value":{"name":"ptr","nodeType":"YulIdentifier","src":"23502:3:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23494:4:5"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23522:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"23525:3:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23515:6:5"},"nodeType":"YulFunctionCall","src":"23515:14:5"},"nodeType":"YulExpressionStatement","src":"23515:14:5"},{"nodeType":"YulAssignment","src":"23538:26:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23556:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23559:4:5","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23546:9:5"},"nodeType":"YulFunctionCall","src":"23546:18:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23538:4:5"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23471:3:5","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23479:4:5","type":""}],"src":"23430:141:5"},{"body":{"nodeType":"YulBlock","src":"23708:767:5","statements":[{"nodeType":"YulVariableDeclaration","src":"23718:29:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23741:5:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"23735:5:5"},"nodeType":"YulFunctionCall","src":"23735:12:5"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"23722:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23756:50:5","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"23796:9:5"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"23770:25:5"},"nodeType":"YulFunctionCall","src":"23770:36:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23760:6:5","type":""}]},{"nodeType":"YulAssignment","src":"23815:96:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23899:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"23904:6:5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23822:76:5"},"nodeType":"YulFunctionCall","src":"23822:89:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23815:3:5"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"23960:159:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24013:3:5"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"24022:9:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24037:4:5","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24033:3:5"},"nodeType":"YulFunctionCall","src":"24033:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24018:3:5"},"nodeType":"YulFunctionCall","src":"24018:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24006:6:5"},"nodeType":"YulFunctionCall","src":"24006:38:5"},"nodeType":"YulExpressionStatement","src":"24006:38:5"},{"nodeType":"YulAssignment","src":"24057:52:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24068:3:5"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24077:6:5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24099:6:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24092:6:5"},"nodeType":"YulFunctionCall","src":"24092:14:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24085:6:5"},"nodeType":"YulFunctionCall","src":"24085:22:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24073:3:5"},"nodeType":"YulFunctionCall","src":"24073:35:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24064:3:5"},"nodeType":"YulFunctionCall","src":"24064:45:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24057:3:5"}]}]},"nodeType":"YulCase","src":"23953:166:5","value":{"kind":"number","nodeType":"YulLiteral","src":"23958:1:5","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"24135:334:5","statements":[{"nodeType":"YulVariableDeclaration","src":"24180:53:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24227:5:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"24195:31:5"},"nodeType":"YulFunctionCall","src":"24195:38:5"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"24184:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24246:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"24255:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24250:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"24313:110:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24342:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"24347:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24338:3:5"},"nodeType":"YulFunctionCall","src":"24338:11:5"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24357:7:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24351:5:5"},"nodeType":"YulFunctionCall","src":"24351:14:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24331:6:5"},"nodeType":"YulFunctionCall","src":"24331:35:5"},"nodeType":"YulExpressionStatement","src":"24331:35:5"},{"nodeType":"YulAssignment","src":"24383:26:5","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24398:7:5"},{"kind":"number","nodeType":"YulLiteral","src":"24407:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24394:3:5"},"nodeType":"YulFunctionCall","src":"24394:15:5"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24383:7:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24280:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"24283:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24277:2:5"},"nodeType":"YulFunctionCall","src":"24277:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24291:21:5","statements":[{"nodeType":"YulAssignment","src":"24293:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24302:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"24305:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24298:3:5"},"nodeType":"YulFunctionCall","src":"24298:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"24293:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"24273:3:5","statements":[]},"src":"24269:154:5"},{"nodeType":"YulAssignment","src":"24436:23:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24447:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"24452:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24443:3:5"},"nodeType":"YulFunctionCall","src":"24443:16:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24436:3:5"}]}]},"nodeType":"YulCase","src":"24128:341:5","value":{"kind":"number","nodeType":"YulLiteral","src":"24133:1:5","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"23931:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"23942:1:5","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23927:3:5"},"nodeType":"YulFunctionCall","src":"23927:17:5"},"nodeType":"YulSwitch","src":"23920:549:5"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23689:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23696:3:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23704:3:5","type":""}],"src":"23601:874:5"},{"body":{"nodeType":"YulBlock","src":"24614:136:5","statements":[{"nodeType":"YulAssignment","src":"24625:99:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24711:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"24720:3:5"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24632:78:5"},"nodeType":"YulFunctionCall","src":"24632:92:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24625:3:5"}]},{"nodeType":"YulAssignment","src":"24734:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"24741:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24734:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24593:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24599:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24610:3:5","type":""}],"src":"24481:269:5"},{"body":{"nodeType":"YulBlock","src":"24862:123:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24884:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"24892:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24880:3:5"},"nodeType":"YulFunctionCall","src":"24880:14:5"},{"hexValue":"436f6d6d697452657665616c4475726174696f6e4c6573735468616e436f6d6d","kind":"string","nodeType":"YulLiteral","src":"24896:34:5","type":"","value":"CommitRevealDurationLessThanComm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24873:6:5"},"nodeType":"YulFunctionCall","src":"24873:58:5"},"nodeType":"YulExpressionStatement","src":"24873:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24952:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"24960:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24948:3:5"},"nodeType":"YulFunctionCall","src":"24948:15:5"},{"hexValue":"69744475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"24965:12:5","type":"","value":"itDuration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24941:6:5"},"nodeType":"YulFunctionCall","src":"24941:37:5"},"nodeType":"YulExpressionStatement","src":"24941:37:5"}]},"name":"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24854:6:5","type":""}],"src":"24756:229:5"},{"body":{"nodeType":"YulBlock","src":"25137:220:5","statements":[{"nodeType":"YulAssignment","src":"25147:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25213:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"25218:2:5","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25154:58:5"},"nodeType":"YulFunctionCall","src":"25154:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25147:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25319:3:5"}],"functionName":{"name":"store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68","nodeType":"YulIdentifier","src":"25230:88:5"},"nodeType":"YulFunctionCall","src":"25230:93:5"},"nodeType":"YulExpressionStatement","src":"25230:93:5"},{"nodeType":"YulAssignment","src":"25332:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25343:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"25348:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25339:3:5"},"nodeType":"YulFunctionCall","src":"25339:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25332:3:5"}]}]},"name":"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25125:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25133:3:5","type":""}],"src":"24991:366:5"},{"body":{"nodeType":"YulBlock","src":"25534:248:5","statements":[{"nodeType":"YulAssignment","src":"25544:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25556:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"25567:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25552:3:5"},"nodeType":"YulFunctionCall","src":"25552:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25544:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25591:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"25602:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25587:3:5"},"nodeType":"YulFunctionCall","src":"25587:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25610:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"25616:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25606:3:5"},"nodeType":"YulFunctionCall","src":"25606:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25580:6:5"},"nodeType":"YulFunctionCall","src":"25580:47:5"},"nodeType":"YulExpressionStatement","src":"25580:47:5"},{"nodeType":"YulAssignment","src":"25636:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25770:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25644:124:5"},"nodeType":"YulFunctionCall","src":"25644:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25636:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25514:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25529:4:5","type":""}],"src":"25363:419:5"},{"body":{"nodeType":"YulBlock","src":"25894:60:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25916:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"25924:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25912:3:5"},"nodeType":"YulFunctionCall","src":"25912:14:5"},{"hexValue":"53746167654e6f7446696e6973686564","kind":"string","nodeType":"YulLiteral","src":"25928:18:5","type":"","value":"StageNotFinished"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25905:6:5"},"nodeType":"YulFunctionCall","src":"25905:42:5"},"nodeType":"YulExpressionStatement","src":"25905:42:5"}]},"name":"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25886:6:5","type":""}],"src":"25788:166:5"},{"body":{"nodeType":"YulBlock","src":"26106:220:5","statements":[{"nodeType":"YulAssignment","src":"26116:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26182:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"26187:2:5","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26123:58:5"},"nodeType":"YulFunctionCall","src":"26123:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26116:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26288:3:5"}],"functionName":{"name":"store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874","nodeType":"YulIdentifier","src":"26199:88:5"},"nodeType":"YulFunctionCall","src":"26199:93:5"},"nodeType":"YulExpressionStatement","src":"26199:93:5"},{"nodeType":"YulAssignment","src":"26301:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26312:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"26317:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26308:3:5"},"nodeType":"YulFunctionCall","src":"26308:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26301:3:5"}]}]},"name":"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26094:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26102:3:5","type":""}],"src":"25960:366:5"},{"body":{"nodeType":"YulBlock","src":"26503:248:5","statements":[{"nodeType":"YulAssignment","src":"26513:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26525:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26536:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26521:3:5"},"nodeType":"YulFunctionCall","src":"26521:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26513:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26560:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"26571:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26556:3:5"},"nodeType":"YulFunctionCall","src":"26556:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26579:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"26585:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26575:3:5"},"nodeType":"YulFunctionCall","src":"26575:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26549:6:5"},"nodeType":"YulFunctionCall","src":"26549:47:5"},"nodeType":"YulExpressionStatement","src":"26549:47:5"},{"nodeType":"YulAssignment","src":"26605:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26739:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26613:124:5"},"nodeType":"YulFunctionCall","src":"26613:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26605:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26483:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26498:4:5","type":""}],"src":"26332:419:5"},{"body":{"nodeType":"YulBlock","src":"26801:49:5","statements":[{"nodeType":"YulAssignment","src":"26811:33:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26829:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"26836:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26825:3:5"},"nodeType":"YulFunctionCall","src":"26825:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"26841:2:5","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26821:3:5"},"nodeType":"YulFunctionCall","src":"26821:23:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"26811:6:5"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26784:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"26794:6:5","type":""}],"src":"26757:93:5"},{"body":{"nodeType":"YulBlock","src":"26909:54:5","statements":[{"nodeType":"YulAssignment","src":"26919:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"26944:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"26950:5:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26940:3:5"},"nodeType":"YulFunctionCall","src":"26940:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"26919:8:5"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"26884:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"26890:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"26900:8:5","type":""}],"src":"26856:107:5"},{"body":{"nodeType":"YulBlock","src":"27045:317:5","statements":[{"nodeType":"YulVariableDeclaration","src":"27055:35:5","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"27076:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"27088:1:5","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27072:3:5"},"nodeType":"YulFunctionCall","src":"27072:18:5"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"27059:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27099:109:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"27130:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"27141:66:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27111:18:5"},"nodeType":"YulFunctionCall","src":"27111:97:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27103:4:5","type":""}]},{"nodeType":"YulAssignment","src":"27217:51:5","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"27248:9:5"},{"name":"toInsert","nodeType":"YulIdentifier","src":"27259:8:5"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"27229:18:5"},"nodeType":"YulFunctionCall","src":"27229:39:5"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"27217:8:5"}]},{"nodeType":"YulAssignment","src":"27277:30:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27290:5:5"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"27301:4:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27297:3:5"},"nodeType":"YulFunctionCall","src":"27297:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27286:3:5"},"nodeType":"YulFunctionCall","src":"27286:21:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27277:5:5"}]},{"nodeType":"YulAssignment","src":"27316:40:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27329:5:5"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"27340:8:5"},{"name":"mask","nodeType":"YulIdentifier","src":"27350:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27336:3:5"},"nodeType":"YulFunctionCall","src":"27336:19:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27326:2:5"},"nodeType":"YulFunctionCall","src":"27326:30:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27316:6:5"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27006:5:5","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"27013:10:5","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"27025:8:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27038:6:5","type":""}],"src":"26969:393:5"},{"body":{"nodeType":"YulBlock","src":"27400:28:5","statements":[{"nodeType":"YulAssignment","src":"27410:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"27417:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27410:3:5"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27386:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27396:3:5","type":""}],"src":"27368:60:5"},{"body":{"nodeType":"YulBlock","src":"27494:82:5","statements":[{"nodeType":"YulAssignment","src":"27504:66:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27562:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27544:17:5"},"nodeType":"YulFunctionCall","src":"27544:24:5"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27535:8:5"},"nodeType":"YulFunctionCall","src":"27535:34:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27517:17:5"},"nodeType":"YulFunctionCall","src":"27517:53:5"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27504:9:5"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27474:5:5","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27484:9:5","type":""}],"src":"27434:142:5"},{"body":{"nodeType":"YulBlock","src":"27629:28:5","statements":[{"nodeType":"YulAssignment","src":"27639:12:5","value":{"name":"value","nodeType":"YulIdentifier","src":"27646:5:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27639:3:5"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27615:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27625:3:5","type":""}],"src":"27582:75:5"},{"body":{"nodeType":"YulBlock","src":"27739:193:5","statements":[{"nodeType":"YulVariableDeclaration","src":"27749:63:5","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"27804:7:5"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"27773:30:5"},"nodeType":"YulFunctionCall","src":"27773:39:5"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"27753:16:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"27828:4:5"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"27868:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"27862:5:5"},"nodeType":"YulFunctionCall","src":"27862:11:5"},{"name":"offset","nodeType":"YulIdentifier","src":"27875:6:5"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"27907:16:5"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"27883:23:5"},"nodeType":"YulFunctionCall","src":"27883:41:5"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"27834:27:5"},"nodeType":"YulFunctionCall","src":"27834:91:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"27821:6:5"},"nodeType":"YulFunctionCall","src":"27821:105:5"},"nodeType":"YulExpressionStatement","src":"27821:105:5"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"27716:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"27722:6:5","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"27730:7:5","type":""}],"src":"27663:269:5"},{"body":{"nodeType":"YulBlock","src":"27987:24:5","statements":[{"nodeType":"YulAssignment","src":"27997:8:5","value":{"kind":"number","nodeType":"YulLiteral","src":"28004:1:5","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27997:3:5"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27983:3:5","type":""}],"src":"27938:73:5"},{"body":{"nodeType":"YulBlock","src":"28070:136:5","statements":[{"nodeType":"YulVariableDeclaration","src":"28080:46:5","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"28094:30:5"},"nodeType":"YulFunctionCall","src":"28094:32:5"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"28084:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28179:4:5"},{"name":"offset","nodeType":"YulIdentifier","src":"28185:6:5"},{"name":"zero_0","nodeType":"YulIdentifier","src":"28193:6:5"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"28135:43:5"},"nodeType":"YulFunctionCall","src":"28135:65:5"},"nodeType":"YulExpressionStatement","src":"28135:65:5"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28056:4:5","type":""},{"name":"offset","nodeType":"YulTypedName","src":"28062:6:5","type":""}],"src":"28017:189:5"},{"body":{"nodeType":"YulBlock","src":"28262:136:5","statements":[{"body":{"nodeType":"YulBlock","src":"28329:63:5","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28373:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"28380:1:5","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"28343:29:5"},"nodeType":"YulFunctionCall","src":"28343:39:5"},"nodeType":"YulExpressionStatement","src":"28343:39:5"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28282:5:5"},{"name":"end","nodeType":"YulIdentifier","src":"28289:3:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28279:2:5"},"nodeType":"YulFunctionCall","src":"28279:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"28294:26:5","statements":[{"nodeType":"YulAssignment","src":"28296:22:5","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"28309:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"28316:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28305:3:5"},"nodeType":"YulFunctionCall","src":"28305:13:5"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"28296:5:5"}]}]},"pre":{"nodeType":"YulBlock","src":"28276:2:5","statements":[]},"src":"28272:120:5"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"28250:5:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"28257:3:5","type":""}],"src":"28212:186:5"},{"body":{"nodeType":"YulBlock","src":"28483:464:5","statements":[{"body":{"nodeType":"YulBlock","src":"28509:431:5","statements":[{"nodeType":"YulVariableDeclaration","src":"28523:54:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"28571:5:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28539:31:5"},"nodeType":"YulFunctionCall","src":"28539:38:5"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"28527:8:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28590:63:5","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"28613:8:5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"28641:10:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"28623:17:5"},"nodeType":"YulFunctionCall","src":"28623:29:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28609:3:5"},"nodeType":"YulFunctionCall","src":"28609:44:5"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"28594:11:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"28810:27:5","statements":[{"nodeType":"YulAssignment","src":"28812:23:5","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"28827:8:5"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"28812:11:5"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"28794:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"28806:2:5","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28791:2:5"},"nodeType":"YulFunctionCall","src":"28791:18:5"},"nodeType":"YulIf","src":"28788:49:5"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"28879:11:5"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"28896:8:5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"28924:3:5"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"28906:17:5"},"nodeType":"YulFunctionCall","src":"28906:22:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28892:3:5"},"nodeType":"YulFunctionCall","src":"28892:37:5"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"28850:28:5"},"nodeType":"YulFunctionCall","src":"28850:80:5"},"nodeType":"YulExpressionStatement","src":"28850:80:5"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"28500:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"28505:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28497:2:5"},"nodeType":"YulFunctionCall","src":"28497:11:5"},"nodeType":"YulIf","src":"28494:446:5"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"28459:5:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"28466:3:5","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"28471:10:5","type":""}],"src":"28404:543:5"},{"body":{"nodeType":"YulBlock","src":"29016:54:5","statements":[{"nodeType":"YulAssignment","src":"29026:37:5","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"29051:4:5"},{"name":"value","nodeType":"YulIdentifier","src":"29057:5:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29047:3:5"},"nodeType":"YulFunctionCall","src":"29047:16:5"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"29026:8:5"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"28991:4:5","type":""},{"name":"value","nodeType":"YulTypedName","src":"28997:5:5","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"29007:8:5","type":""}],"src":"28953:117:5"},{"body":{"nodeType":"YulBlock","src":"29127:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"29137:68:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29186:1:5","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"29189:5:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29182:3:5"},"nodeType":"YulFunctionCall","src":"29182:13:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29201:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29197:3:5"},"nodeType":"YulFunctionCall","src":"29197:6:5"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"29153:28:5"},"nodeType":"YulFunctionCall","src":"29153:51:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29149:3:5"},"nodeType":"YulFunctionCall","src":"29149:56:5"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"29141:4:5","type":""}]},{"nodeType":"YulAssignment","src":"29214:25:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29228:4:5"},{"name":"mask","nodeType":"YulIdentifier","src":"29234:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29224:3:5"},"nodeType":"YulFunctionCall","src":"29224:15:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29214:6:5"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29104:4:5","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"29110:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29120:6:5","type":""}],"src":"29076:169:5"},{"body":{"nodeType":"YulBlock","src":"29331:214:5","statements":[{"nodeType":"YulAssignment","src":"29464:37:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29491:4:5"},{"name":"len","nodeType":"YulIdentifier","src":"29497:3:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"29472:18:5"},"nodeType":"YulFunctionCall","src":"29472:29:5"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29464:4:5"}]},{"nodeType":"YulAssignment","src":"29510:29:5","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29521:4:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29531:1:5","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"29534:3:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29527:3:5"},"nodeType":"YulFunctionCall","src":"29527:11:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29518:2:5"},"nodeType":"YulFunctionCall","src":"29518:21:5"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"29510:4:5"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29312:4:5","type":""},{"name":"len","nodeType":"YulTypedName","src":"29318:3:5","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"29326:4:5","type":""}],"src":"29250:295:5"},{"body":{"nodeType":"YulBlock","src":"29642:1303:5","statements":[{"nodeType":"YulVariableDeclaration","src":"29653:51:5","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29700:3:5"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29667:32:5"},"nodeType":"YulFunctionCall","src":"29667:37:5"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"29657:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"29789:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"29791:16:5"},"nodeType":"YulFunctionCall","src":"29791:18:5"},"nodeType":"YulExpressionStatement","src":"29791:18:5"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29761:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"29769:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29758:2:5"},"nodeType":"YulFunctionCall","src":"29758:30:5"},"nodeType":"YulIf","src":"29755:56:5"},{"nodeType":"YulVariableDeclaration","src":"29821:52:5","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29867:4:5"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29861:5:5"},"nodeType":"YulFunctionCall","src":"29861:11:5"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"29835:25:5"},"nodeType":"YulFunctionCall","src":"29835:38:5"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"29825:6:5","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29966:4:5"},{"name":"oldLen","nodeType":"YulIdentifier","src":"29972:6:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"29980:6:5"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"29920:45:5"},"nodeType":"YulFunctionCall","src":"29920:67:5"},"nodeType":"YulExpressionStatement","src":"29920:67:5"},{"nodeType":"YulVariableDeclaration","src":"29997:18:5","value":{"kind":"number","nodeType":"YulLiteral","src":"30014:1:5","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"30001:9:5","type":""}]},{"nodeType":"YulAssignment","src":"30025:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"30038:4:5","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30025:9:5"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"30089:611:5","statements":[{"nodeType":"YulVariableDeclaration","src":"30103:37:5","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30122:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30134:4:5","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30130:3:5"},"nodeType":"YulFunctionCall","src":"30130:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30118:3:5"},"nodeType":"YulFunctionCall","src":"30118:22:5"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"30107:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30154:51:5","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30200:4:5"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"30168:31:5"},"nodeType":"YulFunctionCall","src":"30168:37:5"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"30158:6:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"30218:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"30227:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"30222:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"30286:163:5","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30311:6:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30329:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30334:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30325:3:5"},"nodeType":"YulFunctionCall","src":"30325:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30319:5:5"},"nodeType":"YulFunctionCall","src":"30319:26:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30304:6:5"},"nodeType":"YulFunctionCall","src":"30304:42:5"},"nodeType":"YulExpressionStatement","src":"30304:42:5"},{"nodeType":"YulAssignment","src":"30363:24:5","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30377:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"30385:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30373:3:5"},"nodeType":"YulFunctionCall","src":"30373:14:5"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30363:6:5"}]},{"nodeType":"YulAssignment","src":"30404:31:5","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30421:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"30432:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30417:3:5"},"nodeType":"YulFunctionCall","src":"30417:18:5"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30404:9:5"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30252:1:5"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"30255:7:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30249:2:5"},"nodeType":"YulFunctionCall","src":"30249:14:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"30264:21:5","statements":[{"nodeType":"YulAssignment","src":"30266:17:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"30275:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"30278:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30271:3:5"},"nodeType":"YulFunctionCall","src":"30271:12:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"30266:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"30245:3:5","statements":[]},"src":"30241:208:5"},{"body":{"nodeType":"YulBlock","src":"30485:156:5","statements":[{"nodeType":"YulVariableDeclaration","src":"30503:43:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30530:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30535:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30526:3:5"},"nodeType":"YulFunctionCall","src":"30526:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30520:5:5"},"nodeType":"YulFunctionCall","src":"30520:26:5"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"30507:9:5","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30570:6:5"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"30597:9:5"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30612:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"30620:4:5","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30608:3:5"},"nodeType":"YulFunctionCall","src":"30608:17:5"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"30578:18:5"},"nodeType":"YulFunctionCall","src":"30578:48:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30563:6:5"},"nodeType":"YulFunctionCall","src":"30563:64:5"},"nodeType":"YulExpressionStatement","src":"30563:64:5"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"30468:7:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"30477:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30465:2:5"},"nodeType":"YulFunctionCall","src":"30465:19:5"},"nodeType":"YulIf","src":"30462:179:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30661:4:5"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30675:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"30683:1:5","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"30671:3:5"},"nodeType":"YulFunctionCall","src":"30671:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"30687:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30667:3:5"},"nodeType":"YulFunctionCall","src":"30667:22:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30654:6:5"},"nodeType":"YulFunctionCall","src":"30654:36:5"},"nodeType":"YulExpressionStatement","src":"30654:36:5"}]},"nodeType":"YulCase","src":"30082:618:5","value":{"kind":"number","nodeType":"YulLiteral","src":"30087:1:5","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"30717:222:5","statements":[{"nodeType":"YulVariableDeclaration","src":"30731:14:5","value":{"kind":"number","nodeType":"YulLiteral","src":"30744:1:5","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30735:5:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"30768:67:5","statements":[{"nodeType":"YulAssignment","src":"30786:35:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30805:3:5"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30810:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30801:3:5"},"nodeType":"YulFunctionCall","src":"30801:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30795:5:5"},"nodeType":"YulFunctionCall","src":"30795:26:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30786:5:5"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"30761:6:5"},"nodeType":"YulIf","src":"30758:77:5"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30855:4:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30914:5:5"},{"name":"newLen","nodeType":"YulIdentifier","src":"30921:6:5"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"30861:52:5"},"nodeType":"YulFunctionCall","src":"30861:67:5"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30848:6:5"},"nodeType":"YulFunctionCall","src":"30848:81:5"},"nodeType":"YulExpressionStatement","src":"30848:81:5"}]},"nodeType":"YulCase","src":"30709:230:5","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"30062:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"30070:2:5","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30059:2:5"},"nodeType":"YulFunctionCall","src":"30059:14:5"},"nodeType":"YulSwitch","src":"30052:887:5"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29631:4:5","type":""},{"name":"src","nodeType":"YulTypedName","src":"29637:3:5","type":""}],"src":"29550:1395:5"},{"body":{"nodeType":"YulBlock","src":"31273:786:5","statements":[{"nodeType":"YulAssignment","src":"31283:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31295:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31306:3:5","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31291:3:5"},"nodeType":"YulFunctionCall","src":"31291:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31283:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31364:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31377:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31388:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31373:3:5"},"nodeType":"YulFunctionCall","src":"31373:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31320:43:5"},"nodeType":"YulFunctionCall","src":"31320:71:5"},"nodeType":"YulExpressionStatement","src":"31320:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31445:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31458:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31469:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31454:3:5"},"nodeType":"YulFunctionCall","src":"31454:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31401:43:5"},"nodeType":"YulFunctionCall","src":"31401:72:5"},"nodeType":"YulExpressionStatement","src":"31401:72:5"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31527:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31540:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31551:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31536:3:5"},"nodeType":"YulFunctionCall","src":"31536:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31483:43:5"},"nodeType":"YulFunctionCall","src":"31483:72:5"},"nodeType":"YulExpressionStatement","src":"31483:72:5"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31609:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31622:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31633:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31618:3:5"},"nodeType":"YulFunctionCall","src":"31618:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31565:43:5"},"nodeType":"YulFunctionCall","src":"31565:72:5"},"nodeType":"YulExpressionStatement","src":"31565:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"31691:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31704:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31715:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31700:3:5"},"nodeType":"YulFunctionCall","src":"31700:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31647:43:5"},"nodeType":"YulFunctionCall","src":"31647:73:5"},"nodeType":"YulExpressionStatement","src":"31647:73:5"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"31774:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31787:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31798:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31783:3:5"},"nodeType":"YulFunctionCall","src":"31783:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31730:43:5"},"nodeType":"YulFunctionCall","src":"31730:73:5"},"nodeType":"YulExpressionStatement","src":"31730:73:5"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"31857:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31870:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31881:3:5","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31866:3:5"},"nodeType":"YulFunctionCall","src":"31866:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31813:43:5"},"nodeType":"YulFunctionCall","src":"31813:73:5"},"nodeType":"YulExpressionStatement","src":"31813:73:5"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"31940:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31953:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"31964:3:5","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31949:3:5"},"nodeType":"YulFunctionCall","src":"31949:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31896:43:5"},"nodeType":"YulFunctionCall","src":"31896:73:5"},"nodeType":"YulExpressionStatement","src":"31896:73:5"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"32023:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32036:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32047:3:5","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32032:3:5"},"nodeType":"YulFunctionCall","src":"32032:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31979:43:5"},"nodeType":"YulFunctionCall","src":"31979:73:5"},"nodeType":"YulExpressionStatement","src":"31979:73:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31181:9:5","type":""},{"name":"value8","nodeType":"YulTypedName","src":"31193:6:5","type":""},{"name":"value7","nodeType":"YulTypedName","src":"31201:6:5","type":""},{"name":"value6","nodeType":"YulTypedName","src":"31209:6:5","type":""},{"name":"value5","nodeType":"YulTypedName","src":"31217:6:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"31225:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31233:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31241:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31249:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31257:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31268:4:5","type":""}],"src":"30951:1108:5"},{"body":{"nodeType":"YulBlock","src":"32171:67:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32193:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"32201:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32189:3:5"},"nodeType":"YulFunctionCall","src":"32189:14:5"},{"hexValue":"4e6f74436f6d6d69747465645061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"32205:25:5","type":"","value":"NotCommittedParticipant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32182:6:5"},"nodeType":"YulFunctionCall","src":"32182:49:5"},"nodeType":"YulExpressionStatement","src":"32182:49:5"}]},"name":"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32163:6:5","type":""}],"src":"32065:173:5"},{"body":{"nodeType":"YulBlock","src":"32390:220:5","statements":[{"nodeType":"YulAssignment","src":"32400:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32466:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"32471:2:5","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32407:58:5"},"nodeType":"YulFunctionCall","src":"32407:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32400:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32572:3:5"}],"functionName":{"name":"store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f","nodeType":"YulIdentifier","src":"32483:88:5"},"nodeType":"YulFunctionCall","src":"32483:93:5"},"nodeType":"YulExpressionStatement","src":"32483:93:5"},{"nodeType":"YulAssignment","src":"32585:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32596:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"32601:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32592:3:5"},"nodeType":"YulFunctionCall","src":"32592:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32585:3:5"}]}]},"name":"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32378:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32386:3:5","type":""}],"src":"32244:366:5"},{"body":{"nodeType":"YulBlock","src":"32787:248:5","statements":[{"nodeType":"YulAssignment","src":"32797:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32809:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32820:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32805:3:5"},"nodeType":"YulFunctionCall","src":"32805:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32797:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32844:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"32855:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32840:3:5"},"nodeType":"YulFunctionCall","src":"32840:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32863:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"32869:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32859:3:5"},"nodeType":"YulFunctionCall","src":"32859:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32833:6:5"},"nodeType":"YulFunctionCall","src":"32833:47:5"},"nodeType":"YulExpressionStatement","src":"32833:47:5"},{"nodeType":"YulAssignment","src":"32889:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33023:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32897:124:5"},"nodeType":"YulFunctionCall","src":"32897:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32889:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32767:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32782:4:5","type":""}],"src":"32616:419:5"},{"body":{"nodeType":"YulBlock","src":"33147:59:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33169:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"33177:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33165:3:5"},"nodeType":"YulFunctionCall","src":"33165:14:5"},{"hexValue":"416c726561647952657665616c6564","kind":"string","nodeType":"YulLiteral","src":"33181:17:5","type":"","value":"AlreadyRevealed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33158:6:5"},"nodeType":"YulFunctionCall","src":"33158:41:5"},"nodeType":"YulExpressionStatement","src":"33158:41:5"}]},"name":"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33139:6:5","type":""}],"src":"33041:165:5"},{"body":{"nodeType":"YulBlock","src":"33358:220:5","statements":[{"nodeType":"YulAssignment","src":"33368:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33434:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"33439:2:5","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33375:58:5"},"nodeType":"YulFunctionCall","src":"33375:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33368:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33540:3:5"}],"functionName":{"name":"store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8","nodeType":"YulIdentifier","src":"33451:88:5"},"nodeType":"YulFunctionCall","src":"33451:93:5"},"nodeType":"YulExpressionStatement","src":"33451:93:5"},{"nodeType":"YulAssignment","src":"33553:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33564:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"33569:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33560:3:5"},"nodeType":"YulFunctionCall","src":"33560:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33553:3:5"}]}]},"name":"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33346:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33354:3:5","type":""}],"src":"33212:366:5"},{"body":{"nodeType":"YulBlock","src":"33755:248:5","statements":[{"nodeType":"YulAssignment","src":"33765:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33777:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33788:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33773:3:5"},"nodeType":"YulFunctionCall","src":"33773:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33765:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33812:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"33823:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33808:3:5"},"nodeType":"YulFunctionCall","src":"33808:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33831:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"33837:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33827:3:5"},"nodeType":"YulFunctionCall","src":"33827:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33801:6:5"},"nodeType":"YulFunctionCall","src":"33801:47:5"},"nodeType":"YulExpressionStatement","src":"33801:47:5"},{"nodeType":"YulAssignment","src":"33857:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33991:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33865:124:5"},"nodeType":"YulFunctionCall","src":"33865:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33857:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33735:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33750:4:5","type":""}],"src":"33584:419:5"},{"body":{"nodeType":"YulBlock","src":"34115:59:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34137:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"34145:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34133:3:5"},"nodeType":"YulFunctionCall","src":"34133:14:5"},{"hexValue":"414e6f744d61746368436f6d6d6974","kind":"string","nodeType":"YulLiteral","src":"34149:17:5","type":"","value":"ANotMatchCommit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34126:6:5"},"nodeType":"YulFunctionCall","src":"34126:41:5"},"nodeType":"YulExpressionStatement","src":"34126:41:5"}]},"name":"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34107:6:5","type":""}],"src":"34009:165:5"},{"body":{"nodeType":"YulBlock","src":"34326:220:5","statements":[{"nodeType":"YulAssignment","src":"34336:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34402:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"34407:2:5","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34343:58:5"},"nodeType":"YulFunctionCall","src":"34343:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34336:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34508:3:5"}],"functionName":{"name":"store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba","nodeType":"YulIdentifier","src":"34419:88:5"},"nodeType":"YulFunctionCall","src":"34419:93:5"},"nodeType":"YulExpressionStatement","src":"34419:93:5"},{"nodeType":"YulAssignment","src":"34521:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34532:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"34537:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34528:3:5"},"nodeType":"YulFunctionCall","src":"34528:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34521:3:5"}]}]},"name":"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34314:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34322:3:5","type":""}],"src":"34180:366:5"},{"body":{"nodeType":"YulBlock","src":"34723:248:5","statements":[{"nodeType":"YulAssignment","src":"34733:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34745:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"34756:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34741:3:5"},"nodeType":"YulFunctionCall","src":"34741:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34733:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34780:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"34791:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34776:3:5"},"nodeType":"YulFunctionCall","src":"34776:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34799:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"34805:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34795:3:5"},"nodeType":"YulFunctionCall","src":"34795:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34769:6:5"},"nodeType":"YulFunctionCall","src":"34769:47:5"},"nodeType":"YulExpressionStatement","src":"34769:47:5"},{"nodeType":"YulAssignment","src":"34825:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34959:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34833:124:5"},"nodeType":"YulFunctionCall","src":"34833:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34825:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34703:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34718:4:5","type":""}],"src":"34552:419:5"},{"body":{"nodeType":"YulBlock","src":"35020:128:5","statements":[{"nodeType":"YulAssignment","src":"35030:33:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35057:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35039:17:5"},"nodeType":"YulFunctionCall","src":"35039:24:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35030:5:5"}]},{"body":{"nodeType":"YulBlock","src":"35091:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35093:16:5"},"nodeType":"YulFunctionCall","src":"35093:18:5"},"nodeType":"YulExpressionStatement","src":"35093:18:5"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35078:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"35085:4:5","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"35075:2:5"},"nodeType":"YulFunctionCall","src":"35075:15:5"},"nodeType":"YulIf","src":"35072:41:5"},{"nodeType":"YulAssignment","src":"35122:20:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35133:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"35140:1:5","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35129:3:5"},"nodeType":"YulFunctionCall","src":"35129:13:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"35122:3:5"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35006:5:5","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"35016:3:5","type":""}],"src":"34977:171:5"},{"body":{"nodeType":"YulBlock","src":"35260:119:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35282:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"35290:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35278:3:5"},"nodeType":"YulFunctionCall","src":"35278:14:5"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"35294:34:5","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35271:6:5"},"nodeType":"YulFunctionCall","src":"35271:58:5"},"nodeType":"YulExpressionStatement","src":"35271:58:5"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35350:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"35358:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35346:3:5"},"nodeType":"YulFunctionCall","src":"35346:15:5"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"35363:8:5","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35339:6:5"},"nodeType":"YulFunctionCall","src":"35339:33:5"},"nodeType":"YulExpressionStatement","src":"35339:33:5"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35252:6:5","type":""}],"src":"35154:225:5"},{"body":{"nodeType":"YulBlock","src":"35531:220:5","statements":[{"nodeType":"YulAssignment","src":"35541:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35607:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"35612:2:5","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35548:58:5"},"nodeType":"YulFunctionCall","src":"35548:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35541:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35713:3:5"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"35624:88:5"},"nodeType":"YulFunctionCall","src":"35624:93:5"},"nodeType":"YulExpressionStatement","src":"35624:93:5"},{"nodeType":"YulAssignment","src":"35726:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35737:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"35742:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35733:3:5"},"nodeType":"YulFunctionCall","src":"35733:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35726:3:5"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35519:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35527:3:5","type":""}],"src":"35385:366:5"},{"body":{"nodeType":"YulBlock","src":"35928:248:5","statements":[{"nodeType":"YulAssignment","src":"35938:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35950:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"35961:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35946:3:5"},"nodeType":"YulFunctionCall","src":"35946:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35938:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35985:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"35996:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35981:3:5"},"nodeType":"YulFunctionCall","src":"35981:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36004:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"36010:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36000:3:5"},"nodeType":"YulFunctionCall","src":"36000:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35974:6:5"},"nodeType":"YulFunctionCall","src":"35974:47:5"},"nodeType":"YulExpressionStatement","src":"35974:47:5"},{"nodeType":"YulAssignment","src":"36030:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36164:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36038:124:5"},"nodeType":"YulFunctionCall","src":"36038:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36030:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35908:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35923:4:5","type":""}],"src":"35757:419:5"},{"body":{"nodeType":"YulBlock","src":"36288:60:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36310:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"36318:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36306:3:5"},"nodeType":"YulFunctionCall","src":"36306:14:5"},{"hexValue":"416c7265616479436f6d6d6974746564","kind":"string","nodeType":"YulLiteral","src":"36322:18:5","type":"","value":"AlreadyCommitted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36299:6:5"},"nodeType":"YulFunctionCall","src":"36299:42:5"},"nodeType":"YulExpressionStatement","src":"36299:42:5"}]},"name":"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36280:6:5","type":""}],"src":"36182:166:5"},{"body":{"nodeType":"YulBlock","src":"36500:220:5","statements":[{"nodeType":"YulAssignment","src":"36510:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36576:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"36581:2:5","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36517:58:5"},"nodeType":"YulFunctionCall","src":"36517:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36510:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36682:3:5"}],"functionName":{"name":"store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532","nodeType":"YulIdentifier","src":"36593:88:5"},"nodeType":"YulFunctionCall","src":"36593:93:5"},"nodeType":"YulExpressionStatement","src":"36593:93:5"},{"nodeType":"YulAssignment","src":"36695:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36706:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"36711:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36702:3:5"},"nodeType":"YulFunctionCall","src":"36702:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36695:3:5"}]}]},"name":"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36488:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36496:3:5","type":""}],"src":"36354:366:5"},{"body":{"nodeType":"YulBlock","src":"36897:248:5","statements":[{"nodeType":"YulAssignment","src":"36907:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36919:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"36930:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36915:3:5"},"nodeType":"YulFunctionCall","src":"36915:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36907:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36954:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"36965:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36950:3:5"},"nodeType":"YulFunctionCall","src":"36950:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36973:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"36979:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36969:3:5"},"nodeType":"YulFunctionCall","src":"36969:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36943:6:5"},"nodeType":"YulFunctionCall","src":"36943:47:5"},"nodeType":"YulExpressionStatement","src":"36943:47:5"},{"nodeType":"YulAssignment","src":"36999:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37133:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37007:124:5"},"nodeType":"YulFunctionCall","src":"37007:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36999:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36877:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36892:4:5","type":""}],"src":"36726:419:5"},{"body":{"nodeType":"YulBlock","src":"37381:525:5","statements":[{"nodeType":"YulAssignment","src":"37391:27:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37403:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37414:3:5","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37399:3:5"},"nodeType":"YulFunctionCall","src":"37399:19:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37391:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37472:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37485:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37496:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37481:3:5"},"nodeType":"YulFunctionCall","src":"37481:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"37428:43:5"},"nodeType":"YulFunctionCall","src":"37428:71:5"},"nodeType":"YulExpressionStatement","src":"37428:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37553:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37566:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37577:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37562:3:5"},"nodeType":"YulFunctionCall","src":"37562:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37509:43:5"},"nodeType":"YulFunctionCall","src":"37509:72:5"},"nodeType":"YulExpressionStatement","src":"37509:72:5"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37602:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37613:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37598:3:5"},"nodeType":"YulFunctionCall","src":"37598:18:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37622:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"37628:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37618:3:5"},"nodeType":"YulFunctionCall","src":"37618:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37591:6:5"},"nodeType":"YulFunctionCall","src":"37591:48:5"},"nodeType":"YulExpressionStatement","src":"37591:48:5"},{"nodeType":"YulAssignment","src":"37648:86:5","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37720:6:5"},{"name":"tail","nodeType":"YulIdentifier","src":"37729:4:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37656:63:5"},"nodeType":"YulFunctionCall","src":"37656:78:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37648:4:5"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37788:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37801:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37812:2:5","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37797:3:5"},"nodeType":"YulFunctionCall","src":"37797:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37744:43:5"},"nodeType":"YulFunctionCall","src":"37744:72:5"},"nodeType":"YulExpressionStatement","src":"37744:72:5"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37870:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37883:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"37894:3:5","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37879:3:5"},"nodeType":"YulFunctionCall","src":"37879:19:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37826:43:5"},"nodeType":"YulFunctionCall","src":"37826:73:5"},"nodeType":"YulExpressionStatement","src":"37826:73:5"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37321:9:5","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37333:6:5","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37341:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37349:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37357:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37365:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37376:4:5","type":""}],"src":"37151:755:5"},{"body":{"nodeType":"YulBlock","src":"38018:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38040:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"38048:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38036:3:5"},"nodeType":"YulFunctionCall","src":"38036:14:5"},{"hexValue":"46756e6374696f6e496e76616c69644174546869735374616765","kind":"string","nodeType":"YulLiteral","src":"38052:28:5","type":"","value":"FunctionInvalidAtThisStage"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38029:6:5"},"nodeType":"YulFunctionCall","src":"38029:52:5"},"nodeType":"YulExpressionStatement","src":"38029:52:5"}]},"name":"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38010:6:5","type":""}],"src":"37912:176:5"},{"body":{"nodeType":"YulBlock","src":"38240:220:5","statements":[{"nodeType":"YulAssignment","src":"38250:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38316:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"38321:2:5","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38257:58:5"},"nodeType":"YulFunctionCall","src":"38257:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38250:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38422:3:5"}],"functionName":{"name":"store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc","nodeType":"YulIdentifier","src":"38333:88:5"},"nodeType":"YulFunctionCall","src":"38333:93:5"},"nodeType":"YulExpressionStatement","src":"38333:93:5"},{"nodeType":"YulAssignment","src":"38435:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38446:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"38451:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38442:3:5"},"nodeType":"YulFunctionCall","src":"38442:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38435:3:5"}]}]},"name":"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38228:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38236:3:5","type":""}],"src":"38094:366:5"},{"body":{"nodeType":"YulBlock","src":"38637:248:5","statements":[{"nodeType":"YulAssignment","src":"38647:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38659:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"38670:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38655:3:5"},"nodeType":"YulFunctionCall","src":"38655:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38647:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38694:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"38705:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38690:3:5"},"nodeType":"YulFunctionCall","src":"38690:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38713:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"38719:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38709:3:5"},"nodeType":"YulFunctionCall","src":"38709:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38683:6:5"},"nodeType":"YulFunctionCall","src":"38683:47:5"},"nodeType":"YulExpressionStatement","src":"38683:47:5"},{"nodeType":"YulAssignment","src":"38739:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38873:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38747:124:5"},"nodeType":"YulFunctionCall","src":"38747:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38739:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38617:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38632:4:5","type":""}],"src":"38466:419:5"},{"body":{"nodeType":"YulBlock","src":"38933:143:5","statements":[{"nodeType":"YulAssignment","src":"38943:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38966:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38948:17:5"},"nodeType":"YulFunctionCall","src":"38948:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"38943:1:5"}]},{"nodeType":"YulAssignment","src":"38977:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39000:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"38982:17:5"},"nodeType":"YulFunctionCall","src":"38982:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"38977:1:5"}]},{"body":{"nodeType":"YulBlock","src":"39024:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"39026:16:5"},"nodeType":"YulFunctionCall","src":"39026:18:5"},"nodeType":"YulExpressionStatement","src":"39026:18:5"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"39021:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"39014:6:5"},"nodeType":"YulFunctionCall","src":"39014:9:5"},"nodeType":"YulIf","src":"39011:35:5"},{"nodeType":"YulAssignment","src":"39056:14:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"39065:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"39068:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39061:3:5"},"nodeType":"YulFunctionCall","src":"39061:9:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"39056:1:5"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"38922:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"38925:1:5","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"38931:1:5","type":""}],"src":"38891:185:5"},{"body":{"nodeType":"YulBlock","src":"39188:76:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39210:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"39218:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39206:3:5"},"nodeType":"YulFunctionCall","src":"39206:14:5"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"39222:34:5","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39199:6:5"},"nodeType":"YulFunctionCall","src":"39199:58:5"},"nodeType":"YulExpressionStatement","src":"39199:58:5"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39180:6:5","type":""}],"src":"39082:182:5"},{"body":{"nodeType":"YulBlock","src":"39416:220:5","statements":[{"nodeType":"YulAssignment","src":"39426:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39492:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"39497:2:5","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39433:58:5"},"nodeType":"YulFunctionCall","src":"39433:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39426:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39598:3:5"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"39509:88:5"},"nodeType":"YulFunctionCall","src":"39509:93:5"},"nodeType":"YulExpressionStatement","src":"39509:93:5"},{"nodeType":"YulAssignment","src":"39611:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39622:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"39627:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39618:3:5"},"nodeType":"YulFunctionCall","src":"39618:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39611:3:5"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39404:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39412:3:5","type":""}],"src":"39270:366:5"},{"body":{"nodeType":"YulBlock","src":"39813:248:5","statements":[{"nodeType":"YulAssignment","src":"39823:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39835:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"39846:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39831:3:5"},"nodeType":"YulFunctionCall","src":"39831:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39823:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39870:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"39881:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39866:3:5"},"nodeType":"YulFunctionCall","src":"39866:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39889:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"39895:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39885:3:5"},"nodeType":"YulFunctionCall","src":"39885:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39859:6:5"},"nodeType":"YulFunctionCall","src":"39859:47:5"},"nodeType":"YulExpressionStatement","src":"39859:47:5"},{"nodeType":"YulAssignment","src":"39915:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40049:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39923:124:5"},"nodeType":"YulFunctionCall","src":"39923:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39915:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39793:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39808:4:5","type":""}],"src":"39642:419:5"},{"body":{"nodeType":"YulBlock","src":"40173:55:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40195:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"40203:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40191:3:5"},"nodeType":"YulFunctionCall","src":"40191:14:5"},{"hexValue":"416c6c46696e6973686564","kind":"string","nodeType":"YulLiteral","src":"40207:13:5","type":"","value":"AllFinished"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40184:6:5"},"nodeType":"YulFunctionCall","src":"40184:37:5"},"nodeType":"YulExpressionStatement","src":"40184:37:5"}]},"name":"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40165:6:5","type":""}],"src":"40067:161:5"},{"body":{"nodeType":"YulBlock","src":"40380:220:5","statements":[{"nodeType":"YulAssignment","src":"40390:74:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40456:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"40461:2:5","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40397:58:5"},"nodeType":"YulFunctionCall","src":"40397:67:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40390:3:5"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40562:3:5"}],"functionName":{"name":"store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa","nodeType":"YulIdentifier","src":"40473:88:5"},"nodeType":"YulFunctionCall","src":"40473:93:5"},"nodeType":"YulExpressionStatement","src":"40473:93:5"},{"nodeType":"YulAssignment","src":"40575:19:5","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40586:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"40591:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40582:3:5"},"nodeType":"YulFunctionCall","src":"40582:12:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40575:3:5"}]}]},"name":"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40368:3:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40376:3:5","type":""}],"src":"40234:366:5"},{"body":{"nodeType":"YulBlock","src":"40777:248:5","statements":[{"nodeType":"YulAssignment","src":"40787:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40799:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"40810:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40795:3:5"},"nodeType":"YulFunctionCall","src":"40795:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40787:4:5"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40834:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"40845:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40830:3:5"},"nodeType":"YulFunctionCall","src":"40830:17:5"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40853:4:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"40859:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40849:3:5"},"nodeType":"YulFunctionCall","src":"40849:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40823:6:5"},"nodeType":"YulFunctionCall","src":"40823:47:5"},"nodeType":"YulExpressionStatement","src":"40823:47:5"},{"nodeType":"YulAssignment","src":"40879:139:5","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41013:4:5"}],"functionName":{"name":"abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40887:124:5"},"nodeType":"YulFunctionCall","src":"40887:131:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40879:4:5"}]}]},"name":"abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40757:9:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40772:4:5","type":""}],"src":"40606:419:5"},{"body":{"nodeType":"YulBlock","src":"41079:362:5","statements":[{"nodeType":"YulAssignment","src":"41089:25:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41112:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41094:17:5"},"nodeType":"YulFunctionCall","src":"41094:20:5"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41089:1:5"}]},{"nodeType":"YulAssignment","src":"41123:25:5","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41146:1:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41128:17:5"},"nodeType":"YulFunctionCall","src":"41128:20:5"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41123:1:5"}]},{"nodeType":"YulVariableDeclaration","src":"41157:28:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41180:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"41183:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41176:3:5"},"nodeType":"YulFunctionCall","src":"41176:9:5"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"41161:11:5","type":""}]},{"nodeType":"YulAssignment","src":"41194:41:5","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"41223:11:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41205:17:5"},"nodeType":"YulFunctionCall","src":"41205:30:5"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"41194:7:5"}]},{"body":{"nodeType":"YulBlock","src":"41412:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41414:16:5"},"nodeType":"YulFunctionCall","src":"41414:18:5"},"nodeType":"YulExpressionStatement","src":"41414:18:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41345:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41338:6:5"},"nodeType":"YulFunctionCall","src":"41338:9:5"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41368:1:5"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"41375:7:5"},{"name":"x","nodeType":"YulIdentifier","src":"41384:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"41371:3:5"},"nodeType":"YulFunctionCall","src":"41371:15:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41365:2:5"},"nodeType":"YulFunctionCall","src":"41365:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"41318:2:5"},"nodeType":"YulFunctionCall","src":"41318:83:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41298:6:5"},"nodeType":"YulFunctionCall","src":"41298:113:5"},"nodeType":"YulIf","src":"41295:139:5"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41062:1:5","type":""},{"name":"y","nodeType":"YulTypedName","src":"41065:1:5","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"41071:7:5","type":""}],"src":"41031:410:5"},{"body":{"nodeType":"YulBlock","src":"41583:139:5","statements":[{"nodeType":"YulAssignment","src":"41594:102:5","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41683:6:5"},{"name":"pos","nodeType":"YulIdentifier","src":"41692:3:5"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41601:81:5"},"nodeType":"YulFunctionCall","src":"41601:95:5"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41594:3:5"}]},{"nodeType":"YulAssignment","src":"41706:10:5","value":{"name":"pos","nodeType":"YulIdentifier","src":"41713:3:5"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41706:3:5"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41562:3:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41568:6:5","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41579:3:5","type":""}],"src":"41447:275:5"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0xa0)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_struct$_VDFClaim_$1185_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct Pietrzak_VDF.VDFClaim\n    function abi_decode_t_struct$_VDFClaim_$1185_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // n\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // x\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // y\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // T\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // v\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0xa0))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0xa0) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_VDFClaim_$1185_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct Pietrzak_VDF.VDFClaim[]\n    function abi_decode_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_struct$_VDFClaim_$1185_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_bool__to_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Stages_$145(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Stages_$145(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stages_$145(value)\n    }\n\n    function convert_t_enum$_Stages_$145_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stages_$145(value)\n    }\n\n    function abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stages_$145_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Stages_$145__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stages_$145_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotAllRevealed\")\n\n    }\n\n    function abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08638370fc60a980ffdbf34ae2369e8563ed553c41af60b16a02608917c7f042_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"OmegaAlreadyCompleted\")\n\n    }\n\n    function abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_109454f4877fb410cced8570a44fe722b969884a3a7e2b18182858dc8298e6f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162(memPtr) {\n\n        mstore(add(memPtr, 0), \"GreaterOrEqualThanN\")\n\n    }\n\n    function abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6070b942f398688b97d390e89d0a5076952f4a098cdc8864151760d3a48d9162_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TNotMatched\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfeab5781f7927c75a491714ef4bc22623aca48f53d01e35b65d91793b7509c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_struct$_VDFClaim_$1185_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_VDFClaim_$1185_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"RecovNotMatchX\")\n\n    }\n\n    function abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01b5003d65ef4b2a5309c63758a74b79e6de12c1f68db25b63a2d08ebd2f08d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68(memPtr) {\n\n        mstore(add(memPtr, 0), \"CommitRevealDurationLessThanComm\")\n\n        mstore(add(memPtr, 32), \"itDuration\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f91ea9720420293742abb4c84a6591a75981a8274a3b48fe1cdbdf8c620ab68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874(memPtr) {\n\n        mstore(add(memPtr, 0), \"StageNotFinished\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccc770b303b6eb22036d926d6bc35d13dd0e8af3139e4b40461d1d98bd4bf874_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotCommittedParticipant\")\n\n    }\n\n    function abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245bdbf4ef742a90e9daa2a65e1a5d9f7d6b23cf8897ff59f527ea13aa1fb57f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"AlreadyRevealed\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a34bfcf2853e45a1dc0c372a7ad56ae9a8a2eab48590df3c0a31d12bb21b2e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ANotMatchCommit\")\n\n    }\n\n    function abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2352b6e3928e93124949b2d0468d77a57551355e135f8f36671c0bb52e15b8ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532(memPtr) {\n\n        mstore(add(memPtr, 0), \"AlreadyCommitted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4cda7ddc338a852ffe13c66aa8562a4bd51832f98f60d49d797090172c000532_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"FunctionInvalidAtThisStage\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d91b7c312b0eb4b8b7d37a44d1cf49f8ecf2d4aea3d6c71c494be51276c6bfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"AllFinished\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aedb57a2c44df5e68d0d5e1ea3c02945d24582fd56d715936b470a7e9376faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E97925 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xC2CA0AC5 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDCA669E4 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF4F98AD5 EQ PUSH2 0x354 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x78E97925 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x7F93C751 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA58BE661 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xB0E9EB3F EQ PUSH2 0x2AE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x50D30CBF GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x50D30CBF EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x73FA4F46 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x77F0ADE9 EQ PUSH2 0x214 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x12CE9906 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x146CA531 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x22FADC28 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0xAEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0xB76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x251C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2717 JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x105C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x28B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x2970 JUMP JUMPDEST PUSH2 0x14E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x156C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44D PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x457 PUSH1 0x2 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x5AD JUMPI DUP3 DUP1 PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST PUSH2 0x596 PUSH2 0x568 DUP7 DUP7 PUSH2 0x525 PUSH1 0x8 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x199C JUMP JUMPDEST PUSH2 0x52E DUP12 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53F SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST DUP8 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x1A6A JUMP JUMPDEST DUP8 MULMOD SWAP6 POP DUP1 DUP1 PUSH2 0x5A5 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D6 JUMP JUMPDEST POP DUP5 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x61D JUMPI PUSH2 0x61C PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x31D4D513959D79380D7F8AF557AC2408B4D6C2CF59AF943DD997A11100520F66 DUP8 DUP7 TIMESTAMP DUP5 PUSH1 0x40 MLOAD PUSH2 0x657 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x785 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x78F PUSH1 0x0 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EA SWAP1 PUSH2 0x2A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x807 JUMPI PUSH2 0x806 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD EQ PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP1 PUSH2 0x2CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8BD JUMPI DUP5 DUP5 DUP4 SWAP1 POP PUSH1 0xA0 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x88D JUMP JUMPDEST POP POP POP POP POP PUSH2 0x1B45 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 LT ISZERO PUSH2 0x993 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x968 DUP3 DUP7 PUSH2 0x925 DUP6 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x92E DUP9 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93F SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST DUP8 PUSH2 0x1A6A JUMP JUMPDEST SWAP1 POP DUP5 DUP1 PUSH2 0x979 JUMPI PUSH2 0x978 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP2 DUP8 MULMOD SWAP6 POP POP POP DUP1 DUP1 PUSH2 0x98B SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CB JUMP JUMPDEST POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP4 EQ PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x9 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA7F PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3FC2D4F2E2E4E84069307A4D3A9B7AD25D93E2026627031A87B54A1C61907CE CALLER DUP5 DUP9 DUP9 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xA0 MUL ADD PUSH1 0x40 ADD CALLDATALOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xAD7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x0 PUSH2 0x1D09 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB91 JUMPI PUSH2 0xB90 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xBCD JUMPI POP PUSH1 0x2 SLOAD DUP2 PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x0 PUSH1 0x4 SLOAD EQ PUSH2 0xC78 JUMPI PUSH2 0xBE4 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x2F02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC9E JUMPI PUSH2 0xC9D PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD02 JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH2 0xCF1 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 PUSH2 0xD01 JUMPI POP PUSH1 0x0 PUSH1 0x4 SLOAD EQ JUMPDEST JUMPDEST ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0x1DCD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD51 JUMPI PUSH2 0xD50 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD LT PUSH2 0xD9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD94 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 LT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD6 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE14 JUMPI PUSH2 0xE13 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4B SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5D DUP2 PUSH2 0x1B45 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE71 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE9E JUMPI PUSH2 0xE9D PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF44 JUMPI PUSH2 0xF43 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH2 0xFAF SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP PUSH32 0x1A5E4FA05B9601AF979A44C50EF7E103B9B51CD105EB42040B5817EB3E58449C CALLER TIMESTAMP DUP7 DUP7 DUP7 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFEA JUMPI PUSH2 0xFE9 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x100A JUMPI PUSH2 0x1009 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x102A JUMPI PUSH2 0x1029 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x104E SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1112 SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FC SWAP1 PUSH2 0x3359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x124A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1241 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x12AD PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x9 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1A6A JUMP JUMPDEST EQ PUSH2 0x12ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E4 SWAP1 PUSH2 0x3431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F5 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x1 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD PUSH2 0x1310 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE SWAP1 POP DUP5 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SUB PUSH2 0x13AB JUMPI PUSH1 0x2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x167147E5476FB37532A0AAB79DEA3EB6B8FE0FBD723AC6025B0DE29237B0496 CALLER DUP7 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x144C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x1468 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1494 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x14F1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1557 SWAP1 PUSH2 0x34EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 DUP2 PUSH2 0x1D09 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 LT PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15CF PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1669 SWAP1 PUSH2 0x3558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x167A PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x1684 PUSH1 0x0 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD PUSH2 0x169A SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C6 SWAP1 PUSH2 0x2E39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1713 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1713 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 PUSH2 0x1724 DUP6 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1735 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP DUP2 PUSH2 0x18D6 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xBD41A700367CDF3254812A81BAAD606F9D6102E946F1BB28AAB0A4AFE25EF0C9 CALLER DUP6 DUP4 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1916 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH2 0x1936 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1959 JUMPI PUSH2 0x1958 PUSH2 0x283D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1999 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1990 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x19AB DUP5 PUSH2 0x1EB4 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19FC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1A5F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1A53 JUMPI PUSH2 0x1A52 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1A0A JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH1 0x1 DUP1 DUP6 AND SUB PUSH2 0x1A9A JUMPI DUP3 DUP1 PUSH2 0x1A94 JUMPI PUSH2 0x1A93 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP6 DUP3 MULMOD SWAP1 POP JUMPDEST DUP3 DUP1 PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP6 DUP7 MULMOD SWAP5 POP PUSH1 0x2 DUP5 PUSH2 0x1ABB SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A72 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B01 PUSH2 0x283D JUMP JUMPDEST JUMPDEST GT PUSH2 0x1B42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B39 SWAP1 PUSH2 0x361E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C7F JUMPI PUSH1 0x0 PUSH2 0x1B7C DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2007 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x1B93 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1BA8 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1BC7 JUMPI PUSH2 0x1BC6 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x1BE9 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1BF7 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x1C2A JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST DUP5 PUSH1 0x1 DUP4 PUSH2 0x1C38 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x2BF1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD EQ PUSH2 0x1C6B JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x1C86 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x1C77 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B4F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C93 PUSH2 0x21DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CB1 PUSH2 0xD13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CFE SWAP1 PUSH2 0x36BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x283D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1E42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E39 SWAP1 PUSH2 0x3727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH2 0x1E52 JUMPI PUSH2 0x1E51 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E76 JUMPI PUSH2 0x1E75 PUSH2 0x283D JUMP JUMPDEST JUMPDEST ADDMOD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E89 JUMPI PUSH2 0x1E88 PUSH2 0x283D JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x283D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1F12 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1F4F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1F7E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1FA7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1F9D JUMPI PUSH2 0x1F9C PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1FCC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1FEF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1FFE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200F PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x20A7 JUMPI PUSH2 0x202F DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x2 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x2070 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x20FA DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x20C8 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x199C JUMP JUMPDEST PUSH2 0x20D5 DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x20E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x21E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD AND SUB PUSH2 0x2123 JUMPI PUSH1 0x2 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP3 POP PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x2136 SWAP2 SWAP1 PUSH2 0x2DD6 JUMP JUMPDEST PUSH2 0x2140 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 ADD MLOAD DUP3 DUP4 PUSH2 0x2153 SWAP2 SWAP1 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x215D SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21A2 PUSH2 0x2193 DUP9 PUSH1 0x20 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP9 PUSH1 0x80 ADD MLOAD DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21C8 PUSH2 0x21BD DUP9 PUSH1 0x80 ADD MLOAD DUP6 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP6 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x1A6A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x3789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x221B SWAP2 SWAP1 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2269 DUP2 PUSH2 0x2256 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2284 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A7 DUP2 PUSH2 0x2256 JUMP JUMPDEST DUP2 EQ PUSH2 0x22B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22C4 DUP2 PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22EF DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2300 DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2335 DUP3 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2345 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2360 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x236D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x237A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23A7 JUMPI PUSH2 0x23A6 PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x2387 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xA0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23E0 JUMPI PUSH2 0x23DF PUSH2 0x238C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2400 JUMPI PUSH2 0x23FF PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x240E DUP7 DUP3 DUP8 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242F JUMPI PUSH2 0x242E PUSH2 0x2299 JUMP JUMPDEST JUMPDEST PUSH2 0x243B DUP7 DUP3 DUP8 ADD PUSH2 0x2391 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x245D JUMPI PUSH2 0x245C PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x246B DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2489 DUP2 PUSH2 0x2474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x24A5 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24B2 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24BF PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24CC PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24D9 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24E6 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x24F3 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2500 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x250E PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2580 DUP3 PUSH2 0x2537 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x259F JUMPI PUSH2 0x259E PUSH2 0x2548 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B2 PUSH2 0x228A JUMP JUMPDEST SWAP1 POP PUSH2 0x25BE DUP3 DUP3 PUSH2 0x2577 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25DE JUMPI PUSH2 0x25DD PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST PUSH2 0x2614 PUSH1 0xA0 PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2624 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2638 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x264C DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2660 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x2674 DUP5 DUP3 DUP6 ADD PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2693 PUSH2 0x268E DUP5 PUSH2 0x25C3 JUMP JUMPDEST PUSH2 0x25A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x26B6 JUMPI PUSH2 0x26B5 PUSH2 0x238C JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26DF JUMPI DUP1 PUSH2 0x26CB DUP9 DUP3 PUSH2 0x25F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x26B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26FE JUMPI PUSH2 0x26FD PUSH2 0x2382 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x270E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2680 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2731 JUMPI PUSH2 0x2730 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x273F DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2750 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2761 DUP8 DUP3 DUP9 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2299 JUMP JUMPDEST JUMPDEST PUSH2 0x278E DUP8 DUP3 DUP9 ADD PUSH2 0x26E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x27A3 DUP2 PUSH2 0x232A JUMP JUMPDEST DUP2 EQ PUSH2 0x27AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C0 DUP2 PUSH2 0x279A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27DD JUMPI PUSH2 0x27DC PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EB DUP6 DUP3 DUP7 ADD PUSH2 0x27B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27FC DUP6 DUP3 DUP7 ADD PUSH2 0x22B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x281B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2828 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2480 JUMP JUMPDEST PUSH2 0x2835 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x287D JUMPI PUSH2 0x287C PUSH2 0x283D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x288E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289E DUP3 PUSH2 0x2880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28AE DUP2 PUSH2 0x2893 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2909 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2920 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x292A DUP2 DUP6 PUSH2 0x28DA JUMP JUMPDEST SWAP4 POP PUSH2 0x293A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH2 0x2943 DUP2 PUSH2 0x2537 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2968 DUP2 DUP5 PUSH2 0x2915 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2986 JUMPI PUSH2 0x2985 PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2994 DUP5 DUP3 DUP6 ADD PUSH2 0x27B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74416C6C52657665616C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D3 PUSH1 0xE DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x29DE DUP3 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A02 DUP2 PUSH2 0x29C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6D656761416C7265616479436F6D706C657465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH1 0x15 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4A DUP3 PUSH2 0x2A09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A6E DUP2 PUSH2 0x2A32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABA DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH2 0x2AC4 DUP2 DUP6 PUSH2 0x2AA4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28EB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AEC DUP3 DUP6 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF8 DUP3 DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1A DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2B2A JUMPI PUSH2 0x2B29 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B6F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2BA1 JUMPI PUSH2 0x2BA0 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2BC1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BCE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BDB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2BE8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x477265617465724F72457175616C5468616E4E00000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C56 PUSH1 0x13 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C61 DUP3 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C85 DUP2 PUSH2 0x2C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x544E6F744D617463686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC2 PUSH1 0xB DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCD DUP3 PUSH2 0x2C8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF1 DUP2 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x2294 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D1C DUP5 DUP3 DUP6 ADD PUSH2 0x25F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265636F764E6F744D6174636858000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5B PUSH1 0xE DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D66 DUP3 PUSH2 0x2D25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D8A DUP2 PUSH2 0x2D4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2DA6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2DC0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x2DCD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE1 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DEC DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E04 JUMPI PUSH2 0x2E03 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E64 JUMPI PUSH2 0x2E63 PUSH2 0x2E0A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x2E8C DUP2 PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x2E96 DUP2 DUP7 PUSH2 0x2AA4 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2EB1 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2EC6 JUMPI PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2EF9 JUMP JUMPDEST PUSH2 0x2ECF DUP6 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EF1 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2ED2 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0E DUP3 DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697452657665616C4475726174696F6E4C6573735468616E436F6D6D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x69744475726174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH1 0x2A DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746167654E6F7446696E697368656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE1 PUSH1 0x10 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEC DUP3 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3010 DUP2 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3064 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3027 JUMP JUMPDEST PUSH2 0x306E DUP7 DUP4 PUSH2 0x3027 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30AB PUSH2 0x30A6 PUSH2 0x30A1 DUP5 PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x3086 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30C5 DUP4 PUSH2 0x3090 JUMP JUMPDEST PUSH2 0x30D9 PUSH2 0x30D1 DUP3 PUSH2 0x30B2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3034 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x30EE PUSH2 0x30E1 JUMP JUMPDEST PUSH2 0x30F9 DUP2 DUP5 DUP5 PUSH2 0x30BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x311D JUMPI PUSH2 0x3112 PUSH1 0x0 DUP3 PUSH2 0x30E6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x30FF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3162 JUMPI PUSH2 0x3133 DUP2 PUSH2 0x2E6A JUMP JUMPDEST PUSH2 0x313C DUP5 PUSH2 0x3017 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x314B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x315F PUSH2 0x3157 DUP6 PUSH2 0x3017 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x30FE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3185 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3167 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319E DUP4 DUP4 PUSH2 0x3174 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31B7 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31CF PUSH2 0x2548 JUMP JUMPDEST JUMPDEST PUSH2 0x31DA DUP3 SLOAD PUSH2 0x2E39 JUMP JUMPDEST PUSH2 0x31E5 DUP3 DUP3 DUP6 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3218 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3206 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3210 DUP6 DUP3 PUSH2 0x3192 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3278 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3226 DUP7 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x324E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3229 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x326B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3267 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3174 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x3296 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x32A3 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32B0 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32BD PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32CA PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32D7 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32E4 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32F1 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x32FF PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74436F6D6D69747465645061727469636970616E74000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3343 PUSH1 0x17 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x334E DUP3 PUSH2 0x330D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3372 DUP2 PUSH2 0x3336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647952657665616C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AF PUSH1 0xF DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x33BA DUP3 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33DE DUP2 PUSH2 0x33A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414E6F744D61746368436F6D6D69740000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341B PUSH1 0xF DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3426 DUP3 PUSH2 0x33E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x344A DUP2 PUSH2 0x340E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345C DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x346F JUMPI PUSH2 0x346E PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34D6 PUSH1 0x26 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x34E1 DUP3 PUSH2 0x347A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3505 DUP2 PUSH2 0x34C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479436F6D6D697474656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3542 PUSH1 0x10 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x354D DUP3 PUSH2 0x350C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3571 DUP2 PUSH2 0x3535 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x358D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x233C JUMP JUMPDEST PUSH2 0x359A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2260 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 DUP7 PUSH2 0x2915 JUMP JUMPDEST SWAP1 POP PUSH2 0x35BB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x35C8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2260 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E496E76616C69644174546869735374616765000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3608 PUSH1 0x1A DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3613 DUP3 PUSH2 0x35D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3637 DUP2 PUSH2 0x35FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3649 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x3654 DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3664 JUMPI PUSH2 0x3663 PUSH2 0x2A75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A5 PUSH1 0x20 DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x36B0 DUP3 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D4 DUP2 PUSH2 0x3698 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C46696E6973686564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3711 PUSH1 0xB DUP4 PUSH2 0x28DA JUMP JUMPDEST SWAP2 POP PUSH2 0x371C DUP3 PUSH2 0x36DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3740 DUP2 PUSH2 0x3704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3752 DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP PUSH2 0x375D DUP4 PUSH2 0x2256 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x376B DUP2 PUSH2 0x2256 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3782 JUMPI PUSH2 0x3781 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3795 DUP3 DUP5 PUSH2 0x2AAF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT BALANCE EXTCODEHASH SMOD 0xD7 DUP12 SELFBALANCE 0xA9 PUSH7 0x3C8F84DD0DAD20 0x1E 0xB0 0x1F DUP5 0x24 PUSH5 0x54464CF9C SWAP11 0xE RETURNDATACOPY 0xBC 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"469:12147:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6114:1657;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1915:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2109:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8104:1368;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1609:35:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2213:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1544:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11322:736;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9881:1164:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2379:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2050:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5214:894;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1984:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3849:753:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1732:20;;;;:::o;6114:1657::-;6156:7;6175:14;6192:5;;6175:22;;6215:13;:21;6229:6;6215:21;;;;;;;;;;;:35;;;;;;;;;;;;6207:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6288:13;:21;6302:6;6288:21;;;;;;;;;;;:33;;;;;;;;;;;;6287:34;6279:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6357:12;:10;:12::i;:::-;6379:27;6390:15;6379:10;:27::i;:::-;6416:26;6445:13;:21;6459:6;6445:21;;;;;;;;;;;:39;;;6416:68;;6494:14;6511:1;6494:18;;6522:14;6539:13;:21;6553:6;6539:21;;;;;;;;;;;:27;;;6522:44;;6576:10;6589:13;:20;6603:5;;6589:20;;;;;;;;;;;:22;;;6576:35;;6621:10;6634:13;:20;6648:5;;6634:20;;;;;;;;;;;:22;;;6621:35;;6666:17;6686:4;6666:24;;6705:9;6700:780;6724:18;6720:1;:22;6700:780;;;7453:2;6772:697;;;;;:::i;:::-;;6820:615;6864:476;6912:2;7288;7074:54;7096:18;:26;7115:6;7096:26;;;;;;;;;;;:29;7123:1;7096:29;;;;;;;;;;;:31;;;7074:21;:54::i;:::-;7166:29;7188:6;7166:21;:29::i;:::-;7020:209;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6977:282;;;;;;6940:345;;:350;;;;:::i;:::-;7316:2;6864:22;:476::i;:::-;7362:18;:26;7381:6;7362:26;;;;;;;;;;;:29;7389:1;7362:29;;;;;;;;;;;:31;;;7415:2;6820:22;:615::i;:::-;6796:6;6772:697;6763:706;;6744:3;;;;;:::i;:::-;;;;6700:780;;;;7519:6;7489:13;:21;7503:6;7489:21;;;;;;;;;;;:27;;:36;;;;7571:12;7535:13;:21;7549:6;7535:21;;;;;;;;;;;:33;;;:48;;;;;;;;;;;;;;;;;;7649:15;7641:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7679:62;7695:6;7703;7711:15;7728:12;7679:62;;;;;;;;;:::i;:::-;;;;;;;;7758:6;7751:13;;;;;;;;;6114:1657;:::o;1915:20::-;;;;:::o;2109:95::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8104:1368::-;8225:6;;8232:1;8225:9;;;;;;;:::i;:::-;;;;;;;:11;;;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8248:13:::1;8264:1;8248:17;;8275:10;8288:13;:21;8302:6;8288:21;;;;;;;;;;;:23;;;8275:36;;8321:14;8338:13;:21;8352:6;8338:21;;;;;;;;;;;:27;;;8321:44;;8448:12;:10;:12::i;:::-;8470:24;8480:13;8470:9;:24::i;:::-;8513:13;:21;8527:6;8513:21;;;;;;;;;;;:33;;;;;;;;;;;;8512:34;8504:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8617:6;;8624:1;8617:9;;;;;;;:::i;:::-;;;;;;;:11;;;8590:13;:21;8604:6;8590:21;;;;;;;;;;;:23;;;:38;8582:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8654:48;8695:6;;8654:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:40;:48::i;:::-;;8717:9;8712:490;8736:13;:21;8750:6;8736:21;;;;;;;;;;;:39;;;8732:1;:43;8712:490;;;8796:10;8809:18;:26;8828:6;8809:26;;;;;;;;;;;:29;8836:1;8809:29;;;;;;;;;;;:31;;;8796:44;;8854:12;8869:277;8909:2;9110;9010:25;9032:2;9010:21;:25::i;:::-;9037:29;9059:6;9037:21;:29::i;:::-;8993:74;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8958:131;;;;;;8929:178;;:183;;;;:::i;:::-;9130:2;8869:22;:277::i;:::-;8854:292;;9188:2;9168:23;;;;;:::i;:::-;;9182:4;9175:5;9168:23;9160:31;;8782:420;;8777:3;;;;;:::i;:::-;;;;8712:490;;;;9228:6;;9235:1;9228:9;;;;;;;:::i;:::-;;;;;;;:11;;;9219:5;:20;9211:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;9304:4;9268:13;:21;9282:6;9268:21;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;9348:6;;9355:1;9348:9;;;;;;;:::i;:::-;;;;;;;:11;;;9318:13;:21;9332:6;9318:21;;;;;;;;;;;:27;;:41;;;;9377:15;9369:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;9407:58;9417:10;9429:5;9436:6;;9443:1;9436:9;;;;;;;:::i;:::-;;;;;;;:11;;;9449:15;9407:58;;;;;;;;;:::i;:::-;;;;;;;;8238:1234;;;8104:1368:::0;;;;:::o;1574:29::-;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1609:35:2:-;;;;:::o;2213:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1544:24::-;;;;:::o;11322:736::-;11361:18;11382:9;;11361:30;;11414:13;11405:22;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;:72;;;;;11463:14;;11450:10;:27;;;;:::i;:::-;11431:15;:46;;11405:72;11401:472;;;11506:1;11497:5;;:10;11493:370;;11527:11;:9;:11::i;:::-;11597:5;;11556:13;:20;11570:5;;11556:20;;;;;;;;;;;:38;;:46;;;;11620:14;11711:13;:20;11725:5;;11711:20;;;;;;;;;;;:22;;;11672:13;11655:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;11645:42;;;;;;11637:51;;:96;;;;:::i;:::-;11620:113;;11780:6;11751:13;:20;11765:5;;11751:20;;;;;;;;;;;:26;;:35;;;;11509:292;11493:370;;;11833:15;11825:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;11493:370;11401:472;11908:13;11899:22;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:22;;;;;;;;:::i;:::-;;;:106;;;;;11970:20;;11957:10;:33;;;;:::i;:::-;11938:15;:52;;:66;;;;12003:1;11994:5;;:10;11938:66;11899:106;11882:170;;;12030:11;:9;:11::i;:::-;11882:170;11351:707;11322:736::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;9881:1164:2:-;10082:2;10067:7;10075:1;10067:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;:17;10059:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;10158:21;10140:15;:39;10119:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;10274:15;10265:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;10257:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;10320:49;10361:7;10320:40;:49::i;:::-;;10388:1;10379:5;;:10;;;;;;;:::i;:::-;;;;;;;;10407:13;10399:5;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;10442:15;10430:9;:27;;;;10484:15;10467:14;:32;;;;10532:21;10509:20;:44;;;;10588:7;10596:1;10588:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10563:13;:20;10577:5;;10563:20;;;;;;;;;;;:22;;:37;;;;10635:7;10643:1;10635:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10610:13;:20;10624:5;;10610:20;;;;;;;;;;;:22;;:37;;;;10682:7;10690:1;10682:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10657:13;:20;10671:5;;10657:20;;;;;;;;;;;:22;;:37;;;;10729:2;10704:13;:20;10718:5;;10704:20;;;;;;;;;;;:22;;:27;;;;10749:1;10741:5;:9;;;;10760:18;;;;;;;;;;;;:13;:18;;;;;;:::i;:::-;;10793:245;10812:10;10836:15;10865;10894:21;10929:2;10945:7;10953:1;10945:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10971:7;10979:1;10971:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;10997:7;11005:1;10997:10;;;;;;;;:::i;:::-;;;;;;;;:12;;;11023:5;;10793:245;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9881:1164;;;;:::o;2379:92::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2050:19::-;;;;;;;;;;;;;:::o;5214:894::-;5267:2;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5281:14:::1;5298:5;;5281:22;;5313:24;5340:16;:28;5357:10;5340:28;;;;;;;;;;;;;;;:36;5369:6;5340:36;;;;;;;;;;;5313:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;5394:5;:15;;;5386:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;5456:5;:14;;;5455:15;5447:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5617:18;:26;5636:6;5617:26;;;;;;;;;;;:39;5644:5;:11;;;5617:39;;;;;;;;;;;:41;;;5521:76;5544:13;:21;5558:6;5544:21;;;;;;;;;;;:23;;;5569:2;5573:13;:21;5587:6;5573:21;;;;;;;;;;;:23;;;5521:22;:76::i;:::-;:137;5500:199;;;;;;;;;;;;:::i;:::-;;;;;;;;;5709:12;:10;:12::i;:::-;5731:25;5742:13;5731:10;:25::i;:::-;5766:14;5785:5;;5783:7;;;;;:::i;:::-;;;;;;;5766:24;;5844:2;5800:18;:26;5819:6;5800:26;;;;;;;;;;;:39;5827:5;:11;;;5800:39;;;;;;;;;;;:41;;:46;;;;5870:1;5860:6;:11:::0;5856:121:::1;;5895:15;5887:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5962:4;5924:13;:21;5938:6;5924:21;;;;;;;;;;;:35;;;:42;;;;;;;;;;;;;;;;;;5856:121;6034:4;5986:16;:28;6003:10;5986:28;;;;;;;;;;;;;;;:36;6015:6;5986:36;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6053:48;6061:10;6073:2;6077:6;6085:15;6053:48;;;;;;;;;:::i;:::-;;;;;;;;5271:837;;;5214:894:::0;;:::o;1984:27::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3849:753:2:-;3907:7;3366:13;:20;3380:5;;3366:20;;;;;;;;;;;:22;;;3357:6;:31;3349:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1094:13:0::1;:11;:13::i;:::-;3945:16:2::2;:28;3962:10;3945:28;;;;;;;;;;;;;;;:35;3974:5;;3945:35;;;;;;;;;;;:45;;;;;;;;;;;;3944:46;3936:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4021:12;:10;:12::i;:::-;4043:25;4054:13;4043:10;:25::i;:::-;4078:14;4095:5;;4078:22;;4110:28;4141:13;4110:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4195:14;4211:30;4233:7;4211:21;:30::i;:::-;4181:61;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4164:78;;4290:32;;;;;;;;4302:6;4290:32;;;;4310:4;4290:32;;;;;;4316:5;4290:32;;;;::::0;4252:16:::2;:28;4269:10;4252:28;;;;;;;;;;;;;;;:35;4281:5;;4252:35;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4368:41;;;;;;;;4386:7;4368:41;;;;4395:1;4368:41;;;;4398:10;4368:41;;;;::::0;4332:18:::2;:25;4351:5;;4332:25;;;;;;;;;;;:33;4358:6;4332:33;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:14;4455:13;:30;;;;;;:::i;:::-;;4503:8;;;;:::i;:::-;;;;4495:5;:16;;;;4526:69;4534:10;4546:7;4555:14;4571:6;4579:15;4526:69;;;;;;;;;;:::i;:::-;;;;;;;;3926:676;;3849:753:::0;;:::o;12064:120::-;12140:6;12131:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;12123:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;12064:120;:::o;3201:691:4:-;3257:13;3306:14;3338:1;3323:12;3329:5;3323;:12::i;:::-;:16;3306:33;;3353:20;3387:6;3376:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:41;;3408:11;3534:6;3530:2;3526:15;3518:6;3514:28;3507:35;;3569:280;3576:4;3569:280;;;3600:5;;;;;;;;3739:8;3734:2;3727:5;3723:14;3718:30;3713:3;3705:44;3793:2;3784:11;;;;;;:::i;:::-;;;;;3826:1;3817:5;:10;3569:280;3813:21;3569:280;3869:6;3862:13;;;;;3201:691;;;:::o;2705:323::-;2780:7;2799:14;2816:1;2799:18;;2827:172;2838:1;2834;:5;2827:172;;;2868:1;2863;2859;:5;:10;2855:78;;2916:1;2898:20;;;;;:::i;:::-;;2913:1;2905:6;2898:20;2889:29;;2855:78;2963:1;2950:15;;;;;:::i;:::-;;2960:1;2957;2950:15;2946:19;;2987:1;2983;:5;;;;:::i;:::-;2979:9;;2827:172;;;3015:6;3008:13;;;2705:323;;;;;:::o;12190:118:2:-;12264:6;12256:14;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:14;;;;;;;;:::i;:::-;;;12248:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;12190:118;:::o;1776:703:4:-;1865:4;1881:17;1901:9;:16;1881:36;;1933:9;1928:524;1952:9;1948:1;:13;1928:524;;;1982:33;2018:39;2044:9;2054:1;2044:12;;;;;;;;:::i;:::-;;;;;;;;2018:25;:39::i;:::-;1982:75;;2076:6;:15;;;2071:371;;2118:5;2111:12;;;;;;;2071:371;2167:6;:17;;;2162:265;;2193:4;2186:11;;;;;;;2162:265;2242:9;2256:1;2252;:5;;;;:::i;:::-;2242:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2224:6;:14;;;:36;2220:207;;2269:5;2262:12;;;;;;;2220:207;2319:9;2333:1;2329;:5;;;;:::i;:::-;2319:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2301:6;:14;;;:36;2297:130;;2346:5;2339:12;;;;;;;2297:130;2395:9;2409:1;2405;:5;;;;:::i;:::-;2395:16;;;;;;;;:::i;:::-;;;;;;;;:18;;;2378:6;:13;;;:35;2374:53;;2422:5;2415:12;;;;;;;2374:53;1968:484;1963:3;;;;;:::i;:::-;;;;1928:524;;;;2468:4;2461:11;;;1776:703;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;12465:149:2:-;12522:15;12513:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;12505:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;12604:1;12578:28;;;;;:::i;:::-;;12601:1;12593:5;;;;;;;;;;;12585:14;;;;;;;;:::i;:::-;;12578:28;12571:36;;;;;;;;:::i;:::-;;12563:5;;:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12465:149::o;4077:916:4:-;4130:7;4149:14;4166:1;4149:18;;4214:8;4205:5;:17;4201:103;;4251:8;4242:17;;;;;;:::i;:::-;;;;;4287:2;4277:12;;;;4201:103;4330:8;4321:5;:17;4317:103;;4367:8;4358:17;;;;;;:::i;:::-;;;;;4403:2;4393:12;;;;4317:103;4446:8;4437:5;:17;4433:103;;4483:8;4474:17;;;;;;:::i;:::-;;;;;4519:2;4509:12;;;;4433:103;4562:7;4553:5;:16;4549:100;;4598:7;4589:16;;;;;;:::i;:::-;;;;;4633:1;4623:11;;;;4549:100;4675:7;4666:5;:16;4662:100;;4711:7;4702:16;;;;;;:::i;:::-;;;;;4746:1;4736:11;;;;4662:100;4788:7;4779:5;:16;4775:100;;4824:7;4815:16;;;;;;:::i;:::-;;;;;4859:1;4849:11;;;;4775:100;4901:7;4892:5;:16;4888:66;;4938:1;4928:11;;;;4888:66;4980:6;4973:13;;;4077:916;;;:::o;595:1175::-;693:26;;:::i;:::-;749:1;735:8;:10;;;:15;731:1033;;784:36;794:8;:10;;;806:1;809:8;:10;;;784:9;:36::i;:::-;770:8;:10;;;:50;766:225;;847:41;;;;;;;;867:4;847:41;;;;;;873:5;847:41;;;;;;880:1;847:41;;;;883:1;847:41;;;;886:1;847:41;;;840:48;;;;766:225;934:42;;;;;;;;954:5;934:42;;;;;;961:5;934:42;;;;;;968:1;934:42;;;;971:1;934:42;;;;974:1;934:42;;;927:49;;;;731:1033;1021:13;1048:9;1060:8;:10;;;1048:22;;1084:9;1096:124;1121:8;:10;;;1163:20;1172:8;:10;;;1163:8;:20::i;:::-;1185;1194:8;:10;;;1185:8;:20::i;:::-;1149:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1096:7;:124::i;:::-;1084:136;;1257:1;1252;1239:8;:10;;;:14;:19;1235:189;;1299:1;1286:8;:10;;;:14;;;;:::i;:::-;1278:22;;1235:189;;;1366:1;1361;1348:8;:10;;;:14;;;;:::i;:::-;1347:20;;;;:::i;:::-;1339:28;;1399:8;:10;;;1394:1;1390;:5;;;;:::i;:::-;1389:20;;;;:::i;:::-;1385:24;;1235:189;1460:293;;;;;;;;1501:4;1460:293;;;;;;1527:4;1460:293;;;;;;1553:71;1563:36;1573:8;:10;;;1585:1;1588:8;:10;;;1563:9;:36::i;:::-;1601:8;:10;;;1613:8;:10;;;1553:9;:71::i;:::-;1460:293;;;;1646:62;1656:36;1666:8;:10;;;1678:1;1681:8;:10;;;1656:9;:36::i;:::-;1694:1;1697:8;:10;;;1646:9;:62::i;:::-;1460:293;;;;1730:5;1460:293;;;1437:316;;;;;595:1175;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;433:156:4:-;507:7;581:1;568:7;551:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;541:36;;;;;;533:45;;:49;;;;:::i;:::-;526:56;;433:156;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:474::-;1110:6;1118;1167:2;1155:9;1146:7;1142:23;1138:32;1135:119;;;1173:79;;:::i;:::-;1135:119;1293:1;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1264:117;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1042:474;;;;;:::o;1522:126::-;1559:7;1599:42;1592:5;1588:54;1577:65;;1522:126;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:442::-;2029:4;2067:2;2056:9;2052:18;2044:26;;2080:71;2148:1;2137:9;2133:17;2124:6;2080:71;:::i;:::-;2161:72;2229:2;2218:9;2214:18;2205:6;2161:72;:::i;:::-;2243;2311:2;2300:9;2296:18;2287:6;2243:72;:::i;:::-;1880:442;;;;;;:::o;2328:117::-;2437:1;2434;2427:12;2451:117;2560:1;2557;2550:12;2574:117;2683:1;2680;2673:12;2735:596;2836:8;2846:6;2896:3;2889:4;2881:6;2877:17;2873:27;2863:122;;2904:79;;:::i;:::-;2863:122;3017:6;3004:20;2994:30;;3047:18;3039:6;3036:30;3033:117;;;3069:79;;:::i;:::-;3033:117;3183:4;3175:6;3171:17;3159:29;;3237:3;3229:4;3221:6;3217:17;3207:8;3203:32;3200:41;3197:128;;;3244:79;;:::i;:::-;3197:128;2735:596;;;;;:::o;3337:760::-;3460:6;3468;3476;3525:2;3513:9;3504:7;3500:23;3496:32;3493:119;;;3531:79;;:::i;:::-;3493:119;3651:1;3676:53;3721:7;3712:6;3701:9;3697:22;3676:53;:::i;:::-;3666:63;;3622:117;3806:2;3795:9;3791:18;3778:32;3837:18;3829:6;3826:30;3823:117;;;3859:79;;:::i;:::-;3823:117;3972:108;4072:7;4063:6;4052:9;4048:22;3972:108;:::i;:::-;3954:126;;;;3749:341;3337:760;;;;;:::o;4103:329::-;4162:6;4211:2;4199:9;4190:7;4186:23;4182:32;4179:119;;;4217:79;;:::i;:::-;4179:119;4337:1;4362:53;4407:7;4398:6;4387:9;4383:22;4362:53;:::i;:::-;4352:63;;4308:117;4103:329;;;;:::o;4438:90::-;4472:7;4515:5;4508:13;4501:21;4490:32;;4438:90;;;:::o;4534:109::-;4615:21;4630:5;4615:21;:::i;:::-;4610:3;4603:34;4534:109;;:::o;4649:1084::-;4954:4;4992:3;4981:9;4977:19;4969:27;;5006:71;5074:1;5063:9;5059:17;5050:6;5006:71;:::i;:::-;5087:72;5155:2;5144:9;5140:18;5131:6;5087:72;:::i;:::-;5169;5237:2;5226:9;5222:18;5213:6;5169:72;:::i;:::-;5251;5319:2;5308:9;5304:18;5295:6;5251:72;:::i;:::-;5333:73;5401:3;5390:9;5386:19;5377:6;5333:73;:::i;:::-;5416;5484:3;5473:9;5469:19;5460:6;5416:73;:::i;:::-;5499;5567:3;5556:9;5552:19;5543:6;5499:73;:::i;:::-;5582:67;5644:3;5633:9;5629:19;5620:6;5582:67;:::i;:::-;5659;5721:3;5710:9;5706:19;5697:6;5659:67;:::i;:::-;4649:1084;;;;;;;;;;;;:::o;5739:222::-;5832:4;5870:2;5859:9;5855:18;5847:26;;5883:71;5951:1;5940:9;5936:17;5927:6;5883:71;:::i;:::-;5739:222;;;;:::o;5967:102::-;6008:6;6059:2;6055:7;6050:2;6043:5;6039:14;6035:28;6025:38;;5967:102;;;:::o;6075:180::-;6123:77;6120:1;6113:88;6220:4;6217:1;6210:15;6244:4;6241:1;6234:15;6261:281;6344:27;6366:4;6344:27;:::i;:::-;6336:6;6332:40;6474:6;6462:10;6459:22;6438:18;6426:10;6423:34;6420:62;6417:88;;;6485:18;;:::i;:::-;6417:88;6525:10;6521:2;6514:22;6304:238;6261:281;;:::o;6548:129::-;6582:6;6609:20;;:::i;:::-;6599:30;;6638:33;6666:4;6658:6;6638:33;:::i;:::-;6548:129;;;:::o;6683:337::-;6786:4;6876:18;6868:6;6865:30;6862:56;;;6898:18;;:::i;:::-;6862:56;6948:4;6940:6;6936:17;6928:25;;7008:4;7002;6998:15;6990:23;;6683:337;;;:::o;7026:117::-;7135:1;7132;7125:12;7308:1044;7383:5;7427:4;7415:9;7410:3;7406:19;7402:30;7399:117;;;7435:79;;:::i;:::-;7399:117;7534:21;7550:4;7534:21;:::i;:::-;7525:30;;7611:1;7651:49;7696:3;7687:6;7676:9;7672:22;7651:49;:::i;:::-;7644:4;7637:5;7633:16;7626:75;7565:147;7768:2;7809:49;7854:3;7845:6;7834:9;7830:22;7809:49;:::i;:::-;7802:4;7795:5;7791:16;7784:75;7722:148;7926:2;7967:49;8012:3;8003:6;7992:9;7988:22;7967:49;:::i;:::-;7960:4;7953:5;7949:16;7942:75;7880:148;8084:2;8125:49;8170:3;8161:6;8150:9;8146:22;8125:49;:::i;:::-;8118:4;8111:5;8107:16;8100:75;8038:148;8242:3;8284:49;8329:3;8320:6;8309:9;8305:22;8284:49;:::i;:::-;8277:4;8270:5;8266:16;8259:75;8196:149;7308:1044;;;;:::o;8396:788::-;8518:5;8543:107;8559:90;8642:6;8559:90;:::i;:::-;8543:107;:::i;:::-;8534:116;;8670:5;8699:6;8692:5;8685:21;8733:4;8726:5;8722:16;8715:23;;8786:4;8778:6;8774:17;8766:6;8762:30;8815:3;8807:6;8804:15;8801:122;;;8834:79;;:::i;:::-;8801:122;8949:6;8932:246;8966:6;8961:3;8958:15;8932:246;;;9041:3;9070:63;9129:3;9117:10;9070:63;:::i;:::-;9065:3;9058:76;9163:4;9158:3;9154:14;9147:21;;9008:170;8992:4;8987:3;8983:14;8976:21;;8932:246;;;8936:21;8524:660;;8396:788;;;;;:::o;9228:422::-;9325:5;9374:3;9367:4;9359:6;9355:17;9351:27;9341:122;;9382:79;;:::i;:::-;9341:122;9499:6;9486:20;9524:120;9640:3;9632:6;9625:4;9617:6;9613:17;9524:120;:::i;:::-;9515:129;;9331:319;9228:422;;;;:::o;9656:1027::-;9793:6;9801;9809;9817;9866:3;9854:9;9845:7;9841:23;9837:33;9834:120;;;9873:79;;:::i;:::-;9834:120;9993:1;10018:53;10063:7;10054:6;10043:9;10039:22;10018:53;:::i;:::-;10008:63;;9964:117;10120:2;10146:53;10191:7;10182:6;10171:9;10167:22;10146:53;:::i;:::-;10136:63;;10091:118;10248:2;10274:53;10319:7;10310:6;10299:9;10295:22;10274:53;:::i;:::-;10264:63;;10219:118;10404:2;10393:9;10389:18;10376:32;10435:18;10427:6;10424:30;10421:117;;;10457:79;;:::i;:::-;10421:117;10562:104;10658:7;10649:6;10638:9;10634:22;10562:104;:::i;:::-;10552:114;;10347:329;9656:1027;;;;;;;:::o;10689:122::-;10762:24;10780:5;10762:24;:::i;:::-;10755:5;10752:35;10742:63;;10801:1;10798;10791:12;10742:63;10689:122;:::o;10817:139::-;10863:5;10901:6;10888:20;10879:29;;10917:33;10944:5;10917:33;:::i;:::-;10817:139;;;;:::o;10962:474::-;11030:6;11038;11087:2;11075:9;11066:7;11062:23;11058:32;11055:119;;;11093:79;;:::i;:::-;11055:119;11213:1;11238:53;11283:7;11274:6;11263:9;11259:22;11238:53;:::i;:::-;11228:63;;11184:117;11340:2;11366:53;11411:7;11402:6;11391:9;11387:22;11366:53;:::i;:::-;11356:63;;11311:118;10962:474;;;;;:::o;11442:418::-;11579:4;11617:2;11606:9;11602:18;11594:26;;11630:71;11698:1;11687:9;11683:17;11674:6;11630:71;:::i;:::-;11711:66;11773:2;11762:9;11758:18;11749:6;11711:66;:::i;:::-;11787;11849:2;11838:9;11834:18;11825:6;11787:66;:::i;:::-;11442:418;;;;;;:::o;11866:180::-;11914:77;11911:1;11904:88;12011:4;12008:1;12001:15;12035:4;12032:1;12025:15;12052:115;12135:1;12128:5;12125:12;12115:46;;12141:18;;:::i;:::-;12115:46;12052:115;:::o;12173:131::-;12220:7;12249:5;12238:16;;12255:43;12292:5;12255:43;:::i;:::-;12173:131;;;:::o;12310:::-;12368:9;12401:34;12429:5;12401:34;:::i;:::-;12388:47;;12310:131;;;:::o;12447:147::-;12542:45;12581:5;12542:45;:::i;:::-;12537:3;12530:58;12447:147;;:::o;12600:238::-;12701:4;12739:2;12728:9;12724:18;12716:26;;12752:79;12828:1;12817:9;12813:17;12804:6;12752:79;:::i;:::-;12600:238;;;;:::o;12844:99::-;12896:6;12930:5;12924:12;12914:22;;12844:99;;;:::o;12949:169::-;13033:11;13067:6;13062:3;13055:19;13107:4;13102:3;13098:14;13083:29;;12949:169;;;;:::o;13124:246::-;13205:1;13215:113;13229:6;13226:1;13223:13;13215:113;;;13314:1;13309:3;13305:11;13299:18;13295:1;13290:3;13286:11;13279:39;13251:2;13248:1;13244:10;13239:15;;13215:113;;;13362:1;13353:6;13348:3;13344:16;13337:27;13186:184;13124:246;;;:::o;13376:377::-;13464:3;13492:39;13525:5;13492:39;:::i;:::-;13547:71;13611:6;13606:3;13547:71;:::i;:::-;13540:78;;13627:65;13685:6;13680:3;13673:4;13666:5;13662:16;13627:65;:::i;:::-;13717:29;13739:6;13717:29;:::i;:::-;13712:3;13708:39;13701:46;;13468:285;13376:377;;;;:::o;13759:313::-;13872:4;13910:2;13899:9;13895:18;13887:26;;13959:9;13953:4;13949:20;13945:1;13934:9;13930:17;13923:47;13987:78;14060:4;14051:6;13987:78;:::i;:::-;13979:86;;13759:313;;;;:::o;14078:329::-;14137:6;14186:2;14174:9;14165:7;14161:23;14157:32;14154:119;;;14192:79;;:::i;:::-;14154:119;14312:1;14337:53;14382:7;14373:6;14362:9;14358:22;14337:53;:::i;:::-;14327:63;;14283:117;14078:329;;;;:::o;14413:164::-;14553:16;14549:1;14541:6;14537:14;14530:40;14413:164;:::o;14583:366::-;14725:3;14746:67;14810:2;14805:3;14746:67;:::i;:::-;14739:74;;14822:93;14911:3;14822:93;:::i;:::-;14940:2;14935:3;14931:12;14924:19;;14583:366;;;:::o;14955:419::-;15121:4;15159:2;15148:9;15144:18;15136:26;;15208:9;15202:4;15198:20;15194:1;15183:9;15179:17;15172:47;15236:131;15362:4;15236:131;:::i;:::-;15228:139;;14955:419;;;:::o;15380:171::-;15520:23;15516:1;15508:6;15504:14;15497:47;15380:171;:::o;15557:366::-;15699:3;15720:67;15784:2;15779:3;15720:67;:::i;:::-;15713:74;;15796:93;15885:3;15796:93;:::i;:::-;15914:2;15909:3;15905:12;15898:19;;15557:366;;;:::o;15929:419::-;16095:4;16133:2;16122:9;16118:18;16110:26;;16182:9;16176:4;16172:20;16168:1;16157:9;16153:17;16146:47;16210:131;16336:4;16210:131;:::i;:::-;16202:139;;15929:419;;;:::o;16354:180::-;16402:77;16399:1;16392:88;16499:4;16496:1;16489:15;16523:4;16520:1;16513:15;16540:148;16642:11;16679:3;16664:18;;16540:148;;;;:::o;16694:390::-;16800:3;16828:39;16861:5;16828:39;:::i;:::-;16883:89;16965:6;16960:3;16883:89;:::i;:::-;16876:96;;16981:65;17039:6;17034:3;17027:4;17020:5;17016:16;16981:65;:::i;:::-;17071:6;17066:3;17062:16;17055:23;;16804:280;16694:390;;;;:::o;17090:435::-;17270:3;17292:95;17383:3;17374:6;17292:95;:::i;:::-;17285:102;;17404:95;17495:3;17486:6;17404:95;:::i;:::-;17397:102;;17516:3;17509:10;;17090:435;;;;;:::o;17531:176::-;17563:1;17580:20;17598:1;17580:20;:::i;:::-;17575:25;;17614:20;17632:1;17614:20;:::i;:::-;17609:25;;17653:1;17643:35;;17658:18;;:::i;:::-;17643:35;17699:1;17696;17692:9;17687:14;;17531:176;;;;:::o;17713:180::-;17761:77;17758:1;17751:88;17858:4;17855:1;17848:15;17882:4;17879:1;17872:15;17899:233;17938:3;17961:24;17979:5;17961:24;:::i;:::-;17952:33;;18007:66;18000:5;17997:77;17994:103;;18077:18;;:::i;:::-;17994:103;18124:1;18117:5;18113:13;18106:20;;17899:233;;;:::o;18138:541::-;18309:4;18347:3;18336:9;18332:19;18324:27;;18361:71;18429:1;18418:9;18414:17;18405:6;18361:71;:::i;:::-;18442:72;18510:2;18499:9;18495:18;18486:6;18442:72;:::i;:::-;18524;18592:2;18581:9;18577:18;18568:6;18524:72;:::i;:::-;18606:66;18668:2;18657:9;18653:18;18644:6;18606:66;:::i;:::-;18138:541;;;;;;;:::o;18685:180::-;18733:77;18730:1;18723:88;18830:4;18827:1;18820:15;18854:4;18851:1;18844:15;18871:169;19011:21;19007:1;18999:6;18995:14;18988:45;18871:169;:::o;19046:366::-;19188:3;19209:67;19273:2;19268:3;19209:67;:::i;:::-;19202:74;;19285:93;19374:3;19285:93;:::i;:::-;19403:2;19398:3;19394:12;19387:19;;19046:366;;;:::o;19418:419::-;19584:4;19622:2;19611:9;19607:18;19599:26;;19671:9;19665:4;19661:20;19657:1;19646:9;19642:17;19635:47;19699:131;19825:4;19699:131;:::i;:::-;19691:139;;19418:419;;;:::o;19843:161::-;19983:13;19979:1;19971:6;19967:14;19960:37;19843:161;:::o;20010:366::-;20152:3;20173:67;20237:2;20232:3;20173:67;:::i;:::-;20166:74;;20249:93;20338:3;20249:93;:::i;:::-;20367:2;20362:3;20358:12;20351:19;;20010:366;;;:::o;20382:419::-;20548:4;20586:2;20575:9;20571:18;20563:26;;20635:9;20629:4;20625:20;20621:1;20610:9;20606:17;20599:47;20663:131;20789:4;20663:131;:::i;:::-;20655:139;;20382:419;;;:::o;20807:382::-;20892:6;20941:3;20929:9;20920:7;20916:23;20912:33;20909:120;;;20948:79;;:::i;:::-;20909:120;21068:1;21093:79;21164:7;21155:6;21144:9;21140:22;21093:79;:::i;:::-;21083:89;;21039:143;20807:382;;;;:::o;21195:164::-;21335:16;21331:1;21323:6;21319:14;21312:40;21195:164;:::o;21365:366::-;21507:3;21528:67;21592:2;21587:3;21528:67;:::i;:::-;21521:74;;21604:93;21693:3;21604:93;:::i;:::-;21722:2;21717:3;21713:12;21706:19;;21365:366;;;:::o;21737:419::-;21903:4;21941:2;21930:9;21926:18;21918:26;;21990:9;21984:4;21980:20;21976:1;21965:9;21961:17;21954:47;22018:131;22144:4;22018:131;:::i;:::-;22010:139;;21737:419;;;:::o;22162:553::-;22339:4;22377:3;22366:9;22362:19;22354:27;;22391:71;22459:1;22448:9;22444:17;22435:6;22391:71;:::i;:::-;22472:72;22540:2;22529:9;22525:18;22516:6;22472:72;:::i;:::-;22554;22622:2;22611:9;22607:18;22598:6;22554:72;:::i;:::-;22636;22704:2;22693:9;22689:18;22680:6;22636:72;:::i;:::-;22162:553;;;;;;;:::o;22721:191::-;22761:3;22780:20;22798:1;22780:20;:::i;:::-;22775:25;;22814:20;22832:1;22814:20;:::i;:::-;22809:25;;22857:1;22854;22850:9;22843:16;;22878:3;22875:1;22872:10;22869:36;;;22885:18;;:::i;:::-;22869:36;22721:191;;;;:::o;22918:180::-;22966:77;22963:1;22956:88;23063:4;23060:1;23053:15;23087:4;23084:1;23077:15;23104:320;23148:6;23185:1;23179:4;23175:12;23165:22;;23232:1;23226:4;23222:12;23253:18;23243:81;;23309:4;23301:6;23297:17;23287:27;;23243:81;23371:2;23363:6;23360:14;23340:18;23337:38;23334:84;;23390:18;;:::i;:::-;23334:84;23155:269;23104:320;;;:::o;23430:141::-;23479:4;23502:3;23494:11;;23525:3;23522:1;23515:14;23559:4;23556:1;23546:18;23538:26;;23430:141;;;:::o;23601:874::-;23704:3;23741:5;23735:12;23770:36;23796:9;23770:36;:::i;:::-;23822:89;23904:6;23899:3;23822:89;:::i;:::-;23815:96;;23942:1;23931:9;23927:17;23958:1;23953:166;;;;24133:1;24128:341;;;;23920:549;;23953:166;24037:4;24033:9;24022;24018:25;24013:3;24006:38;24099:6;24092:14;24085:22;24077:6;24073:35;24068:3;24064:45;24057:52;;23953:166;;24128:341;24195:38;24227:5;24195:38;:::i;:::-;24255:1;24269:154;24283:6;24280:1;24277:13;24269:154;;;24357:7;24351:14;24347:1;24342:3;24338:11;24331:35;24407:1;24398:7;24394:15;24383:26;;24305:4;24302:1;24298:12;24293:17;;24269:154;;;24452:6;24447:3;24443:16;24436:23;;24135:334;;23920:549;;23708:767;;23601:874;;;;:::o;24481:269::-;24610:3;24632:92;24720:3;24711:6;24632:92;:::i;:::-;24625:99;;24741:3;24734:10;;24481:269;;;;:::o;24756:229::-;24896:34;24892:1;24884:6;24880:14;24873:58;24965:12;24960:2;24952:6;24948:15;24941:37;24756:229;:::o;24991:366::-;25133:3;25154:67;25218:2;25213:3;25154:67;:::i;:::-;25147:74;;25230:93;25319:3;25230:93;:::i;:::-;25348:2;25343:3;25339:12;25332:19;;24991:366;;;:::o;25363:419::-;25529:4;25567:2;25556:9;25552:18;25544:26;;25616:9;25610:4;25606:20;25602:1;25591:9;25587:17;25580:47;25644:131;25770:4;25644:131;:::i;:::-;25636:139;;25363:419;;;:::o;25788:166::-;25928:18;25924:1;25916:6;25912:14;25905:42;25788:166;:::o;25960:366::-;26102:3;26123:67;26187:2;26182:3;26123:67;:::i;:::-;26116:74;;26199:93;26288:3;26199:93;:::i;:::-;26317:2;26312:3;26308:12;26301:19;;25960:366;;;:::o;26332:419::-;26498:4;26536:2;26525:9;26521:18;26513:26;;26585:9;26579:4;26575:20;26571:1;26560:9;26556:17;26549:47;26613:131;26739:4;26613:131;:::i;:::-;26605:139;;26332:419;;;:::o;26757:93::-;26794:6;26841:2;26836;26829:5;26825:14;26821:23;26811:33;;26757:93;;;:::o;26856:107::-;26900:8;26950:5;26944:4;26940:16;26919:37;;26856:107;;;;:::o;26969:393::-;27038:6;27088:1;27076:10;27072:18;27111:97;27141:66;27130:9;27111:97;:::i;:::-;27229:39;27259:8;27248:9;27229:39;:::i;:::-;27217:51;;27301:4;27297:9;27290:5;27286:21;27277:30;;27350:4;27340:8;27336:19;27329:5;27326:30;27316:40;;27045:317;;26969:393;;;;;:::o;27368:60::-;27396:3;27417:5;27410:12;;27368:60;;;:::o;27434:142::-;27484:9;27517:53;27535:34;27544:24;27562:5;27544:24;:::i;:::-;27535:34;:::i;:::-;27517:53;:::i;:::-;27504:66;;27434:142;;;:::o;27582:75::-;27625:3;27646:5;27639:12;;27582:75;;;:::o;27663:269::-;27773:39;27804:7;27773:39;:::i;:::-;27834:91;27883:41;27907:16;27883:41;:::i;:::-;27875:6;27868:4;27862:11;27834:91;:::i;:::-;27828:4;27821:105;27739:193;27663:269;;;:::o;27938:73::-;27983:3;27938:73;:::o;28017:189::-;28094:32;;:::i;:::-;28135:65;28193:6;28185;28179:4;28135:65;:::i;:::-;28070:136;28017:189;;:::o;28212:186::-;28272:120;28289:3;28282:5;28279:14;28272:120;;;28343:39;28380:1;28373:5;28343:39;:::i;:::-;28316:1;28309:5;28305:13;28296:22;;28272:120;;;28212:186;;:::o;28404:543::-;28505:2;28500:3;28497:11;28494:446;;;28539:38;28571:5;28539:38;:::i;:::-;28623:29;28641:10;28623:29;:::i;:::-;28613:8;28609:44;28806:2;28794:10;28791:18;28788:49;;;28827:8;28812:23;;28788:49;28850:80;28906:22;28924:3;28906:22;:::i;:::-;28896:8;28892:37;28879:11;28850:80;:::i;:::-;28509:431;;28494:446;28404:543;;;:::o;28953:117::-;29007:8;29057:5;29051:4;29047:16;29026:37;;28953:117;;;;:::o;29076:169::-;29120:6;29153:51;29201:1;29197:6;29189:5;29186:1;29182:13;29153:51;:::i;:::-;29149:56;29234:4;29228;29224:15;29214:25;;29127:118;29076:169;;;;:::o;29250:295::-;29326:4;29472:29;29497:3;29491:4;29472:29;:::i;:::-;29464:37;;29534:3;29531:1;29527:11;29521:4;29518:21;29510:29;;29250:295;;;;:::o;29550:1395::-;29667:37;29700:3;29667:37;:::i;:::-;29769:18;29761:6;29758:30;29755:56;;;29791:18;;:::i;:::-;29755:56;29835:38;29867:4;29861:11;29835:38;:::i;:::-;29920:67;29980:6;29972;29966:4;29920:67;:::i;:::-;30014:1;30038:4;30025:17;;30070:2;30062:6;30059:14;30087:1;30082:618;;;;30744:1;30761:6;30758:77;;;30810:9;30805:3;30801:19;30795:26;30786:35;;30758:77;30861:67;30921:6;30914:5;30861:67;:::i;:::-;30855:4;30848:81;30717:222;30052:887;;30082:618;30134:4;30130:9;30122:6;30118:22;30168:37;30200:4;30168:37;:::i;:::-;30227:1;30241:208;30255:7;30252:1;30249:14;30241:208;;;30334:9;30329:3;30325:19;30319:26;30311:6;30304:42;30385:1;30377:6;30373:14;30363:24;;30432:2;30421:9;30417:18;30404:31;;30278:4;30275:1;30271:12;30266:17;;30241:208;;;30477:6;30468:7;30465:19;30462:179;;;30535:9;30530:3;30526:19;30520:26;30578:48;30620:4;30612:6;30608:17;30597:9;30578:48;:::i;:::-;30570:6;30563:64;30485:156;30462:179;30687:1;30683;30675:6;30671:14;30667:22;30661:4;30654:36;30089:611;;;30052:887;;29642:1303;;;29550:1395;;:::o;30951:1108::-;31268:4;31306:3;31295:9;31291:19;31283:27;;31320:71;31388:1;31377:9;31373:17;31364:6;31320:71;:::i;:::-;31401:72;31469:2;31458:9;31454:18;31445:6;31401:72;:::i;:::-;31483;31551:2;31540:9;31536:18;31527:6;31483:72;:::i;:::-;31565;31633:2;31622:9;31618:18;31609:6;31565:72;:::i;:::-;31647:73;31715:3;31704:9;31700:19;31691:6;31647:73;:::i;:::-;31730;31798:3;31787:9;31783:19;31774:6;31730:73;:::i;:::-;31813;31881:3;31870:9;31866:19;31857:6;31813:73;:::i;:::-;31896;31964:3;31953:9;31949:19;31940:6;31896:73;:::i;:::-;31979;32047:3;32036:9;32032:19;32023:6;31979:73;:::i;:::-;30951:1108;;;;;;;;;;;;:::o;32065:173::-;32205:25;32201:1;32193:6;32189:14;32182:49;32065:173;:::o;32244:366::-;32386:3;32407:67;32471:2;32466:3;32407:67;:::i;:::-;32400:74;;32483:93;32572:3;32483:93;:::i;:::-;32601:2;32596:3;32592:12;32585:19;;32244:366;;;:::o;32616:419::-;32782:4;32820:2;32809:9;32805:18;32797:26;;32869:9;32863:4;32859:20;32855:1;32844:9;32840:17;32833:47;32897:131;33023:4;32897:131;:::i;:::-;32889:139;;32616:419;;;:::o;33041:165::-;33181:17;33177:1;33169:6;33165:14;33158:41;33041:165;:::o;33212:366::-;33354:3;33375:67;33439:2;33434:3;33375:67;:::i;:::-;33368:74;;33451:93;33540:3;33451:93;:::i;:::-;33569:2;33564:3;33560:12;33553:19;;33212:366;;;:::o;33584:419::-;33750:4;33788:2;33777:9;33773:18;33765:26;;33837:9;33831:4;33827:20;33823:1;33812:9;33808:17;33801:47;33865:131;33991:4;33865:131;:::i;:::-;33857:139;;33584:419;;;:::o;34009:165::-;34149:17;34145:1;34137:6;34133:14;34126:41;34009:165;:::o;34180:366::-;34322:3;34343:67;34407:2;34402:3;34343:67;:::i;:::-;34336:74;;34419:93;34508:3;34419:93;:::i;:::-;34537:2;34532:3;34528:12;34521:19;;34180:366;;;:::o;34552:419::-;34718:4;34756:2;34745:9;34741:18;34733:26;;34805:9;34799:4;34795:20;34791:1;34780:9;34776:17;34769:47;34833:131;34959:4;34833:131;:::i;:::-;34825:139;;34552:419;;;:::o;34977:171::-;35016:3;35039:24;35057:5;35039:24;:::i;:::-;35030:33;;35085:4;35078:5;35075:15;35072:41;;35093:18;;:::i;:::-;35072:41;35140:1;35133:5;35129:13;35122:20;;34977:171;;;:::o;35154:225::-;35294:34;35290:1;35282:6;35278:14;35271:58;35363:8;35358:2;35350:6;35346:15;35339:33;35154:225;:::o;35385:366::-;35527:3;35548:67;35612:2;35607:3;35548:67;:::i;:::-;35541:74;;35624:93;35713:3;35624:93;:::i;:::-;35742:2;35737:3;35733:12;35726:19;;35385:366;;;:::o;35757:419::-;35923:4;35961:2;35950:9;35946:18;35938:26;;36010:9;36004:4;36000:20;35996:1;35985:9;35981:17;35974:47;36038:131;36164:4;36038:131;:::i;:::-;36030:139;;35757:419;;;:::o;36182:166::-;36322:18;36318:1;36310:6;36306:14;36299:42;36182:166;:::o;36354:366::-;36496:3;36517:67;36581:2;36576:3;36517:67;:::i;:::-;36510:74;;36593:93;36682:3;36593:93;:::i;:::-;36711:2;36706:3;36702:12;36695:19;;36354:366;;;:::o;36726:419::-;36892:4;36930:2;36919:9;36915:18;36907:26;;36979:9;36973:4;36969:20;36965:1;36954:9;36950:17;36943:47;37007:131;37133:4;37007:131;:::i;:::-;36999:139;;36726:419;;;:::o;37151:755::-;37376:4;37414:3;37403:9;37399:19;37391:27;;37428:71;37496:1;37485:9;37481:17;37472:6;37428:71;:::i;:::-;37509:72;37577:2;37566:9;37562:18;37553:6;37509:72;:::i;:::-;37628:9;37622:4;37618:20;37613:2;37602:9;37598:18;37591:48;37656:78;37729:4;37720:6;37656:78;:::i;:::-;37648:86;;37744:72;37812:2;37801:9;37797:18;37788:6;37744:72;:::i;:::-;37826:73;37894:3;37883:9;37879:19;37870:6;37826:73;:::i;:::-;37151:755;;;;;;;;:::o;37912:176::-;38052:28;38048:1;38040:6;38036:14;38029:52;37912:176;:::o;38094:366::-;38236:3;38257:67;38321:2;38316:3;38257:67;:::i;:::-;38250:74;;38333:93;38422:3;38333:93;:::i;:::-;38451:2;38446:3;38442:12;38435:19;;38094:366;;;:::o;38466:419::-;38632:4;38670:2;38659:9;38655:18;38647:26;;38719:9;38713:4;38709:20;38705:1;38694:9;38690:17;38683:47;38747:131;38873:4;38747:131;:::i;:::-;38739:139;;38466:419;;;:::o;38891:185::-;38931:1;38948:20;38966:1;38948:20;:::i;:::-;38943:25;;38982:20;39000:1;38982:20;:::i;:::-;38977:25;;39021:1;39011:35;;39026:18;;:::i;:::-;39011:35;39068:1;39065;39061:9;39056:14;;38891:185;;;;:::o;39082:182::-;39222:34;39218:1;39210:6;39206:14;39199:58;39082:182;:::o;39270:366::-;39412:3;39433:67;39497:2;39492:3;39433:67;:::i;:::-;39426:74;;39509:93;39598:3;39509:93;:::i;:::-;39627:2;39622:3;39618:12;39611:19;;39270:366;;;:::o;39642:419::-;39808:4;39846:2;39835:9;39831:18;39823:26;;39895:9;39889:4;39885:20;39881:1;39870:9;39866:17;39859:47;39923:131;40049:4;39923:131;:::i;:::-;39915:139;;39642:419;;;:::o;40067:161::-;40207:13;40203:1;40195:6;40191:14;40184:37;40067:161;:::o;40234:366::-;40376:3;40397:67;40461:2;40456:3;40397:67;:::i;:::-;40390:74;;40473:93;40562:3;40473:93;:::i;:::-;40591:2;40586:3;40582:12;40575:19;;40234:366;;;:::o;40606:419::-;40772:4;40810:2;40799:9;40795:18;40787:26;;40859:9;40853:4;40849:20;40845:1;40834:9;40830:17;40823:47;40887:131;41013:4;40887:131;:::i;:::-;40879:139;;40606:419;;;:::o;41031:410::-;41071:7;41094:20;41112:1;41094:20;:::i;:::-;41089:25;;41128:20;41146:1;41128:20;:::i;:::-;41123:25;;41183:1;41180;41176:9;41205:30;41223:11;41205:30;:::i;:::-;41194:41;;41384:1;41375:7;41371:15;41368:1;41365:22;41345:1;41338:9;41318:83;41295:139;;41414:18;;:::i;:::-;41295:139;41079:362;41031:410;;;;:::o;41447:275::-;41579:3;41601:95;41692:3;41683:6;41601:95;:::i;:::-;41594:102;;41713:3;41706:10;;41447:275;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2858800","executionCost":"infinite","totalCost":"infinite"},"external":{"calculateOmega()":"infinite","checkStage()":"infinite","commit(uint256)":"infinite","commitDuration()":"2474","commitRevealDuration()":"2518","commitRevealValues(uint256,uint256)":"infinite","commitsString()":"infinite","count()":"2453","owner()":"2589","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"infinite","renounceOwnership()":"30465","reveal(uint256)":"infinite","round()":"2497","stage()":"2582","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])":"infinite","startTime()":"2452","transferOwnership(address)":"30832","userInfosAtRound(address,uint256)":"infinite","valuesAtRound(uint256)":"infinite"},"internal":{"equalStage(enum CommitRecover.Stages)":"infinite","nextStage()":"infinite","overStage(enum CommitRecover.Stages)":"infinite"}},"methodIdentifiers":{"calculateOmega()":"12ce9906","checkStage()":"7f93c751","commit(uint256)":"f4f98ad5","commitDuration()":"6f833811","commitRevealDuration()":"73fa4f46","commitRevealValues(uint256,uint256)":"22fadc28","commitsString()":"dca669e4","count()":"06661abd","owner()":"8da5cb5b","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"50d30cbf","renounceOwnership()":"715018a6","reveal(uint256)":"c2ca0ac5","round()":"146ca531","stage()":"c040e6b8","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])":"a58be661","startTime()":"78e97925","transferOwnership(address)":"f2fde38b","userInfosAtRound(address,uint256)":"b0e9eb3f","valuesAtRound(uint256)":"77f0ade9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"omega\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"calculatedTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"name\":\"CalculatedOmega\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"commitsString\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitTimestamp\",\"type\":\"uint256\"}],\"name\":\"CommitC\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recov\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"omegaRecov\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoveredTimestamp\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealLeftCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealTimestamp\",\"type\":\"uint256\"}],\"name\":\"RevealA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitRevealDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"g\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"Start\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"calculateOmega\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commit\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitRevealDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"commitRevealValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"participantAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitsString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"round\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum CommitRecover.Stages\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitRevealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"_proofs\",\"type\":\"tuple[]\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"userInfosAtRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"committed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revealed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"valuesAtRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"omega\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bStar\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numOfParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"g\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"h\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAllRevealed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Justin g\",\"kind\":\"dev\",\"methods\":{\"commit(uint256)\":{\"params\":{\"_commit\":\"participant's commit value\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])\":{\"params\":{\"proofs\":\"the proof of the recovered value\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reveal(uint256)\":{\"params\":{\"_a\":\"participant's reveal value\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Bicorn-RX Commit-Reveal-Recover\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkStage()\":{\"notice\":\"checkStage functionrevert if the current stage is not the given stagethis function is used to check if the current stage is the given stageit will update the stage to the next stage if needed\"},\"commit(uint256)\":{\"notice\":\"Commit functionThe participant's commit value must be less than the modulorThe participant can only commit oncecheck period, update stage if needed, revert if not currently at commit stage\"},\"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])\":{\"notice\":\"Recover functionThe recovered value must be less than the modulorrevert if currently at commit stagerevert if count == 0 meaning no one has committedcalculate and finalize omega\"},\"reveal(uint256)\":{\"notice\":\"Reveal functionh must be set before revealparticipant must have committedparticipant must not have revealedThe participant's reveal value must match the commit valueThe participant's reveal value must be less than the modulorcheck period, update stage if needed, revert if not currently at reveal stageupdate omega, countif count == 0, update valuesAtRound, stageupdate userInfosAtRound\"},\"start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])\":{\"notice\":\"Start functionThe contract must be in the Finished stageThe commit period must be less than the commit + reveal periodThe g value must be less than the modulorreset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omegaincrease round\"}},\"notice\":\"This contract is for generating random number    1. Commit: participants commit their value    2. Reveal: participants reveal their value    3. Finished: Calculate or recover the random number    4. go to 1\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CommitRecover.sol\":\"CommitRecover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/CommitRecover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nimport \\\"./libraries/Pietrzak_VDF.sol\\\";\\n//import ownable\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Bicorn-RX Commit-Reveal-Recover\\n * @author Justin g\\n * @notice This contract is for generating random number\\n *    1. Commit: participants commit their value\\n *    2. Reveal: participants reveal their value\\n *    3. Finished: Calculate or recover the random number\\n *    4. go to 1\\n */\\ncontract CommitRecover is Ownable {\\n    /* Type declaration */\\n    /**\\n     * @notice Stages of the contract\\n     * @notice Recover can be performed in the Reveal and Finished stages.\\n     */\\n    enum Stages {\\n        Commit,\\n        Reveal,\\n        Finished\\n    }\\n    struct ValueAtRound {\\n        uint256 omega; // the random number\\n        uint256 bStar; //hash of commitsString\\n        uint256 numOfParticipants; // number of participants\\n        uint256 g; // a value generated from the generator list\\n        uint256 h; // a value generated from the VDF(g)\\n        uint256 n; // modulor\\n        uint256 T;\\n        bool isCompleted; // omega is finalized when this is true\\n        bool isAllRevealed; // true when all participants have revealed\\n    }\\n    struct CommitRevealValue {\\n        uint256 c;\\n        uint256 a;\\n        address participantAddress;\\n    }\\n    struct UserAtRound {\\n        uint256 index; // index of the commitRevealValues\\n        bool committed; // true if committed\\n        bool revealed; // true if revealed\\n    }\\n\\n    /* State variables */\\n    uint256 public startTime;\\n    uint256 public commitDuration;\\n    uint256 public commitRevealDuration; //commit + reveal period, commitRevealDuration - commitDuration => revealDuration\\n    uint256 public count; //This variable is used to keep track of the number of commitments and reveals, and to check if anything has been committed when moving to the reveal stage.\\n    uint256 public round; //first round is 1, second round is 2, ...\\n    string public commitsString; //concatenated string of commits\\n    Stages public stage;\\n    //bool public isHAndBStarSet;\\n    mapping(uint256 round => mapping(uint256 index => CommitRevealValue)) public commitRevealValues; //\\n    mapping(uint256 round => ValueAtRound omega) public valuesAtRound; // 1 => ValueAtRound(omega, isCompleted, ...), 2 => ValueAtRound(omega, isCompleted, ...), ...\\n    mapping(address owner => mapping(uint256 round => UserAtRound user)) public userInfosAtRound;\\n\\n    /* Events */\\n    event CommitC(\\n        address participant,\\n        uint256 commit,\\n        string commitsString,\\n        uint256 commitCount,\\n        uint256 commitTimestamp\\n    );\\n    event RevealA(address participant, uint256 a, uint256 revealLeftCount, uint256 revealTimestamp);\\n    event Recovered(\\n        address msgSender,\\n        uint256 recov,\\n        uint256 omegaRecov,\\n        uint256 recoveredTimestamp\\n    );\\n    event Start(\\n        address msgSender,\\n        uint256 startTime,\\n        uint256 commitDuration,\\n        uint256 commitRevealDuration,\\n        uint256 n,\\n        uint256 g,\\n        uint256 h,\\n        uint256 T,\\n        uint256 round\\n    );\\n    event CalculatedOmega(\\n        uint256 round,\\n        uint256 omega,\\n        uint256 calculatedTimestamp,\\n        bool isCompleted\\n    );\\n\\n    modifier shouldBeLessThanN(uint256 _value) {\\n        require(_value < valuesAtRound[round].n, \\\"GreaterOrEqualThanN\\\");\\n        _;\\n    }\\n\\n    /* Functions */\\n    /**\\n     */\\n    constructor() {\\n        stage = Stages.Finished;\\n    }\\n\\n    /**\\n     * @param _commit participant's commit value\\n     * @notice Commit function\\n     * @notice The participant's commit value must be less than the modulor\\n     * @notice The participant can only commit once\\n     * @notice check period, update stage if needed, revert if not currently at commit stage\\n     */\\n    function commit(uint256 _commit) public shouldBeLessThanN(_commit) onlyOwner {\\n        require(!userInfosAtRound[msg.sender][round].committed, \\\"AlreadyCommitted\\\");\\n        checkStage();\\n        equalStage(Stages.Commit);\\n        uint256 _count = count;\\n        string memory _commitsString = commitsString;\\n        _commitsString = string.concat(_commitsString, Pietrzak_VDF.toString(_commit));\\n        userInfosAtRound[msg.sender][round] = UserAtRound(_count, true, false);\\n        commitRevealValues[round][_count] = CommitRevealValue(_commit, 0, msg.sender); //index starts from 0, so _count -1\\n        commitsString = _commitsString;\\n        count = ++_count;\\n        emit CommitC(msg.sender, _commit, _commitsString, _count, block.timestamp);\\n    }\\n\\n    /**\\n     * @param _a participant's reveal value\\n     * @notice Reveal function\\n     * @notice h must be set before reveal\\n     * @notice participant must have committed\\n     * @notice participant must not have revealed\\n     * @notice The participant's reveal value must match the commit value\\n     * @notice The participant's reveal value must be less than the modulor\\n     * @notice check period, update stage if needed, revert if not currently at reveal stage\\n     * @notice update omega, count\\n     * @notice if count == 0, update valuesAtRound, stage\\n     * @notice update userInfosAtRound\\n     */\\n    function reveal(uint256 _a) public shouldBeLessThanN(_a) {\\n        uint256 _round = round;\\n        UserAtRound memory _user = userInfosAtRound[msg.sender][_round];\\n        require(_user.committed, \\\"NotCommittedParticipant\\\");\\n        require(!_user.revealed, \\\"AlreadyRevealed\\\");\\n        require(\\n            Pietrzak_VDF.powerModN(valuesAtRound[_round].g, _a, valuesAtRound[_round].n) ==\\n                commitRevealValues[_round][_user.index].c,\\n            \\\"ANotMatchCommit\\\"\\n        );\\n        checkStage();\\n        equalStage(Stages.Reveal);\\n        uint256 _count = --count;\\n        commitRevealValues[_round][_user.index].a = _a;\\n        if (_count == 0) {\\n            stage = Stages.Finished;\\n            valuesAtRound[_round].isAllRevealed = true;\\n        }\\n        userInfosAtRound[msg.sender][_round].revealed = true;\\n        emit RevealA(msg.sender, _a, _count, block.timestamp);\\n    }\\n\\n    function calculateOmega() public returns (uint256) {\\n        uint256 _round = round;\\n        require(valuesAtRound[_round].isAllRevealed, \\\"NotAllRevealed\\\");\\n        require(!valuesAtRound[_round].isCompleted, \\\"OmegaAlreadyCompleted\\\");\\n        checkStage();\\n        equalStage(Stages.Finished);\\n        uint256 _numOfParticipants = valuesAtRound[_round].numOfParticipants;\\n        uint256 _omega = 1;\\n        uint256 _bStar = valuesAtRound[_round].bStar;\\n        uint256 _h = valuesAtRound[round].h;\\n        uint256 _n = valuesAtRound[round].n;\\n        bool _isCompleted = true;\\n        for (uint256 i = 0; i < _numOfParticipants; i++) {\\n            _omega = mulmod(\\n                _omega,\\n                Pietrzak_VDF.powerModN(\\n                    Pietrzak_VDF.powerModN(\\n                        _h,\\n                        uint256(\\n                            keccak256(\\n                                abi.encodePacked(\\n                                    Pietrzak_VDF.toString(commitRevealValues[_round][i].c),\\n                                    Pietrzak_VDF.toString(_bStar)\\n                                )\\n                            )\\n                        ) % _n,\\n                        _n\\n                    ),\\n                    commitRevealValues[_round][i].a,\\n                    _n\\n                ),\\n                _n\\n            );\\n        }\\n        valuesAtRound[_round].omega = _omega;\\n        valuesAtRound[_round].isCompleted = _isCompleted; //false when not all participants have revealed\\n        stage = Stages.Finished;\\n        emit CalculatedOmega(_round, _omega, block.timestamp, _isCompleted);\\n        return _omega;\\n    }\\n\\n    /**\\n     * @param proofs the proof of the recovered value\\n     * @notice Recover function\\n     * @notice The recovered value must be less than the modulor\\n     * @notice revert if currently at commit stage\\n     * @notice revert if count == 0 meaning no one has committed\\n     * @notice calculate and finalize omega\\n     */\\n    function recover(\\n        uint256 _round,\\n        Pietrzak_VDF.VDFClaim[] calldata proofs\\n    ) public shouldBeLessThanN(proofs[0].y) {\\n        uint256 recov = 1;\\n        uint256 _n = valuesAtRound[_round].n;\\n        uint256 _bStar = valuesAtRound[_round].bStar;\\n        //require(stage != Stages.Commit, \\\"FunctionInvalidAtThisStage\\\");\\n        checkStage();\\n        overStage(Stages.Commit);\\n        require(!valuesAtRound[_round].isCompleted, \\\"OmegaAlreadyCompleted\\\");\\n        require(valuesAtRound[_round].T == proofs[0].T, \\\"TNotMatched\\\");\\n        Pietrzak_VDF.verifyRecursiveHalvingProof(proofs);\\n        for (uint256 i = 0; i < valuesAtRound[_round].numOfParticipants; i++) {\\n            uint256 _c = commitRevealValues[_round][i].c;\\n            uint256 temp = Pietrzak_VDF.powerModN(\\n                _c,\\n                uint256(\\n                    keccak256(\\n                        abi.encodePacked(Pietrzak_VDF.toString(_c), Pietrzak_VDF.toString(_bStar))\\n                    )\\n                ) % _n,\\n                _n\\n            );\\n            recov = mulmod(recov, temp, _n);\\n        }\\n        require(recov == proofs[0].x, \\\"RecovNotMatchX\\\");\\n        valuesAtRound[_round].isCompleted = true;\\n        valuesAtRound[_round].omega = proofs[0].y;\\n        stage = Stages.Finished;\\n        emit Recovered(msg.sender, recov, proofs[0].y, block.timestamp);\\n    }\\n\\n    /**\\n     *\\n     * @notice Start function\\n     * @notice The contract must be in the Finished stage\\n     * @notice The commit period must be less than the commit + reveal period\\n     * @notice The g value must be less than the modulor\\n     * @notice reset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omega\\n     * @notice increase round\\n     */\\n    function start(\\n        uint256 _commitDuration,\\n        uint256 _commitRevealDuration,\\n        uint256 _n,\\n        Pietrzak_VDF.VDFClaim[] memory _proofs\\n    ) public {\\n        require(_proofs[0].x < _n, \\\"GreaterOrEqualThanN\\\");\\n\\n        require(\\n            _commitDuration < _commitRevealDuration,\\n            \\\"CommitRevealDurationLessThanCommitDuration\\\"\\n        );\\n        require(stage == Stages.Finished, \\\"StageNotFinished\\\");\\n        Pietrzak_VDF.verifyRecursiveHalvingProof(_proofs);\\n        round += 1;\\n        stage = Stages.Commit;\\n        startTime = block.timestamp;\\n        commitDuration = _commitDuration;\\n        commitRevealDuration = _commitRevealDuration;\\n        valuesAtRound[round].T = _proofs[0].T;\\n        valuesAtRound[round].g = _proofs[0].x;\\n        valuesAtRound[round].h = _proofs[0].y;\\n        valuesAtRound[round].n = _n;\\n        count = 0;\\n        commitsString = \\\"\\\";\\n        emit Start(\\n            msg.sender,\\n            block.timestamp,\\n            _commitDuration,\\n            _commitRevealDuration,\\n            _n,\\n            _proofs[0].x,\\n            _proofs[0].y,\\n            _proofs[0].T,\\n            round\\n        );\\n    }\\n\\n    /**\\n     * @notice checkStage function\\n     * @notice revert if the current stage is not the given stage\\n     * @notice this function is used to check if the current stage is the given stage\\n     * @notice it will update the stage to the next stage if needed\\n     */\\n    function checkStage() public {\\n        uint256 _startTime = startTime;\\n        if (stage == Stages.Commit && block.timestamp >= _startTime + commitDuration) {\\n            if (count != 0) {\\n                nextStage();\\n                valuesAtRound[round].numOfParticipants = count;\\n                uint256 _bStar = uint256(keccak256(abi.encodePacked(commitsString))) %\\n                    valuesAtRound[round].n;\\n                valuesAtRound[round].bStar = _bStar;\\n            } else {\\n                stage = Stages.Finished;\\n            }\\n        }\\n        if (\\n            stage == Stages.Reveal &&\\n            (block.timestamp >= _startTime + commitRevealDuration || count == 0)\\n        ) {\\n            nextStage();\\n        }\\n    }\\n\\n    function equalStage(Stages _stage) internal view {\\n        require(stage == _stage, \\\"FunctionInvalidAtThisStage\\\");\\n    }\\n\\n    function overStage(Stages _stage) internal view {\\n        require(stage > _stage, \\\"FunctionInvalidAtThisStage\\\");\\n    }\\n\\n    /**\\n     * @notice NextStage function\\n     * @notice update stage to the next stage\\n     * @notice revert if the current stage is Finished\\n     */\\n    function nextStage() internal {\\n        require(stage != Stages.Finished, \\\"AllFinished\\\");\\n        stage = Stages(addmod(uint256(stage), 1, 3));\\n    }\\n}\\n\",\"keccak256\":\"0x43fa7d10a1d39e471022ff69818acafa2c11abb0f2cc4de63b786880c2a86890\",\"license\":\"MIT\"},\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":180,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"startTime","offset":0,"slot":"1","type":"t_uint256"},{"astId":182,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitDuration","offset":0,"slot":"2","type":"t_uint256"},{"astId":184,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitRevealDuration","offset":0,"slot":"3","type":"t_uint256"},{"astId":186,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"count","offset":0,"slot":"4","type":"t_uint256"},{"astId":188,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"round","offset":0,"slot":"5","type":"t_uint256"},{"astId":190,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitsString","offset":0,"slot":"6","type":"t_string_storage"},{"astId":193,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"stage","offset":0,"slot":"7","type":"t_enum(Stages)145"},{"astId":200,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"commitRevealValues","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage))"},{"astId":205,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"valuesAtRound","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_struct(ValueAtRound)164_storage)"},{"astId":212,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"userInfosAtRound","offset":0,"slot":"10","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(UserAtRound)178_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_enum(Stages)145":{"encoding":"inplace","label":"enum CommitRecover.Stages","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(UserAtRound)178_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct CommitRecover.UserAtRound))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(UserAtRound)178_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => struct CommitRecover.CommitRevealValue))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage)"},"t_mapping(t_uint256,t_struct(CommitRevealValue)171_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.CommitRevealValue)","numberOfBytes":"32","value":"t_struct(CommitRevealValue)171_storage"},"t_mapping(t_uint256,t_struct(UserAtRound)178_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.UserAtRound)","numberOfBytes":"32","value":"t_struct(UserAtRound)178_storage"},"t_mapping(t_uint256,t_struct(ValueAtRound)164_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct CommitRecover.ValueAtRound)","numberOfBytes":"32","value":"t_struct(ValueAtRound)164_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(CommitRevealValue)171_storage":{"encoding":"inplace","label":"struct CommitRecover.CommitRevealValue","members":[{"astId":166,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"c","offset":0,"slot":"0","type":"t_uint256"},{"astId":168,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"a","offset":0,"slot":"1","type":"t_uint256"},{"astId":170,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"participantAddress","offset":0,"slot":"2","type":"t_address"}],"numberOfBytes":"96"},"t_struct(UserAtRound)178_storage":{"encoding":"inplace","label":"struct CommitRecover.UserAtRound","members":[{"astId":173,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"index","offset":0,"slot":"0","type":"t_uint256"},{"astId":175,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"committed","offset":0,"slot":"1","type":"t_bool"},{"astId":177,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"revealed","offset":1,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_struct(ValueAtRound)164_storage":{"encoding":"inplace","label":"struct CommitRecover.ValueAtRound","members":[{"astId":147,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"omega","offset":0,"slot":"0","type":"t_uint256"},{"astId":149,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"bStar","offset":0,"slot":"1","type":"t_uint256"},{"astId":151,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"numOfParticipants","offset":0,"slot":"2","type":"t_uint256"},{"astId":153,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"g","offset":0,"slot":"3","type":"t_uint256"},{"astId":155,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"h","offset":0,"slot":"4","type":"t_uint256"},{"astId":157,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"n","offset":0,"slot":"5","type":"t_uint256"},{"astId":159,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"T","offset":0,"slot":"6","type":"t_uint256"},{"astId":161,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"isCompleted","offset":0,"slot":"7","type":"t_bool"},{"astId":163,"contract":"contracts/CommitRecover.sol:CommitRecover","label":"isAllRevealed","offset":1,"slot":"7","type":"t_bool"}],"numberOfBytes":"256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"checkStage()":{"notice":"checkStage functionrevert if the current stage is not the given stagethis function is used to check if the current stage is the given stageit will update the stage to the next stage if needed"},"commit(uint256)":{"notice":"Commit functionThe participant's commit value must be less than the modulorThe participant can only commit oncecheck period, update stage if needed, revert if not currently at commit stage"},"recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":{"notice":"Recover functionThe recovered value must be less than the modulorrevert if currently at commit stagerevert if count == 0 meaning no one has committedcalculate and finalize omega"},"reveal(uint256)":{"notice":"Reveal functionh must be set before revealparticipant must have committedparticipant must not have revealedThe participant's reveal value must match the commit valueThe participant's reveal value must be less than the modulorcheck period, update stage if needed, revert if not currently at reveal stageupdate omega, countif count == 0, update valuesAtRound, stageupdate userInfosAtRound"},"start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])":{"notice":"Start functionThe contract must be in the Finished stageThe commit period must be less than the commit + reveal periodThe g value must be less than the modulorreset count, commitsString, isHAndBStarSet, stage, startTime, commitDuration, commitRevealDuration, n, g, omegaincrease round"}},"notice":"This contract is for generating random number    1. Commit: participants commit their value    2. Reveal: participants reveal their value    3. Finished: Calculate or recover the random number    4. go to 1","version":1}}},"contracts/interfaces/ICommitRecover.sol":{"ICommitRecover":{"abi":[{"inputs":[],"name":"calculateOmega","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkStage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commit","type":"uint256"}],"name":"commit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_round","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"proofs","type":"tuple[]"}],"name":"recover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_a","type":"uint256"}],"name":"reveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_commitDuration","type":"uint256"},{"internalType":"uint256","name":"_commitRevealDuration","type":"uint256"},{"internalType":"uint256","name":"_n","type":"uint256"},{"components":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"uint256","name":"x","type":"uint256"},{"internalType":"uint256","name":"y","type":"uint256"},{"internalType":"uint256","name":"T","type":"uint256"},{"internalType":"uint256","name":"v","type":"uint256"}],"internalType":"struct Pietrzak_VDF.VDFClaim[]","name":"_proofs","type":"tuple[]"}],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"calculateOmega()":"12ce9906","checkStage()":"7f93c751","commit(uint256)":"f4f98ad5","recover(uint256,(uint256,uint256,uint256,uint256,uint256)[])":"50d30cbf","reveal(uint256)":"c2ca0ac5","start(uint256,uint256,uint256,(uint256,uint256,uint256,uint256,uint256)[])":"a58be661"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"calculateOmega\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commit\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitRevealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_n\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"T\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"v\",\"type\":\"uint256\"}],\"internalType\":\"struct Pietrzak_VDF.VDFClaim[]\",\"name\":\"_proofs\",\"type\":\"tuple[]\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICommitRecover.sol\":\"ICommitRecover\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICommitRecover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"../libraries/Pietrzak_VDF.sol\\\";\\npragma solidity ^0.8.19;\\n\\ninterface ICommitRecover {\\n    function commit(uint256 _commit) external;\\n\\n    function reveal(uint256 _a) external;\\n\\n    function calculateOmega() external returns (uint256);\\n\\n    function recover(uint256 _round, Pietrzak_VDF.VDFClaim[] calldata proofs) external;\\n\\n    function start(\\n        uint256 _commitDuration,\\n        uint256 _commitRevealDuration,\\n        uint256 _n,\\n        Pietrzak_VDF.VDFClaim[] memory _proofs\\n    ) external;\\n\\n    function checkStage() external;\\n}\\n\",\"keccak256\":\"0xdb5218546071cb45938e6f78a768e4d66cf7a67583977c0ecb8b2102836ca240\",\"license\":\"MIT\"},\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/Pietrzak_VDF.sol":{"Pietrzak_VDF":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e50b4abb639c9c06b3259a10d1a743b62a695aaf774e447582adafc6f9763cf64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E POP 0xB4 0xAB 0xB6 CODECOPY 0xC9 0xC0 PUSH12 0x3259A10D1A743B62A695AAF7 PUSH21 0xE447582ADAFC6F9763CF64736F6C63430008130033 ","sourceMap":"59:4936:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e50b4abb639c9c06b3259a10d1a743b62a695aaf774e447582adafc6f9763cf64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E POP 0xB4 0xAB 0xB6 CODECOPY 0xC9 0xC0 PUSH12 0x3259A10D1A743B62A695AAF7 PUSH21 0xE447582ADAFC6F9763CF64736F6C63430008130033 ","sourceMap":"59:4936:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"log10(uint256)":"infinite","modHash(uint256,string memory)":"infinite","powerModN(uint256,uint256,uint256)":"infinite","processSingleHalvingProof(struct Pietrzak_VDF.VDFClaim memory)":"infinite","toString(uint256)":"infinite","verifyRecursiveHalvingProof(struct Pietrzak_VDF.VDFClaim memory[] memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Pietrzak_VDF.sol\":\"Pietrzak_VDF\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Pietrzak_VDF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.19;\\n\\nlibrary Pietrzak_VDF {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    struct VDFClaim {\\n        uint256 n;\\n        uint256 x;\\n        uint256 y;\\n        uint256 T;\\n        uint256 v;\\n    }\\n\\n    struct SingHalvProofOutput {\\n        bool verified;\\n        bool calculated;\\n        uint256 x_prime;\\n        uint256 y_prime;\\n        uint256 T_half;\\n    }\\n\\n    function modHash(uint256 n, string memory strings) internal pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(strings))) % n;\\n    }\\n\\n    function processSingleHalvingProof(\\n        VDFClaim memory vdfClaim\\n    ) internal pure returns (SingHalvProofOutput memory) {\\n        if (vdfClaim.T == 1) {\\n            if (vdfClaim.y == powerModN(vdfClaim.x, 2, vdfClaim.n)) {\\n                return SingHalvProofOutput(true, false, 0, 0, 0);\\n            } else {\\n                return SingHalvProofOutput(false, false, 0, 0, 0);\\n            }\\n        } else {\\n            uint256 tHalf;\\n            uint256 y = vdfClaim.y;\\n            uint256 r = modHash(\\n                vdfClaim.x,\\n                string.concat(toString(vdfClaim.y), toString(vdfClaim.v))\\n            );\\n\\n            if (vdfClaim.T & 1 == 0) {\\n                tHalf = vdfClaim.T / 2;\\n            } else {\\n                tHalf = (vdfClaim.T + 1) / 2;\\n                y = (y * y) % vdfClaim.n;\\n            }\\n            return\\n                SingHalvProofOutput(\\n                    true,\\n                    true,\\n                    powerModN(powerModN(vdfClaim.x, r, vdfClaim.n), vdfClaim.v, vdfClaim.n),\\n                    powerModN(powerModN(vdfClaim.v, r, vdfClaim.n), y, vdfClaim.n),\\n                    tHalf\\n                );\\n        }\\n    }\\n\\n    function verifyRecursiveHalvingProof(VDFClaim[] memory proofList) internal pure returns (bool) {\\n        uint256 proofSize = proofList.length;\\n\\n        for (uint256 i = 0; i < proofSize; i++) {\\n            SingHalvProofOutput memory output = processSingleHalvingProof(proofList[i]);\\n            if (!output.verified) {\\n                return false;\\n            } else {\\n                if (!output.calculated) return true;\\n                else if (output.x_prime != proofList[i + 1].x) return false;\\n                else if (output.y_prime != proofList[i + 1].y) return false;\\n                else if (output.T_half != proofList[i + 1].T) return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param a base value\\n     * @param b exponent value\\n     * @return result of a^b mod N\\n     * @notice powerModN function\\n     * @notice calculate a^b mod N\\n     * @notice O(log b) complexity\\n     */\\n    function powerModN(uint256 a, uint256 b, uint256 n) internal pure returns (uint256) {\\n        uint256 result = 1;\\n        while (b > 0) {\\n            if (b & 1 == 1) {\\n                result = mulmod(result, a, n);\\n            }\\n            a = mulmod(a, a, n);\\n            b = b / 2;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * openzeppelin-contracts/contracts/utils/math/Math.sol\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x5e09f8bf91c265dd49c63bc6e2d5da94047836709264713440df89ab5882e977\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}